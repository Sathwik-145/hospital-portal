{"ast":null,"code":"// import { useEffect, useState } from 'react';\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [name, setName] = useState('');\n//   const [age, setAge] = useState('');\n//   const [disease, setDisease] = useState('');\n//   const [editingId, setEditingId] = useState(null);\n//   const [toast, setToast] = useState(null);\n\n//   // Mock data for testing\n//   useEffect(() => {\n//     const mockPatients = [\n//       { id: 1, name: 'John Doe', age: 35, disease: 'Hypertension' },\n//       { id: 2, name: 'Jane Smith', age: 28, disease: 'Diabetes' },\n//       { id: 3, name: 'Bob Johnson', age: 45, disease: 'Asthma' },\n//     ];\n//     setPatients(mockPatients);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const newPatient = {\n//       id: editingId || Date.now(),\n//       name,\n//       age: parseInt(age),\n//       disease\n//     };\n\n//     if (editingId) {\n//       setPatients(patients.map(p => p.id === editingId ? newPatient : p));\n//       setToast({ message: 'Patient updated successfully!', type: 'success' });\n//     } else {\n//       setPatients([...patients, newPatient]);\n//       setToast({ message: 'Patient added successfully!', type: 'success' });\n//     }\n\n//     resetForm();\n//   };\n\n//   const handleDelete = (id) => {\n//     if (window.confirm('Are you sure you want to delete this patient?')) {\n//       setPatients(patients.filter(p => p.id !== id));\n//       setToast({ message: 'Patient deleted successfully!', type: 'success' });\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setAge('');\n//     setDisease('');\n//     setShowForm(false);\n//     setEditingId(null);\n//   };\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name);\n//     setAge(String(patient.age));\n//     setDisease(patient.disease);\n//     setEditingId(patient.id);\n//     setShowForm(true);\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">Receptionist Dashboard</h1>\n//         <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//       </div>\n\n//       <div className=\"stats-grid\">\n//         <div className=\"stat-card blue\">\n//           <div className=\"stat-info\">\n//             <h3>Total Patients</h3>\n//             <p>{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card green\">\n//           <div className=\"stat-info\">\n//             <h3>Active Cases</h3>\n//             <p>{patients.filter(p => p.disease).length}</p>\n//           </div>\n//           <div className=\"stat-icon\">📋</div>\n//         </div>\n\n//         <div className=\"stat-card purple\">\n//           <div className=\"stat-info\">\n//             <h3>Today</h3>\n//             <p>{new Date().getDate()}</p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       <div style={{ textAlign: 'center', marginBottom: '32px' }}>\n//         <button\n//           className=\"btn-add\"\n//           onClick={() => setShowForm(!showForm)}\n//         >\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {showForm && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h2 className=\"modal-title\">\n//                 {editingId ? 'Edit Patient' : 'Add New Patient'}\n//               </h2>\n//               <p className=\"modal-subtitle\">\n//                 {editingId ? 'Update patient information' : 'Enter patient details below'}\n//               </p>\n//             </div>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter full name\"\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Age</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter age\"\n//                   value={age}\n//                   onChange={(e) => setAge(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Disease/Condition</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter disease or condition (optional)\"\n//                   value={disease}\n//                   onChange={(e) => setDisease(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"btn btn-submit\">\n//                   {editingId ? 'Update Patient' : 'Add Patient'}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <div className=\"patient-grid\">\n//         {patients.map((patient) => (\n//           <div key={patient.id} className=\"patient-card\">\n//             <div className=\"patient-header\">\n//               <div>\n//                 <h3 className=\"patient-name\">{patient.name}</h3>\n//                 <span className=\"patient-id\">ID: {patient.id}</span>\n//               </div>\n//             </div>\n\n//             <div className=\"patient-details\">\n//               <div className=\"patient-detail\">\n//                 <span>👤</span>\n//                 <span>Age: {patient.age} years</span>\n//               </div>\n//               <div className=\"patient-detail\">\n//                 <span>🏥</span>\n//                 <span>Condition: {patient.disease || 'None specified'}</span>\n//               </div>\n//             </div>\n\n//             <div className=\"patient-actions\">\n//               <button\n//                 onClick={() => handleEdit(patient)}\n//                 className=\"btn btn-edit\"\n//               >\n//                 ✏️ Edit\n//               </button>\n//               <button\n//                 onClick={() => handleDelete(patient.id)}\n//                 className=\"btn btn-delete\"\n//               >\n//                 🗑️ Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {patients.length === 0 && (\n//         <div className=\"empty-state\">\n//           <div className=\"empty-icon\">👥</div>\n//           <h3 className=\"empty-title\">No Patients Yet</h3>\n//           <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//         </div>\n//       )}\n\n//       {toast && (\n//         <div className={`toast ${toast.type === 'success' ? 'toast-success' : 'toast-error'}`}>\n//           <span className=\"toast-icon\">{toast.type === 'success' ? '✅' : '❌'}</span>\n//           <span className=\"toast-message\">{toast.message}</span>\n//           <button className=\"toast-close\" onClick={() => setToast(null)}>\n//             ×\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n///////////////\n\n// import { useEffect, useState } from 'react';\n// import Toast from '../components/Toast';\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [name, setName] = useState('');\n//   const [age, setAge] = useState('');\n//   const [gender, setGender] = useState('');\n//   const [diagnosis, setDiagnosis] = useState('');\n//   const [phoneNumber, setPhoneNumber] = useState('');\n//   const [editingId, setEditingId] = useState(null);\n//   const [toast, setToast] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     fetchPatients();\n//   }, []);\n\n//   const fetchPatients = async () => {\n//     try {\n//       const res = await fetch('http://localhost:8080/api/patients', {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (res.ok) {\n//         const data = await res.json();\n//         setPatients(data);\n//       } else {\n//         setToast({ message: 'Failed to fetch patients', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error fetching patients:', err);\n//       setToast({ message: 'Network error while fetching patients', type: 'error' });\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const patientData = {\n//       name,\n//       age: parseInt(age),\n//       gender,\n//       diagnosis,\n//       phone_number: phoneNumber\n//     };\n\n//     try {\n//       let url = 'http://localhost:8080/api/patients';\n//       let method = 'POST';\n\n//       if (editingId) {\n//         url = `http://localhost:8080/api/patients/${editingId}`;\n//         method = 'PUT';\n//       }\n\n//       const res = await fetch(url, {\n//         method,\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${token}`\n//         },\n//         body: JSON.stringify(patientData)\n//       });\n\n//       if (res.ok) {\n//         const data = await res.json();\n\n//         if (editingId) {\n//           setPatients(patients.map(p => p.id === editingId ? data : p));\n//           setToast({ message: 'Patient updated successfully!', type: 'success' });\n//         } else {\n//           setPatients([...patients, data]);\n//           setToast({ message: 'Patient added successfully!', type: 'success' });\n//         }\n\n//         resetForm();\n//       } else {\n//         const errorData = await res.json();\n//         setToast({ message: errorData.error || 'Failed to save patient', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error saving patient:', err);\n//       setToast({ message: 'Network error while saving patient', type: 'error' });\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm('Are you sure you want to delete this patient?')) return;\n\n//     try {\n//       const res = await fetch(`http://localhost:8080/api/patients/${id}`, {\n//         method: 'DELETE',\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (res.ok) {\n//         setPatients(patients.filter(p => p.id !== id));\n//         setToast({ message: 'Patient deleted successfully!', type: 'success' });\n//       } else {\n//         const errorData = await res.json();\n//         setToast({ message: errorData.error || 'Failed to delete patient', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error deleting patient:', err);\n//       setToast({ message: 'Network error while deleting patient', type: 'error' });\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setAge('');\n//     setGender('');\n//     setDiagnosis('');\n//     setPhoneNumber('');\n//     setShowForm(false);\n//     setEditingId(null);\n//   };\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name);\n//     setAge(String(patient.age));\n//     setGender(patient.gender || '');\n//     setDiagnosis(patient.diagnosis || '');\n//     setPhoneNumber(patient.phone_number || '');\n//     setEditingId(patient.id);\n//     setShowForm(true);\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"flex items-center justify-center h-64\">\n//         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div>\n//       <div className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">Receptionist Dashboard</h1>\n//         <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//       </div>\n\n//       <div className=\"stats-grid\">\n//         <div className=\"stat-card blue\">\n//           <div className=\"stat-info\">\n//             <h3>Total Patients</h3>\n//             <p>{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card green\">\n//           <div className=\"stat-info\">\n//             <h3>Active Cases</h3>\n//             <p>{patients.filter(p => p.diagnosis).length}</p>\n//           </div>\n//           <div className=\"stat-icon\">📋</div>\n//         </div>\n\n//         <div className=\"stat-card purple\">\n//           <div className=\"stat-info\">\n//             <h3>Today</h3>\n//             <p>{new Date().getDate()}</p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       <div style={{ textAlign: 'center', marginBottom: '32px' }}>\n//         <button\n//           className=\"btn-add\"\n//           onClick={() => setShowForm(!showForm)}\n//         >\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {showForm && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h2 className=\"modal-title\">\n//                 {editingId ? 'Edit Patient' : 'Add New Patient'}\n//               </h2>\n//               <p className=\"modal-subtitle\">\n//                 {editingId ? 'Update patient information' : 'Enter patient details below'}\n//               </p>\n//             </div>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter full name\"\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Age</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter age\"\n//                   value={age}\n//                   onChange={(e) => setAge(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Gender</label>\n//                 <select\n//                   className=\"form-select\"\n//                   value={gender}\n//                   onChange={(e) => setGender(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 >\n//                   <option value=\"\">Select gender</option>\n//                   <option value=\"Male\">Male</option>\n//                   <option value=\"Female\">Female</option>\n//                   <option value=\"Other\">Other</option>\n//                 </select>\n//               </div>\n//               // Add this to your patient registration form in ReceptionistDashboard.jsx\n// // In the form section, add this field after gender:\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Relationship to Phone Number Holder *</label>\n//                 <select\n//                   name=\"relationship\"\n//                   className=\"form-input\"\n//                   value={newPatient.relationship || 'self'}\n//                   onChange={handleInputChange}\n//                   required\n//                 >\n//                   <option value=\"self\">Self (I am the patient)</option>\n//                   <option value=\"son\">Son</option>\n//                   <option value=\"daughter\">Daughter</option>\n//                   <option value=\"mother\">Mother</option>\n//                   <option value=\"father\">Father</option>\n//                   <option value=\"spouse\">Spouse/Partner</option>\n//                   <option value=\"brother\">Brother</option>\n//                   <option value=\"sister\">Sister</option>\n//                   <option value=\"grandfather\">Grandfather</option>\n//                   <option value=\"grandmother\">Grandmother</option>\n//                   <option value=\"other\">Other Family Member</option>\n//                 </select>\n//                 <span className=\"helper-text\">\n//                   Who is the patient in relation to the person who owns this phone number?\n//                 </span>\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Diagnosis/Condition</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter diagnosis or condition (optional)\"\n//                   value={diagnosis}\n//                   onChange={(e) => setDiagnosis(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Phone Number</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter phone number\"\n//                   value={phoneNumber}\n//                   onChange={(e) => setPhoneNumber(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"btn btn-submit\">\n//                   {editingId ? 'Update Patient' : 'Add Patient'}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <div className=\"patient-grid\">\n//         {patients.map((patient) => (\n//           <div key={patient.id} className=\"patient-card\">\n//             <div className=\"patient-header\">\n//               <div>\n//                 <h3 className=\"patient-name\">{patient.name}</h3>\n//                 <span className=\"patient-id\">ID: {patient.id}</span>\n//               </div>\n//             </div>\n\n//             <div className=\"patient-details\">\n//               <div className=\"patient-detail\">\n//                 <span>👤</span>\n//                 <span>Age: {patient.age} years</span>\n//               </div>\n//               {patient.gender && (\n//                 <div className=\"patient-detail\">\n//                   <span>⚧️</span>\n//                   <span>Gender: {patient.gender}</span>\n//                 </div>\n//               )}\n//               <div className=\"patient-detail\">\n//                 <span>🏥</span>\n//                 <span>Diagnosis: {patient.diagnosis || 'None specified'}</span>\n//               </div>\n//               {patient.phone_number && (\n//                 <div className=\"patient-detail\">\n//                   <span>📞</span>\n//                   <span>Phone: {patient.phone_number}</span>\n//                 </div>\n//               )}\n//             </div>\n\n//             <div className=\"patient-actions\">\n//               <button\n//                 onClick={() => handleEdit(patient)}\n//                 className=\"btn btn-edit\"\n//               >\n//                 ✏️ Edit\n//               </button>\n//               <button\n//                 onClick={() => handleDelete(patient.id)}\n//                 className=\"btn btn-delete\"\n//               >\n//                 🗑️ Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {patients.length === 0 && (\n//         <div className=\"empty-state\">\n//           <div className=\"empty-icon\">👥</div>\n//           <h3 className=\"empty-title\">No Patients Yet</h3>\n//           <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//         </div>\n//       )}\n\n//       {toast && (\n//         <Toast \n//           message={toast.message} \n//           type={toast.type} \n//           onClose={() => setToast(null)} \n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n\"use client\";\n\nvar _jsxFileName = \"/Users/sathwik/hospital-portal/frontend/src/pages/ReceptionistDashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReceptionistDashboard = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    age: \"\",\n    gender: \"\",\n    diagnosis: \"\",\n    phone_number: \"\",\n    relationship: \"self\"\n  });\n  const [editingPatientId, setEditingPatientId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchPatients = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const res = await fetch(\"http://localhost:8080/api/patients\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        setPatients(data || []);\n      } else {\n        console.error(\"Failed to fetch patients\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching patients:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.name.trim() || !formData.age.trim()) {\n      alert(\"Name and Age are required!\");\n      return;\n    }\n    const patientData = {\n      name: formData.name.trim(),\n      age: Number(formData.age),\n      gender: formData.gender,\n      diagnosis: formData.diagnosis.trim() || \"\",\n      phone_number: formData.phone_number.trim(),\n      relationship: formData.relationship\n    };\n    try {\n      const token = localStorage.getItem(\"token\");\n      const url = editingPatientId ? `http://localhost:8080/api/patients/${editingPatientId}` : \"http://localhost:8080/api/patients\";\n      const method = editingPatientId ? \"PUT\" : \"POST\";\n      const res = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(patientData)\n      });\n      if (res.ok) {\n        alert(editingPatientId ? \"✅ Patient updated\" : \"✅ Patient added\");\n        await fetchPatients();\n        resetForm();\n      } else {\n        const errorData = await res.json();\n        alert(`❌ Failed to save patient: ${errorData.error}`);\n      }\n    } catch (error) {\n      alert(\"❌ Network error\");\n    }\n  };\n  const resetForm = () => {\n    setShowForm(false);\n    setEditingPatientId(null);\n    setFormData({\n      name: \"\",\n      age: \"\",\n      gender: \"\",\n      diagnosis: \"\",\n      phone_number: \"\",\n      relationship: \"self\"\n    });\n  };\n  const handleEdit = patient => {\n    setEditingPatientId(patient.id);\n    setFormData({\n      name: patient.name || \"\",\n      age: String(patient.age) || \"\",\n      gender: patient.gender || \"\",\n      diagnosis: patient.diagnosis || \"\",\n      phone_number: patient.phone_number || \"\",\n      relationship: patient.relationship || \"self\"\n    });\n    setShowForm(true);\n  };\n  const handleDelete = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this patient?\")) return;\n    try {\n      const token = localStorage.getItem(\"token\");\n      const res = await fetch(`http://localhost:8080/api/patients/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (res.ok) {\n        alert(\"🗑️ Patient deleted\");\n        await fetchPatients();\n      } else {\n        alert(\"❌ Failed to delete patient\");\n      }\n    } catch (error) {\n      alert(\"❌ Network error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gradient-to-r from-blue-600 to-purple-600 text-white p-6 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-2\",\n        children: \"\\uD83D\\uDC69\\u200D\\uD83D\\uDCBC Receptionist Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-100\",\n        children: \"Manage patient registrations and appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md border-l-4 border-blue-500\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 text-sm\",\n              children: \"Total Patients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-3xl font-bold text-gray-900\",\n              children: patients.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl text-blue-500\",\n            children: \"\\uD83D\\uDC65\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md border-l-4 border-green-500\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 text-sm\",\n              children: \"New Today\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-3xl font-bold text-gray-900\",\n              children: patients.filter(p => {\n                const today = new Date().toDateString();\n                return new Date(p.created_at).toDateString() === today;\n              }).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl text-green-500\",\n            children: \"\\uD83D\\uDCC5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-md border-l-4 border-purple-500\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 text-sm\",\n              children: \"Active Cases\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-3xl font-bold text-gray-900\",\n              children: patients.filter(p => p.diagnosis && p.diagnosis.trim() !== \"\").length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl text-purple-500\",\n            children: \"\\uD83C\\uDFE5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-900\",\n        children: \"Patient Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowForm(!showForm);\n          if (showForm) resetForm();\n        },\n        className: \"bg-blue-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-700 transition-colors flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: showForm ? \"❌\" : \"➕\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this), showForm ? \"Cancel\" : \"Add Patient\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md border\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-4 text-gray-900\",\n        children: editingPatientId ? \"✏️ Edit Patient\" : \"➕ Add New Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            value: formData.name,\n            onChange: e => setFormData({\n              ...formData,\n              name: e.target.value\n            }),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            placeholder: \"Enter patient name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Age *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            required: true,\n            value: formData.age,\n            onChange: e => setFormData({\n              ...formData,\n              age: e.target.value\n            }),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            placeholder: \"Enter age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.gender,\n            onChange: e => setFormData({\n              ...formData,\n              gender: e.target.value\n            }),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Male\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Female\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            value: formData.phone_number,\n            onChange: e => setFormData({\n              ...formData,\n              phone_number: e.target.value\n            }),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            placeholder: \"Enter phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Relationship\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.relationship,\n            onChange: e => setFormData({\n              ...formData,\n              relationship: e.target.value\n            }),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"self\",\n              children: \"Self\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"father\",\n              children: \"Father\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"mother\",\n              children: \"Mother\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"son\",\n              children: \"Son\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"daughter\",\n              children: \"Daughter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"spouse\",\n              children: \"Spouse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"sibling\",\n              children: \"Sibling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Initial Diagnosis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.diagnosis,\n            onChange: e => setFormData({\n              ...formData,\n              diagnosis: e.target.value\n            }),\n            className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n            placeholder: \"Enter initial diagnosis (optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:col-span-2 flex space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-green-600 text-white px-6 py-2 rounded-lg font-medium hover:bg-green-700 transition-colors flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDCBE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 17\n            }, this), editingPatientId ? \"Update\" : \"Add\", \" Patient\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: resetForm,\n            className: \"bg-gray-500 text-white px-6 py-2 rounded-lg font-medium hover:bg-gray-600 transition-colors\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-6 py-4 border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-gray-900\",\n          children: \"\\uD83D\\uDCCB Patients List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-gray-600\",\n          children: \"Loading patients...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 11\n      }, this) : patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6 text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-4xl mb-2\",\n          children: \"\\uD83D\\uDC65\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No patients found. Add your first patient!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divide-y divide-gray-200\",\n        children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6 hover:bg-gray-50 transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-3 mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"text-lg font-medium text-gray-900\",\n                  children: patient.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 965,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\",\n                  children: [\"ID: \", patient.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 966,\n                  columnNumber: 23\n                }, this), patient.relationship && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bg-purple-100 text-purple-800 text-xs px-2 py-1 rounded-full capitalize\",\n                  children: patient.relationship\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 968,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm text-gray-600\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: \"Age:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 975,\n                    columnNumber: 25\n                  }, this), \" \", patient.age, \" years\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 974,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: \"Gender:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 978,\n                    columnNumber: 25\n                  }, this), \" \", patient.gender || \"N/A\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 977,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: \"Phone:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 981,\n                    columnNumber: 25\n                  }, this), \" \", patient.phone_number || \"N/A\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 980,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium\",\n                    children: \"Diagnosis:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 984,\n                    columnNumber: 25\n                  }, this), \" \", patient.diagnosis || \"N/A\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 983,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2 ml-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(patient),\n                className: \"bg-yellow-500 text-white px-3 py-1 rounded text-sm font-medium hover:bg-yellow-600 transition-colors\",\n                children: \"\\u270F\\uFE0F Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 989,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(patient.id),\n                className: \"bg-red-600 text-white px-3 py-1 rounded text-sm font-medium hover:bg-red-700 transition-colors\",\n                children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 995,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 17\n          }, this)\n        }, patient.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 773,\n    columnNumber: 5\n  }, this);\n};\n_s(ReceptionistDashboard, \"SmN0ot/BsIl0QXMAZBIbYQVhF+w=\");\n_c = ReceptionistDashboard;\nexport default ReceptionistDashboard;\nvar _c;\n$RefreshReg$(_c, \"ReceptionistDashboard\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useState","jsxDEV","_jsxDEV","ReceptionistDashboard","patients","setPatients","showForm","setShowForm","formData","setFormData","name","age","gender","diagnosis","phone_number","relationship","editingPatientId","setEditingPatientId","loading","setLoading","fetchPatients","token","localStorage","getItem","res","fetch","headers","Authorization","ok","data","json","console","error","handleSubmit","e","preventDefault","trim","alert","patientData","Number","url","method","body","JSON","stringify","resetForm","errorData","handleEdit","patient","id","String","handleDelete","window","confirm","className","children","fileName","lineNumber","columnNumber","length","filter","p","today","Date","toDateString","created_at","onClick","onSubmit","type","required","value","onChange","target","placeholder","map","_c","$RefreshReg$"],"sources":["/Users/sathwik/hospital-portal/frontend/src/pages/ReceptionistDashboard.jsx"],"sourcesContent":["// import { useEffect, useState } from 'react';\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [name, setName] = useState('');\n//   const [age, setAge] = useState('');\n//   const [disease, setDisease] = useState('');\n//   const [editingId, setEditingId] = useState(null);\n//   const [toast, setToast] = useState(null);\n\n//   // Mock data for testing\n//   useEffect(() => {\n//     const mockPatients = [\n//       { id: 1, name: 'John Doe', age: 35, disease: 'Hypertension' },\n//       { id: 2, name: 'Jane Smith', age: 28, disease: 'Diabetes' },\n//       { id: 3, name: 'Bob Johnson', age: 45, disease: 'Asthma' },\n//     ];\n//     setPatients(mockPatients);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n    \n//     const newPatient = {\n//       id: editingId || Date.now(),\n//       name,\n//       age: parseInt(age),\n//       disease\n//     };\n\n//     if (editingId) {\n//       setPatients(patients.map(p => p.id === editingId ? newPatient : p));\n//       setToast({ message: 'Patient updated successfully!', type: 'success' });\n//     } else {\n//       setPatients([...patients, newPatient]);\n//       setToast({ message: 'Patient added successfully!', type: 'success' });\n//     }\n    \n//     resetForm();\n//   };\n\n//   const handleDelete = (id) => {\n//     if (window.confirm('Are you sure you want to delete this patient?')) {\n//       setPatients(patients.filter(p => p.id !== id));\n//       setToast({ message: 'Patient deleted successfully!', type: 'success' });\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setAge('');\n//     setDisease('');\n//     setShowForm(false);\n//     setEditingId(null);\n//   };\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name);\n//     setAge(String(patient.age));\n//     setDisease(patient.disease);\n//     setEditingId(patient.id);\n//     setShowForm(true);\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">Receptionist Dashboard</h1>\n//         <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//       </div>\n\n//       <div className=\"stats-grid\">\n//         <div className=\"stat-card blue\">\n//           <div className=\"stat-info\">\n//             <h3>Total Patients</h3>\n//             <p>{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card green\">\n//           <div className=\"stat-info\">\n//             <h3>Active Cases</h3>\n//             <p>{patients.filter(p => p.disease).length}</p>\n//           </div>\n//           <div className=\"stat-icon\">📋</div>\n//         </div>\n\n//         <div className=\"stat-card purple\">\n//           <div className=\"stat-info\">\n//             <h3>Today</h3>\n//             <p>{new Date().getDate()}</p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       <div style={{ textAlign: 'center', marginBottom: '32px' }}>\n//         <button\n//           className=\"btn-add\"\n//           onClick={() => setShowForm(!showForm)}\n//         >\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {showForm && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h2 className=\"modal-title\">\n//                 {editingId ? 'Edit Patient' : 'Add New Patient'}\n//               </h2>\n//               <p className=\"modal-subtitle\">\n//                 {editingId ? 'Update patient information' : 'Enter patient details below'}\n//               </p>\n//             </div>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter full name\"\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Age</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter age\"\n//                   value={age}\n//                   onChange={(e) => setAge(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Disease/Condition</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter disease or condition (optional)\"\n//                   value={disease}\n//                   onChange={(e) => setDisease(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"btn btn-submit\">\n//                   {editingId ? 'Update Patient' : 'Add Patient'}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <div className=\"patient-grid\">\n//         {patients.map((patient) => (\n//           <div key={patient.id} className=\"patient-card\">\n//             <div className=\"patient-header\">\n//               <div>\n//                 <h3 className=\"patient-name\">{patient.name}</h3>\n//                 <span className=\"patient-id\">ID: {patient.id}</span>\n//               </div>\n//             </div>\n            \n//             <div className=\"patient-details\">\n//               <div className=\"patient-detail\">\n//                 <span>👤</span>\n//                 <span>Age: {patient.age} years</span>\n//               </div>\n//               <div className=\"patient-detail\">\n//                 <span>🏥</span>\n//                 <span>Condition: {patient.disease || 'None specified'}</span>\n//               </div>\n//             </div>\n            \n//             <div className=\"patient-actions\">\n//               <button\n//                 onClick={() => handleEdit(patient)}\n//                 className=\"btn btn-edit\"\n//               >\n//                 ✏️ Edit\n//               </button>\n//               <button\n//                 onClick={() => handleDelete(patient.id)}\n//                 className=\"btn btn-delete\"\n//               >\n//                 🗑️ Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {patients.length === 0 && (\n//         <div className=\"empty-state\">\n//           <div className=\"empty-icon\">👥</div>\n//           <h3 className=\"empty-title\">No Patients Yet</h3>\n//           <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//         </div>\n//       )}\n\n//       {toast && (\n//         <div className={`toast ${toast.type === 'success' ? 'toast-success' : 'toast-error'}`}>\n//           <span className=\"toast-icon\">{toast.type === 'success' ? '✅' : '❌'}</span>\n//           <span className=\"toast-message\">{toast.message}</span>\n//           <button className=\"toast-close\" onClick={() => setToast(null)}>\n//             ×\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n///////////////\n\n\n\n// import { useEffect, useState } from 'react';\n// import Toast from '../components/Toast';\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [name, setName] = useState('');\n//   const [age, setAge] = useState('');\n//   const [gender, setGender] = useState('');\n//   const [diagnosis, setDiagnosis] = useState('');\n//   const [phoneNumber, setPhoneNumber] = useState('');\n//   const [editingId, setEditingId] = useState(null);\n//   const [toast, setToast] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     fetchPatients();\n//   }, []);\n\n//   const fetchPatients = async () => {\n//     try {\n//       const res = await fetch('http://localhost:8080/api/patients', {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n      \n//       if (res.ok) {\n//         const data = await res.json();\n//         setPatients(data);\n//       } else {\n//         setToast({ message: 'Failed to fetch patients', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error fetching patients:', err);\n//       setToast({ message: 'Network error while fetching patients', type: 'error' });\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n    \n//     const patientData = {\n//       name,\n//       age: parseInt(age),\n//       gender,\n//       diagnosis,\n//       phone_number: phoneNumber\n//     };\n\n//     try {\n//       let url = 'http://localhost:8080/api/patients';\n//       let method = 'POST';\n      \n//       if (editingId) {\n//         url = `http://localhost:8080/api/patients/${editingId}`;\n//         method = 'PUT';\n//       }\n\n//       const res = await fetch(url, {\n//         method,\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${token}`\n//         },\n//         body: JSON.stringify(patientData)\n//       });\n\n//       if (res.ok) {\n//         const data = await res.json();\n        \n//         if (editingId) {\n//           setPatients(patients.map(p => p.id === editingId ? data : p));\n//           setToast({ message: 'Patient updated successfully!', type: 'success' });\n//         } else {\n//           setPatients([...patients, data]);\n//           setToast({ message: 'Patient added successfully!', type: 'success' });\n//         }\n        \n//         resetForm();\n//       } else {\n//         const errorData = await res.json();\n//         setToast({ message: errorData.error || 'Failed to save patient', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error saving patient:', err);\n//       setToast({ message: 'Network error while saving patient', type: 'error' });\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm('Are you sure you want to delete this patient?')) return;\n\n//     try {\n//       const res = await fetch(`http://localhost:8080/api/patients/${id}`, {\n//         method: 'DELETE',\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (res.ok) {\n//         setPatients(patients.filter(p => p.id !== id));\n//         setToast({ message: 'Patient deleted successfully!', type: 'success' });\n//       } else {\n//         const errorData = await res.json();\n//         setToast({ message: errorData.error || 'Failed to delete patient', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error deleting patient:', err);\n//       setToast({ message: 'Network error while deleting patient', type: 'error' });\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setAge('');\n//     setGender('');\n//     setDiagnosis('');\n//     setPhoneNumber('');\n//     setShowForm(false);\n//     setEditingId(null);\n//   };\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name);\n//     setAge(String(patient.age));\n//     setGender(patient.gender || '');\n//     setDiagnosis(patient.diagnosis || '');\n//     setPhoneNumber(patient.phone_number || '');\n//     setEditingId(patient.id);\n//     setShowForm(true);\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"flex items-center justify-center h-64\">\n//         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div>\n//       <div className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">Receptionist Dashboard</h1>\n//         <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//       </div>\n\n//       <div className=\"stats-grid\">\n//         <div className=\"stat-card blue\">\n//           <div className=\"stat-info\">\n//             <h3>Total Patients</h3>\n//             <p>{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card green\">\n//           <div className=\"stat-info\">\n//             <h3>Active Cases</h3>\n//             <p>{patients.filter(p => p.diagnosis).length}</p>\n//           </div>\n//           <div className=\"stat-icon\">📋</div>\n//         </div>\n\n//         <div className=\"stat-card purple\">\n//           <div className=\"stat-info\">\n//             <h3>Today</h3>\n//             <p>{new Date().getDate()}</p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       <div style={{ textAlign: 'center', marginBottom: '32px' }}>\n//         <button\n//           className=\"btn-add\"\n//           onClick={() => setShowForm(!showForm)}\n//         >\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {showForm && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h2 className=\"modal-title\">\n//                 {editingId ? 'Edit Patient' : 'Add New Patient'}\n//               </h2>\n//               <p className=\"modal-subtitle\">\n//                 {editingId ? 'Update patient information' : 'Enter patient details below'}\n//               </p>\n//             </div>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter full name\"\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Age</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter age\"\n//                   value={age}\n//                   onChange={(e) => setAge(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Gender</label>\n//                 <select\n//                   className=\"form-select\"\n//                   value={gender}\n//                   onChange={(e) => setGender(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 >\n//                   <option value=\"\">Select gender</option>\n//                   <option value=\"Male\">Male</option>\n//                   <option value=\"Female\">Female</option>\n//                   <option value=\"Other\">Other</option>\n//                 </select>\n//               </div>\n//               // Add this to your patient registration form in ReceptionistDashboard.jsx\n// // In the form section, add this field after gender:\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Relationship to Phone Number Holder *</label>\n//                 <select\n//                   name=\"relationship\"\n//                   className=\"form-input\"\n//                   value={newPatient.relationship || 'self'}\n//                   onChange={handleInputChange}\n//                   required\n//                 >\n//                   <option value=\"self\">Self (I am the patient)</option>\n//                   <option value=\"son\">Son</option>\n//                   <option value=\"daughter\">Daughter</option>\n//                   <option value=\"mother\">Mother</option>\n//                   <option value=\"father\">Father</option>\n//                   <option value=\"spouse\">Spouse/Partner</option>\n//                   <option value=\"brother\">Brother</option>\n//                   <option value=\"sister\">Sister</option>\n//                   <option value=\"grandfather\">Grandfather</option>\n//                   <option value=\"grandmother\">Grandmother</option>\n//                   <option value=\"other\">Other Family Member</option>\n//                 </select>\n//                 <span className=\"helper-text\">\n//                   Who is the patient in relation to the person who owns this phone number?\n//                 </span>\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Diagnosis/Condition</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter diagnosis or condition (optional)\"\n//                   value={diagnosis}\n//                   onChange={(e) => setDiagnosis(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Phone Number</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter phone number\"\n//                   value={phoneNumber}\n//                   onChange={(e) => setPhoneNumber(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"btn btn-submit\">\n//                   {editingId ? 'Update Patient' : 'Add Patient'}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <div className=\"patient-grid\">\n//         {patients.map((patient) => (\n//           <div key={patient.id} className=\"patient-card\">\n//             <div className=\"patient-header\">\n//               <div>\n//                 <h3 className=\"patient-name\">{patient.name}</h3>\n//                 <span className=\"patient-id\">ID: {patient.id}</span>\n//               </div>\n//             </div>\n            \n//             <div className=\"patient-details\">\n//               <div className=\"patient-detail\">\n//                 <span>👤</span>\n//                 <span>Age: {patient.age} years</span>\n//               </div>\n//               {patient.gender && (\n//                 <div className=\"patient-detail\">\n//                   <span>⚧️</span>\n//                   <span>Gender: {patient.gender}</span>\n//                 </div>\n//               )}\n//               <div className=\"patient-detail\">\n//                 <span>🏥</span>\n//                 <span>Diagnosis: {patient.diagnosis || 'None specified'}</span>\n//               </div>\n//               {patient.phone_number && (\n//                 <div className=\"patient-detail\">\n//                   <span>📞</span>\n//                   <span>Phone: {patient.phone_number}</span>\n//                 </div>\n//               )}\n//             </div>\n            \n//             <div className=\"patient-actions\">\n//               <button\n//                 onClick={() => handleEdit(patient)}\n//                 className=\"btn btn-edit\"\n//               >\n//                 ✏️ Edit\n//               </button>\n//               <button\n//                 onClick={() => handleDelete(patient.id)}\n//                 className=\"btn btn-delete\"\n//               >\n//                 🗑️ Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {patients.length === 0 && (\n//         <div className=\"empty-state\">\n//           <div className=\"empty-icon\">👥</div>\n//           <h3 className=\"empty-title\">No Patients Yet</h3>\n//           <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//         </div>\n//       )}\n\n//       {toast && (\n//         <Toast \n//           message={toast.message} \n//           type={toast.type} \n//           onClose={() => setToast(null)} \n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n\n\n\n\n\"use client\"\n\nimport { useEffect, useState } from \"react\"\n\nconst ReceptionistDashboard = () => {\n  const [patients, setPatients] = useState([])\n  const [showForm, setShowForm] = useState(false)\n  const [formData, setFormData] = useState({\n    name: \"\",\n    age: \"\",\n    gender: \"\",\n    diagnosis: \"\",\n    phone_number: \"\",\n    relationship: \"self\",\n  })\n  const [editingPatientId, setEditingPatientId] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  const fetchPatients = async () => {\n    try {\n      const token = localStorage.getItem(\"token\")\n      const res = await fetch(\"http://localhost:8080/api/patients\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n\n      if (res.ok) {\n        const data = await res.json()\n        setPatients(data || [])\n      } else {\n        console.error(\"Failed to fetch patients\")\n      }\n    } catch (error) {\n      console.error(\"Error fetching patients:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchPatients()\n  }, [])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (!formData.name.trim() || !formData.age.trim()) {\n      alert(\"Name and Age are required!\")\n      return\n    }\n\n    const patientData = {\n      name: formData.name.trim(),\n      age: Number(formData.age),\n      gender: formData.gender,\n      diagnosis: formData.diagnosis.trim() || \"\",\n      phone_number: formData.phone_number.trim(),\n      relationship: formData.relationship,\n    }\n\n    try {\n      const token = localStorage.getItem(\"token\")\n      const url = editingPatientId\n        ? `http://localhost:8080/api/patients/${editingPatientId}`\n        : \"http://localhost:8080/api/patients\"\n\n      const method = editingPatientId ? \"PUT\" : \"POST\"\n\n      const res = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(patientData),\n      })\n\n      if (res.ok) {\n        alert(editingPatientId ? \"✅ Patient updated\" : \"✅ Patient added\")\n        await fetchPatients()\n        resetForm()\n      } else {\n        const errorData = await res.json()\n        alert(`❌ Failed to save patient: ${errorData.error}`)\n      }\n    } catch (error) {\n      alert(\"❌ Network error\")\n    }\n  }\n\n  const resetForm = () => {\n    setShowForm(false)\n    setEditingPatientId(null)\n    setFormData({\n      name: \"\",\n      age: \"\",\n      gender: \"\",\n      diagnosis: \"\",\n      phone_number: \"\",\n      relationship: \"self\",\n    })\n  }\n\n  const handleEdit = (patient) => {\n    setEditingPatientId(patient.id)\n    setFormData({\n      name: patient.name || \"\",\n      age: String(patient.age) || \"\",\n      gender: patient.gender || \"\",\n      diagnosis: patient.diagnosis || \"\",\n      phone_number: patient.phone_number || \"\",\n      relationship: patient.relationship || \"self\",\n    })\n    setShowForm(true)\n  }\n\n  const handleDelete = async (id) => {\n    if (!window.confirm(\"Are you sure you want to delete this patient?\")) return\n\n    try {\n      const token = localStorage.getItem(\"token\")\n      const res = await fetch(`http://localhost:8080/api/patients/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n\n      if (res.ok) {\n        alert(\"🗑️ Patient deleted\")\n        await fetchPatients()\n      } else {\n        alert(\"❌ Failed to delete patient\")\n      }\n    } catch (error) {\n      alert(\"❌ Network error\")\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white p-6 rounded-lg\">\n        <h1 className=\"text-3xl font-bold mb-2\">👩‍💼 Receptionist Dashboard</h1>\n        <p className=\"text-blue-100\">Manage patient registrations and appointments</p>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <div className=\"bg-white p-6 rounded-lg shadow-md border-l-4 border-blue-500\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">Total Patients</p>\n              <p className=\"text-3xl font-bold text-gray-900\">{patients.length}</p>\n            </div>\n            <div className=\"text-4xl text-blue-500\">👥</div>\n          </div>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow-md border-l-4 border-green-500\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">New Today</p>\n              <p className=\"text-3xl font-bold text-gray-900\">\n                {\n                  patients.filter((p) => {\n                    const today = new Date().toDateString()\n                    return new Date(p.created_at).toDateString() === today\n                  }).length\n                }\n              </p>\n            </div>\n            <div className=\"text-4xl text-green-500\">📅</div>\n          </div>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow-md border-l-4 border-purple-500\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-gray-600 text-sm\">Active Cases</p>\n              <p className=\"text-3xl font-bold text-gray-900\">\n                {patients.filter((p) => p.diagnosis && p.diagnosis.trim() !== \"\").length}\n              </p>\n            </div>\n            <div className=\"text-4xl text-purple-500\">🏥</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Add Patient Button */}\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">Patient Management</h2>\n        <button\n          onClick={() => {\n            setShowForm(!showForm)\n            if (showForm) resetForm()\n          }}\n          className=\"bg-blue-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-700 transition-colors flex items-center gap-2\"\n        >\n          <span>{showForm ? \"❌\" : \"➕\"}</span>\n          {showForm ? \"Cancel\" : \"Add Patient\"}\n        </button>\n      </div>\n\n      {/* Add/Edit Patient Form */}\n      {showForm && (\n        <div className=\"bg-white p-6 rounded-lg shadow-md border\">\n          <h3 className=\"text-xl font-semibold mb-4 text-gray-900\">\n            {editingPatientId ? \"✏️ Edit Patient\" : \"➕ Add New Patient\"}\n          </h3>\n          <form onSubmit={handleSubmit} className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Name *</label>\n              <input\n                type=\"text\"\n                required\n                value={formData.name}\n                onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Enter patient name\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Age *</label>\n              <input\n                type=\"number\"\n                required\n                value={formData.age}\n                onChange={(e) => setFormData({ ...formData, age: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Enter age\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Gender</label>\n              <select\n                value={formData.gender}\n                onChange={(e) => setFormData({ ...formData, gender: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value=\"\">Select Gender</option>\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n                <option value=\"Other\">Other</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Phone Number</label>\n              <input\n                type=\"tel\"\n                value={formData.phone_number}\n                onChange={(e) => setFormData({ ...formData, phone_number: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Enter phone number\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Relationship</label>\n              <select\n                value={formData.relationship}\n                onChange={(e) => setFormData({ ...formData, relationship: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value=\"self\">Self</option>\n                <option value=\"father\">Father</option>\n                <option value=\"mother\">Mother</option>\n                <option value=\"son\">Son</option>\n                <option value=\"daughter\">Daughter</option>\n                <option value=\"spouse\">Spouse</option>\n                <option value=\"sibling\">Sibling</option>\n                <option value=\"other\">Other</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Initial Diagnosis</label>\n              <input\n                type=\"text\"\n                value={formData.diagnosis}\n                onChange={(e) => setFormData({ ...formData, diagnosis: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Enter initial diagnosis (optional)\"\n              />\n            </div>\n\n            <div className=\"md:col-span-2 flex space-x-3\">\n              <button\n                type=\"submit\"\n                className=\"bg-green-600 text-white px-6 py-2 rounded-lg font-medium hover:bg-green-700 transition-colors flex items-center gap-2\"\n              >\n                <span>💾</span>\n                {editingPatientId ? \"Update\" : \"Add\"} Patient\n              </button>\n              <button\n                type=\"button\"\n                onClick={resetForm}\n                className=\"bg-gray-500 text-white px-6 py-2 rounded-lg font-medium hover:bg-gray-600 transition-colors\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* Patients List */}\n      <div className=\"bg-white rounded-lg shadow-md\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-xl font-semibold text-gray-900\">📋 Patients List</h3>\n        </div>\n\n        {loading ? (\n          <div className=\"p-6 text-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"></div>\n            <p className=\"mt-2 text-gray-600\">Loading patients...</p>\n          </div>\n        ) : patients.length === 0 ? (\n          <div className=\"p-6 text-center text-gray-500\">\n            <div className=\"text-4xl mb-2\">👥</div>\n            <p>No patients found. Add your first patient!</p>\n          </div>\n        ) : (\n          <div className=\"divide-y divide-gray-200\">\n            {patients.map((patient) => (\n              <div key={patient.id} className=\"p-6 hover:bg-gray-50 transition-colors\">\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-2\">\n                      <h4 className=\"text-lg font-medium text-gray-900\">{patient.name}</h4>\n                      <span className=\"bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full\">ID: {patient.id}</span>\n                      {patient.relationship && (\n                        <span className=\"bg-purple-100 text-purple-800 text-xs px-2 py-1 rounded-full capitalize\">\n                          {patient.relationship}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm text-gray-600\">\n                      <div>\n                        <span className=\"font-medium\">Age:</span> {patient.age} years\n                      </div>\n                      <div>\n                        <span className=\"font-medium\">Gender:</span> {patient.gender || \"N/A\"}\n                      </div>\n                      <div>\n                        <span className=\"font-medium\">Phone:</span> {patient.phone_number || \"N/A\"}\n                      </div>\n                      <div>\n                        <span className=\"font-medium\">Diagnosis:</span> {patient.diagnosis || \"N/A\"}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex space-x-2 ml-4\">\n                    <button\n                      onClick={() => handleEdit(patient)}\n                      className=\"bg-yellow-500 text-white px-3 py-1 rounded text-sm font-medium hover:bg-yellow-600 transition-colors\"\n                    >\n                      ✏️ Edit\n                    </button>\n                    <button\n                      onClick={() => handleDelete(patient.id)}\n                      className=\"bg-red-600 text-white px-3 py-1 rounded text-sm font-medium hover:bg-red-700 transition-colors\"\n                    >\n                      🗑️ Delete\n                    </button>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ReceptionistDashboard\n"],"mappingsoBA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}