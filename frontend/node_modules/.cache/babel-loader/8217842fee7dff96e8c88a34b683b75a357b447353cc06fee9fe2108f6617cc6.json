{"ast":null,"code":"// import { useEffect, useState } from 'react';\n// import { Navigate, useLocation } from 'react-router-dom';\n\n// const ProtectedRoute = ({ children, allowedRoles = [] }) => {\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const location = useLocation();\n\n//   useEffect(() => {\n//     // Check if user is authenticated\n//     const token = localStorage.getItem('token');\n//     const role = localStorage.getItem('role');\n\n//     if (!token) {\n//       setIsAuthenticated(false);\n//       setIsLoading(false);\n//       return;\n//     }\n\n//     // Check if user role is allowed\n//     const hasAllowedRole = allowedRoles.length === 0 || allowedRoles.includes(role);\n//     setIsAuthenticated(token && hasAllowedRole);\n//     setIsLoading(false);\n//   }, [allowedRoles]);\n\n//   if (isLoading) {\n//     return (\n//       <div style={{\n//         display: 'flex',\n//         alignItems: 'center',\n//         justifyContent: 'center',\n//         height: '100vh',\n//         background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'\n//       }}>\n//         <div style={{\n//           width: '48px',\n//           height: '48px',\n//           border: '4px solid rgba(255, 255, 255, 0.3)',\n//           borderTop: '4px solid white',\n//           borderRadius: '50%',\n//           animation: 'spin 1s linear infinite'\n//         }}></div>\n//       </div>\n//     );\n//   }\n\n//   if (!isAuthenticated) {\n//     // Redirect to login page with return url\n//     return <Navigate to=\"/login\" state={{ from: location.pathname }} replace />;\n//   }\n\n//   return children;\n// };\n\n// export default ProtectedRoute;\n\n\"use client\";\n\nvar _jsxFileName = \"/Users/sathwik/hospital-portal/frontend/src/components/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles = []\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const location = useLocation();\n  useEffect(() => {\n    console.log(\"ProtectedRoute: Checking authentication...\");\n\n    // Check if user is authenticated\n    const token = localStorage.getItem(\"token\");\n    const userData = localStorage.getItem(\"user\");\n    console.log(\"Token exists:\", !!token);\n    console.log(\"User data exists:\", !!userData);\n    if (!token || !userData) {\n      console.log(\"❌ No token or user data found\");\n      setIsAuthenticated(false);\n      setIsLoading(false);\n      return;\n    }\n    try {\n      // Parse the user data to get the role\n      const user = JSON.parse(userData);\n      const role = user.role;\n      console.log(\"✅ User role from localStorage:\", role);\n      console.log(\"✅ Allowed roles:\", allowedRoles);\n\n      // Check if user role is allowed\n      const hasAllowedRole = allowedRoles.length === 0 || allowedRoles.includes(role);\n      if (!hasAllowedRole) {\n        console.log(\"❌ User role not allowed:\", role);\n        setIsAuthenticated(false);\n      } else {\n        console.log(\"✅ User role allowed, granting access\");\n        setIsAuthenticated(true);\n      }\n    } catch (error) {\n      console.error(\"❌ Error parsing user data:\", error);\n      setIsAuthenticated(false);\n      // Clear invalid data\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n    }\n    setIsLoading(false);\n  }, [allowedRoles]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n        background: \"linear-gradient(135deg, #667eea 0%, #764ba2 100%)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"48px\",\n          height: \"48px\",\n          border: \"4px solid rgba(255, 255, 255, 0.3)\",\n          borderTop: \"4px solid white\",\n          borderRadius: \"50%\",\n          animation: \"spin 1s linear infinite\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isAuthenticated) {\n    console.log(\"❌ Not authenticated, redirecting to login\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location.pathname\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(\"✅ Authentication successful, rendering protected content\");\n  return children;\n};\n_s(ProtectedRoute, \"t0acC/Hl2cE5ORJqBjOU6+wiAN4=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useState","Navigate","useLocation","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","location","console","log","token","localStorage","getItem","userData","user","JSON","parse","role","hasAllowedRole","length","includes","error","removeItem","style","display","alignItems","justifyContent","height","background","width","border","borderTop","borderRadius","animation","fileName","lineNumber","columnNumber","to","state","from","pathname","replace","_c","$RefreshReg$"],"sources":["/Users/sathwik/hospital-portal/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["// import { useEffect, useState } from 'react';\n// import { Navigate, useLocation } from 'react-router-dom';\n\n// const ProtectedRoute = ({ children, allowedRoles = [] }) => {\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const location = useLocation();\n\n//   useEffect(() => {\n//     // Check if user is authenticated\n//     const token = localStorage.getItem('token');\n//     const role = localStorage.getItem('role');\n    \n//     if (!token) {\n//       setIsAuthenticated(false);\n//       setIsLoading(false);\n//       return;\n//     }\n\n//     // Check if user role is allowed\n//     const hasAllowedRole = allowedRoles.length === 0 || allowedRoles.includes(role);\n//     setIsAuthenticated(token && hasAllowedRole);\n//     setIsLoading(false);\n//   }, [allowedRoles]);\n\n//   if (isLoading) {\n//     return (\n//       <div style={{\n//         display: 'flex',\n//         alignItems: 'center',\n//         justifyContent: 'center',\n//         height: '100vh',\n//         background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'\n//       }}>\n//         <div style={{\n//           width: '48px',\n//           height: '48px',\n//           border: '4px solid rgba(255, 255, 255, 0.3)',\n//           borderTop: '4px solid white',\n//           borderRadius: '50%',\n//           animation: 'spin 1s linear infinite'\n//         }}></div>\n//       </div>\n//     );\n//   }\n\n//   if (!isAuthenticated) {\n//     // Redirect to login page with return url\n//     return <Navigate to=\"/login\" state={{ from: location.pathname }} replace />;\n//   }\n\n//   return children;\n// };\n\n// export default ProtectedRoute;\n\n\n\n\n\n\n\n\n\n\n\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { Navigate, useLocation } from \"react-router-dom\"\n\nconst ProtectedRoute = ({ children, allowedRoles = [] }) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const location = useLocation()\n\n  useEffect(() => {\n    console.log(\"ProtectedRoute: Checking authentication...\")\n\n    // Check if user is authenticated\n    const token = localStorage.getItem(\"token\")\n    const userData = localStorage.getItem(\"user\")\n\n    console.log(\"Token exists:\", !!token)\n    console.log(\"User data exists:\", !!userData)\n\n    if (!token || !userData) {\n      console.log(\"❌ No token or user data found\")\n      setIsAuthenticated(false)\n      setIsLoading(false)\n      return\n    }\n\n    try {\n      // Parse the user data to get the role\n      const user = JSON.parse(userData)\n      const role = user.role\n\n      console.log(\"✅ User role from localStorage:\", role)\n      console.log(\"✅ Allowed roles:\", allowedRoles)\n\n      // Check if user role is allowed\n      const hasAllowedRole = allowedRoles.length === 0 || allowedRoles.includes(role)\n\n      if (!hasAllowedRole) {\n        console.log(\"❌ User role not allowed:\", role)\n        setIsAuthenticated(false)\n      } else {\n        console.log(\"✅ User role allowed, granting access\")\n        setIsAuthenticated(true)\n      }\n    } catch (error) {\n      console.error(\"❌ Error parsing user data:\", error)\n      setIsAuthenticated(false)\n      // Clear invalid data\n      localStorage.removeItem(\"token\")\n      localStorage.removeItem(\"user\")\n    }\n\n    setIsLoading(false)\n  }, [allowedRoles])\n\n  if (isLoading) {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"100vh\",\n          background: \"linear-gradient(135deg, #667eea 0%, #764ba2 100%)\",\n        }}\n      >\n        <div\n          style={{\n            width: \"48px\",\n            height: \"48px\",\n            border: \"4px solid rgba(255, 255, 255, 0.3)\",\n            borderTop: \"4px solid white\",\n            borderRadius: \"50%\",\n            animation: \"spin 1s linear infinite\",\n          }}\n        ></div>\n      </div>\n    )\n  }\n\n  if (!isAuthenticated) {\n    console.log(\"❌ Not authenticated, redirecting to login\")\n    return <Navigate to=\"/login\" state={{ from: location.pathname }} replace />\n  }\n\n  console.log(\"✅ Authentication successful, rendering protected content\")\n  return children\n}\n\nexport default ProtectedRoute\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}