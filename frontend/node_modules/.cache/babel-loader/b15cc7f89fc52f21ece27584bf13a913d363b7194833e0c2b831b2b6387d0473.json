{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/sathwik/hospital-portal/frontend/src/components/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles = []\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const userData = localStorage.getItem(\"user\");\n    console.log(\"ProtectedRoute - Token:\", token ? \"exists\" : \"missing\");\n    console.log(\"ProtectedRoute - User data:\", userData);\n    if (!token || !userData) {\n      console.log(\"ProtectedRoute - No auth data, redirecting to login\");\n      setLoading(false);\n      return;\n    }\n    try {\n      const user = JSON.parse(userData);\n      console.log(\"ProtectedRoute - Parsed user:\", user);\n      console.log(\"ProtectedRoute - User role:\", user.role);\n      console.log(\"ProtectedRoute - Allowed roles:\", allowedRoles);\n      setIsAuthenticated(true);\n      setUserRole(user.role);\n    } catch (error) {\n      console.error(\"ProtectedRoute - Error parsing user data:\", error);\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n    }\n    setLoading(false);\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ml-4\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isAuthenticated) {\n    console.log(\"ProtectedRoute - Not authenticated, redirecting to login\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  if (allowedRoles.length > 0 && !allowedRoles.includes(userRole)) {\n    console.log(`ProtectedRoute - Role ${userRole} not in allowed roles ${allowedRoles}`);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(\"ProtectedRoute - Access granted for role:\", userRole);\n  return children;\n};\n_s(ProtectedRoute, \"NKWPQ4bx5cryV5wpsBzv/niGOLI=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useState","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","isAuthenticated","setIsAuthenticated","userRole","setUserRole","loading","setLoading","token","localStorage","getItem","userData","console","log","user","JSON","parse","role","error","removeItem","className","fileName","lineNumber","columnNumber","to","replace","length","includes","_c","$RefreshReg$"],"sources":["/Users/sathwik/hospital-portal/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { Navigate } from \"react-router-dom\"\n\nconst ProtectedRoute = ({ children, allowedRoles = [] }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [userRole, setUserRole] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n    const userData = localStorage.getItem(\"user\")\n\n    console.log(\"ProtectedRoute - Token:\", token ? \"exists\" : \"missing\")\n    console.log(\"ProtectedRoute - User data:\", userData)\n\n    if (!token || !userData) {\n      console.log(\"ProtectedRoute - No auth data, redirecting to login\")\n      setLoading(false)\n      return\n    }\n\n    try {\n      const user = JSON.parse(userData)\n      console.log(\"ProtectedRoute - Parsed user:\", user)\n      console.log(\"ProtectedRoute - User role:\", user.role)\n      console.log(\"ProtectedRoute - Allowed roles:\", allowedRoles)\n\n      setIsAuthenticated(true)\n      setUserRole(user.role)\n    } catch (error) {\n      console.error(\"ProtectedRoute - Error parsing user data:\", error)\n      localStorage.removeItem(\"token\")\n      localStorage.removeItem(\"user\")\n    }\n\n    setLoading(false)\n  }, [])\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-500\"></div>\n        <p className=\"ml-4\">Loading...</p>\n      </div>\n    )\n  }\n\n  if (!isAuthenticated) {\n    console.log(\"ProtectedRoute - Not authenticated, redirecting to login\")\n    return <Navigate to=\"/login\" replace />\n  }\n\n  if (allowedRoles.length > 0 && !allowedRoles.includes(userRole)) {\n    console.log(`ProtectedRoute - Role ${userRole} not in allowed roles ${allowedRoles}`)\n    return <Navigate to=\"/login\" replace />\n  }\n\n  console.log(\"ProtectedRoute - Access granted for role:\", userRole)\n  return children\n}\n\nexport default ProtectedRoute\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}