{"ast":null,"code":"var _jsxFileName = \"/Users/sathwik/hospital-portal/frontend/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\n// src/pages/LoginPage.js\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const res = await fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!res.ok) {\n        const errData = await res.json();\n        alert(errData.error || \"Login failed\");\n        return;\n      }\n      const data = await res.json();\n      if (data.token && data.role) {\n        // ✅ Save token and role in localStorage\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('role', data.role);\n        alert(`Welcome! Logged in as ${data.role}`);\n        navigate('/dashboard');\n      } else {\n        alert(\"Login failed: Missing token or role\");\n      }\n    } catch (err) {\n      alert(\"❌ Failed to connect to backend. Please check if Go server is running.\");\n      console.error(\"Login error:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-blue-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      className: \"mb-4 px-4 py-2 border rounded\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"mb-4 px-4 py-2 border rounded\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      className: \"bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","navigate","handleLogin","res","fetch","method","headers","body","JSON","stringify","ok","errData","json","alert","error","data","token","role","localStorage","setItem","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","required","onClick","_c","$RefreshReg$"],"sources":["/Users/sathwik/hospital-portal/frontend/src/pages/LoginPage.js"],"sourcesContent":["// src/pages/LoginPage.js\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    try {\n      const res = await fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (!res.ok) {\n        const errData = await res.json();\n        alert(errData.error || \"Login failed\");\n        return;\n      }\n\n      const data = await res.json();\n\n      if (data.token && data.role) {\n        // ✅ Save token and role in localStorage\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('role', data.role);\n\n        alert(`Welcome! Logged in as ${data.role}`);\n        navigate('/dashboard');\n      } else {\n        alert(\"Login failed: Missing token or role\");\n      }\n    } catch (err) {\n      alert(\"❌ Failed to connect to backend. Please check if Go server is running.\");\n      console.error(\"Login error:\", err);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-blue-100\">\n      <h1 className=\"text-3xl font-bold mb-6\">Login</h1>\n\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        className=\"mb-4 px-4 py-2 border rounded\"\n        required\n      />\n\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        className=\"mb-4 px-4 py-2 border rounded\"\n        required\n      />\n\n      <button\n        onClick={handleLogin}\n        className=\"bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600\"\n      >\n        Login\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}