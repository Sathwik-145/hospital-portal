{"ast":null,"code":"// import { useEffect, useState } from 'react';\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [name, setName] = useState('');\n//   const [age, setAge] = useState('');\n//   const [disease, setDisease] = useState('');\n//   const [editingId, setEditingId] = useState(null);\n//   const [toast, setToast] = useState(null);\n\n//   // Mock data for testing\n//   useEffect(() => {\n//     const mockPatients = [\n//       { id: 1, name: 'John Doe', age: 35, disease: 'Hypertension' },\n//       { id: 2, name: 'Jane Smith', age: 28, disease: 'Diabetes' },\n//       { id: 3, name: 'Bob Johnson', age: 45, disease: 'Asthma' },\n//     ];\n//     setPatients(mockPatients);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const newPatient = {\n//       id: editingId || Date.now(),\n//       name,\n//       age: parseInt(age),\n//       disease\n//     };\n\n//     if (editingId) {\n//       setPatients(patients.map(p => p.id === editingId ? newPatient : p));\n//       setToast({ message: 'Patient updated successfully!', type: 'success' });\n//     } else {\n//       setPatients([...patients, newPatient]);\n//       setToast({ message: 'Patient added successfully!', type: 'success' });\n//     }\n\n//     resetForm();\n//   };\n\n//   const handleDelete = (id) => {\n//     if (window.confirm('Are you sure you want to delete this patient?')) {\n//       setPatients(patients.filter(p => p.id !== id));\n//       setToast({ message: 'Patient deleted successfully!', type: 'success' });\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setAge('');\n//     setDisease('');\n//     setShowForm(false);\n//     setEditingId(null);\n//   };\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name);\n//     setAge(String(patient.age));\n//     setDisease(patient.disease);\n//     setEditingId(patient.id);\n//     setShowForm(true);\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">Receptionist Dashboard</h1>\n//         <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//       </div>\n\n//       <div className=\"stats-grid\">\n//         <div className=\"stat-card blue\">\n//           <div className=\"stat-info\">\n//             <h3>Total Patients</h3>\n//             <p>{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card green\">\n//           <div className=\"stat-info\">\n//             <h3>Active Cases</h3>\n//             <p>{patients.filter(p => p.disease).length}</p>\n//           </div>\n//           <div className=\"stat-icon\">📋</div>\n//         </div>\n\n//         <div className=\"stat-card purple\">\n//           <div className=\"stat-info\">\n//             <h3>Today</h3>\n//             <p>{new Date().getDate()}</p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       <div style={{ textAlign: 'center', marginBottom: '32px' }}>\n//         <button\n//           className=\"btn-add\"\n//           onClick={() => setShowForm(!showForm)}\n//         >\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {showForm && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h2 className=\"modal-title\">\n//                 {editingId ? 'Edit Patient' : 'Add New Patient'}\n//               </h2>\n//               <p className=\"modal-subtitle\">\n//                 {editingId ? 'Update patient information' : 'Enter patient details below'}\n//               </p>\n//             </div>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter full name\"\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Age</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter age\"\n//                   value={age}\n//                   onChange={(e) => setAge(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Disease/Condition</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter disease or condition (optional)\"\n//                   value={disease}\n//                   onChange={(e) => setDisease(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"btn btn-submit\">\n//                   {editingId ? 'Update Patient' : 'Add Patient'}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <div className=\"patient-grid\">\n//         {patients.map((patient) => (\n//           <div key={patient.id} className=\"patient-card\">\n//             <div className=\"patient-header\">\n//               <div>\n//                 <h3 className=\"patient-name\">{patient.name}</h3>\n//                 <span className=\"patient-id\">ID: {patient.id}</span>\n//               </div>\n//             </div>\n\n//             <div className=\"patient-details\">\n//               <div className=\"patient-detail\">\n//                 <span>👤</span>\n//                 <span>Age: {patient.age} years</span>\n//               </div>\n//               <div className=\"patient-detail\">\n//                 <span>🏥</span>\n//                 <span>Condition: {patient.disease || 'None specified'}</span>\n//               </div>\n//             </div>\n\n//             <div className=\"patient-actions\">\n//               <button\n//                 onClick={() => handleEdit(patient)}\n//                 className=\"btn btn-edit\"\n//               >\n//                 ✏️ Edit\n//               </button>\n//               <button\n//                 onClick={() => handleDelete(patient.id)}\n//                 className=\"btn btn-delete\"\n//               >\n//                 🗑️ Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {patients.length === 0 && (\n//         <div className=\"empty-state\">\n//           <div className=\"empty-icon\">👥</div>\n//           <h3 className=\"empty-title\">No Patients Yet</h3>\n//           <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//         </div>\n//       )}\n\n//       {toast && (\n//         <div className={`toast ${toast.type === 'success' ? 'toast-success' : 'toast-error'}`}>\n//           <span className=\"toast-icon\">{toast.type === 'success' ? '✅' : '❌'}</span>\n//           <span className=\"toast-message\">{toast.message}</span>\n//           <button className=\"toast-close\" onClick={() => setToast(null)}>\n//             ×\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n///////////////\n\n// import { useEffect, useState } from 'react';\n// import Toast from '../components/Toast';\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [name, setName] = useState('');\n//   const [age, setAge] = useState('');\n//   const [gender, setGender] = useState('');\n//   const [diagnosis, setDiagnosis] = useState('');\n//   const [phoneNumber, setPhoneNumber] = useState('');\n//   const [editingId, setEditingId] = useState(null);\n//   const [toast, setToast] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     fetchPatients();\n//   }, []);\n\n//   const fetchPatients = async () => {\n//     try {\n//       const res = await fetch('http://localhost:8080/api/patients', {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (res.ok) {\n//         const data = await res.json();\n//         setPatients(data);\n//       } else {\n//         setToast({ message: 'Failed to fetch patients', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error fetching patients:', err);\n//       setToast({ message: 'Network error while fetching patients', type: 'error' });\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const patientData = {\n//       name,\n//       age: parseInt(age),\n//       gender,\n//       diagnosis,\n//       phone_number: phoneNumber\n//     };\n\n//     try {\n//       let url = 'http://localhost:8080/api/patients';\n//       let method = 'POST';\n\n//       if (editingId) {\n//         url = `http://localhost:8080/api/patients/${editingId}`;\n//         method = 'PUT';\n//       }\n\n//       const res = await fetch(url, {\n//         method,\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${token}`\n//         },\n//         body: JSON.stringify(patientData)\n//       });\n\n//       if (res.ok) {\n//         const data = await res.json();\n\n//         if (editingId) {\n//           setPatients(patients.map(p => p.id === editingId ? data : p));\n//           setToast({ message: 'Patient updated successfully!', type: 'success' });\n//         } else {\n//           setPatients([...patients, data]);\n//           setToast({ message: 'Patient added successfully!', type: 'success' });\n//         }\n\n//         resetForm();\n//       } else {\n//         const errorData = await res.json();\n//         setToast({ message: errorData.error || 'Failed to save patient', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error saving patient:', err);\n//       setToast({ message: 'Network error while saving patient', type: 'error' });\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm('Are you sure you want to delete this patient?')) return;\n\n//     try {\n//       const res = await fetch(`http://localhost:8080/api/patients/${id}`, {\n//         method: 'DELETE',\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (res.ok) {\n//         setPatients(patients.filter(p => p.id !== id));\n//         setToast({ message: 'Patient deleted successfully!', type: 'success' });\n//       } else {\n//         const errorData = await res.json();\n//         setToast({ message: errorData.error || 'Failed to delete patient', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error deleting patient:', err);\n//       setToast({ message: 'Network error while deleting patient', type: 'error' });\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setAge('');\n//     setGender('');\n//     setDiagnosis('');\n//     setPhoneNumber('');\n//     setShowForm(false);\n//     setEditingId(null);\n//   };\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name);\n//     setAge(String(patient.age));\n//     setGender(patient.gender || '');\n//     setDiagnosis(patient.diagnosis || '');\n//     setPhoneNumber(patient.phone_number || '');\n//     setEditingId(patient.id);\n//     setShowForm(true);\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"flex items-center justify-center h-64\">\n//         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div>\n//       <div className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">Receptionist Dashboard</h1>\n//         <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//       </div>\n\n//       <div className=\"stats-grid\">\n//         <div className=\"stat-card blue\">\n//           <div className=\"stat-info\">\n//             <h3>Total Patients</h3>\n//             <p>{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card green\">\n//           <div className=\"stat-info\">\n//             <h3>Active Cases</h3>\n//             <p>{patients.filter(p => p.diagnosis).length}</p>\n//           </div>\n//           <div className=\"stat-icon\">📋</div>\n//         </div>\n\n//         <div className=\"stat-card purple\">\n//           <div className=\"stat-info\">\n//             <h3>Today</h3>\n//             <p>{new Date().getDate()}</p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       <div style={{ textAlign: 'center', marginBottom: '32px' }}>\n//         <button\n//           className=\"btn-add\"\n//           onClick={() => setShowForm(!showForm)}\n//         >\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {showForm && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h2 className=\"modal-title\">\n//                 {editingId ? 'Edit Patient' : 'Add New Patient'}\n//               </h2>\n//               <p className=\"modal-subtitle\">\n//                 {editingId ? 'Update patient information' : 'Enter patient details below'}\n//               </p>\n//             </div>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter full name\"\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Age</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter age\"\n//                   value={age}\n//                   onChange={(e) => setAge(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Gender</label>\n//                 <select\n//                   className=\"form-select\"\n//                   value={gender}\n//                   onChange={(e) => setGender(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 >\n//                   <option value=\"\">Select gender</option>\n//                   <option value=\"Male\">Male</option>\n//                   <option value=\"Female\">Female</option>\n//                   <option value=\"Other\">Other</option>\n//                 </select>\n//               </div>\n//               // Add this to your patient registration form in ReceptionistDashboard.jsx\n// // In the form section, add this field after gender:\n\n//             <div className=\"form-group\">\n//               <label className=\"form-label\">Relationship to Phone Number Holder *</label>\n//               <select\n//                 name=\"relationship\"\n//                 className=\"form-input\"\n//                 value={newPatient.relationship || 'self'}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"self\">Self (I am the patient)</option>\n//                 <option value=\"son\">Son</option>\n//                 <option value=\"daughter\">Daughter</option>\n//                 <option value=\"mother\">Mother</option>\n//                 <option value=\"father\">Father</option>\n//                 <option value=\"spouse\">Spouse/Partner</option>\n//                 <option value=\"brother\">Brother</option>\n//                 <option value=\"sister\">Sister</option>\n//                 <option value=\"grandfather\">Grandfather</option>\n//                 <option value=\"grandmother\">Grandmother</option>\n//                 <option value=\"other\">Other Family Member</option>\n//               </select>\n//               <span className=\"helper-text\">\n//                 Who is the patient in relation to the person who owns this phone number?\n//               </span>\n//             </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Diagnosis/Condition</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter diagnosis or condition (optional)\"\n//                   value={diagnosis}\n//                   onChange={(e) => setDiagnosis(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Phone Number</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter phone number\"\n//                   value={phoneNumber}\n//                   onChange={(e) => setPhoneNumber(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"btn btn-submit\">\n//                   {editingId ? 'Update Patient' : 'Add Patient'}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <div className=\"patient-grid\">\n//         {patients.map((patient) => (\n//           <div key={patient.id} className=\"patient-card\">\n//             <div className=\"patient-header\">\n//               <div>\n//                 <h3 className=\"patient-name\">{patient.name}</h3>\n//                 <span className=\"patient-id\">ID: {patient.id}</span>\n//               </div>\n//             </div>\n\n//             <div className=\"patient-details\">\n//               <div className=\"patient-detail\">\n//                 <span>👤</span>\n//                 <span>Age: {patient.age} years</span>\n//               </div>\n//               {patient.gender && (\n//                 <div className=\"patient-detail\">\n//                   <span>⚧️</span>\n//                   <span>Gender: {patient.gender}</span>\n//                 </div>\n//               )}\n//               <div className=\"patient-detail\">\n//                 <span>🏥</span>\n//                 <span>Diagnosis: {patient.diagnosis || 'None specified'}</span>\n//               </div>\n//               {patient.phone_number && (\n//                 <div className=\"patient-detail\">\n//                   <span>📞</span>\n//                   <span>Phone: {patient.phone_number}</span>\n//                 </div>\n//               )}\n//             </div>\n\n//             <div className=\"patient-actions\">\n//               <button\n//                 onClick={() => handleEdit(patient)}\n//                 className=\"btn btn-edit\"\n//               >\n//                 ✏️ Edit\n//               </button>\n//               <button\n//                 onClick={() => handleDelete(patient.id)}\n//                 className=\"btn btn-delete\"\n//               >\n//                 🗑️ Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {patients.length === 0 && (\n//         <div className=\"empty-state\">\n//           <div className=\"empty-icon\">👥</div>\n//           <h3 className=\"empty-title\">No Patients Yet</h3>\n//           <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//         </div>\n//       )}\n\n//       {toast && (\n//         <Toast \n//           message={toast.message} \n//           type={toast.type} \n//           onClose={() => setToast(null)} \n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n\"use client\";\n\nvar _jsxFileName = \"/Users/sathwik/hospital-portal/frontend/src/pages/ReceptionistDashboard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Layout from \"../components/Layout\";\n\n// Simple Toast component since it's missing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toast = ({\n  message,\n  type,\n  onClose\n}) => {\n  _s();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose();\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, [onClose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toast ${type === \"success\" ? \"toast-success\" : \"toast-error\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"toast-icon\",\n      children: type === \"success\" ? \"✅\" : \"❌\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"toast-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toast-close\",\n      onClick: onClose,\n      children: \"\\u2715\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 650,\n    columnNumber: 5\n  }, this);\n};\n_s(Toast, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Toast;\nexport default function ReceptionistDashboard() {\n  _s2();\n  const [patients, setPatients] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [relationship, setRelationship] = useState(\"self\");\n  const [editingId, setEditingId] = useState(null);\n  const [toast, setToast] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const fetchPatients = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8080/api/patients\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (res.ok) {\n        const data = await res.json();\n        setPatients(data || []);\n      } else {\n        setToast({\n          message: \"Failed to fetch patients\",\n          type: \"error\"\n        });\n      }\n    } catch (err) {\n      console.error(\"Error fetching patients:\", err);\n      setToast({\n        message: \"Network error while fetching patients\",\n        type: \"error\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const patientData = {\n      name,\n      age: Number.parseInt(age),\n      gender,\n      diagnosis,\n      phone_number: phoneNumber,\n      relationship\n    };\n    try {\n      let url = \"http://localhost:8080/api/patients\";\n      let method = \"POST\";\n      if (editingId) {\n        url = `http://localhost:8080/api/patients/${editingId}`;\n        method = \"PUT\";\n      }\n      const res = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(patientData)\n      });\n      if (res.ok) {\n        const data = await res.json();\n        if (editingId) {\n          const updatedPatient = data.patient || data;\n          setPatients(patients.map(p => p.id === editingId ? updatedPatient : p));\n          setToast({\n            message: \"Patient updated successfully!\",\n            type: \"success\"\n          });\n        } else {\n          setPatients([...patients, data]);\n          setToast({\n            message: \"Patient added successfully!\",\n            type: \"success\"\n          });\n        }\n        resetForm();\n      } else {\n        const errorData = await res.json();\n        setToast({\n          message: errorData.error || \"Failed to save patient\",\n          type: \"error\"\n        });\n      }\n    } catch (err) {\n      console.error(\"Error saving patient:\", err);\n      setToast({\n        message: \"Network error while saving patient\",\n        type: \"error\"\n      });\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this patient?\")) return;\n    try {\n      const res = await fetch(`http://localhost:8080/api/patients/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (res.ok) {\n        setPatients(patients.filter(p => p.id !== id));\n        setToast({\n          message: \"Patient deleted successfully!\",\n          type: \"success\"\n        });\n      } else {\n        const errorData = await res.json();\n        setToast({\n          message: errorData.error || \"Failed to delete patient\",\n          type: \"error\"\n        });\n      }\n    } catch (err) {\n      console.error(\"Error deleting patient:\", err);\n      setToast({\n        message: \"Network error while deleting patient\",\n        type: \"error\"\n      });\n    }\n  };\n  const resetForm = () => {\n    setName(\"\");\n    setAge(\"\");\n    setGender(\"\");\n    setDiagnosis(\"\");\n    setPhoneNumber(\"\");\n    setRelationship(\"self\");\n    setShowForm(false);\n    setEditingId(null);\n  };\n  const handleEdit = patient => {\n    setName(patient.name);\n    setAge(String(patient.age));\n    setGender(patient.gender || \"\");\n    setDiagnosis(patient.diagnosis || \"\");\n    setPhoneNumber(patient.phone_number || \"\");\n    setRelationship(patient.relationship || \"self\");\n    setEditingId(patient.id);\n    setShowForm(true);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\",\n              padding: \"60px 20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"48px\",\n                height: \"48px\",\n                border: \"4px solid #e5e7eb\",\n                borderTop: \"4px solid #667eea\",\n                borderRadius: \"50%\",\n                animation: \"spin 1s linear infinite\",\n                margin: \"0 auto 16px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"#6b7280\",\n                fontSize: \"16px\"\n              },\n              children: \"Loading patients...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"dashboard-title\",\n            children: \"\\uD83D\\uDC69\\u200D\\uD83D\\uDCBC Receptionist Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dashboard-subtitle\",\n            children: \"Manage patient registrations and information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card blue\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Total Patients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: patients.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: \"\\uD83D\\uDC65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card green\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Active Cases\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: patients.filter(p => p.diagnosis && p.diagnosis !== \"N/A\").length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 845,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 843,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: \"\\uD83D\\uDCCB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card purple\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"New Today\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: patients.filter(p => p.created_at && new Date(p.created_at).toDateString() === new Date().toDateString()).length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 853,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: \"\\uD83D\\uDCC5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card orange\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Family Members\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: patients.filter(p => p.relationship !== \"self\").length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: \"\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            marginBottom: \"32px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-add\",\n            onClick: () => setShowForm(!showForm),\n            children: \"\\u2795 Add New Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 11\n        }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"modal-title\",\n                children: editingId ? \"Edit Patient\" : \"Add New Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"modal-subtitle\",\n                children: editingId ? \"Update patient information\" : \"Enter patient details below\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 882,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"\\uD83D\\uDC64 Full Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 891,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-input\",\n                  placeholder: \"Enter full name\",\n                  value: name,\n                  onChange: e => setName(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 892,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"\\uD83C\\uDF82 Age\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-input\",\n                  placeholder: \"Enter age\",\n                  value: age,\n                  onChange: e => setAge(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 904,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 902,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"\\u26A7\\uFE0F Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 915,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-input\",\n                  value: gender,\n                  onChange: e => setGender(e.target.value),\n                  style: {\n                    paddingLeft: \"16px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select gender\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 922,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Male\",\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 923,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Female\",\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 924,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Other\",\n                    children: \"Other\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 925,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 916,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 914,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"\\uD83D\\uDC65 Relationship to Phone Number Holder\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 930,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-input\",\n                  value: relationship,\n                  onChange: e => setRelationship(e.target.value),\n                  required: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"self\",\n                    children: \"Self (I am the patient)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 937,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"son\",\n                    children: \"Son\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 938,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"daughter\",\n                    children: \"Daughter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 939,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"mother\",\n                    children: \"Mother\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 940,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"father\",\n                    children: \"Father\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 941,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"spouse\",\n                    children: \"Spouse/Partner\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 942,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"brother\",\n                    children: \"Brother\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 943,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"sister\",\n                    children: \"Sister\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 944,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"grandfather\",\n                    children: \"Grandfather\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 945,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"grandmother\",\n                    children: \"Grandmother\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 946,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"other\",\n                    children: \"Other Family Member\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 947,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 931,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"\\uD83C\\uDFE5 Diagnosis/Condition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 952,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-input\",\n                  placeholder: \"Enter diagnosis or condition (optional)\",\n                  value: diagnosis,\n                  onChange: e => setDiagnosis(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 953,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 951,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"\\uD83D\\uDCDE Phone Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 963,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-input\",\n                  placeholder: \"Enter phone number\",\n                  value: phoneNumber,\n                  onChange: e => setPhoneNumber(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 964,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-cancel\",\n                  onClick: resetForm,\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 974,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-submit\",\n                  children: editingId ? \"Update Patient\" : \"Add Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 977,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"32px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              fontSize: \"24px\",\n              fontWeight: \"bold\",\n              marginBottom: \"16px\",\n              color: \"#1f2937\"\n            },\n            children: \"\\uD83D\\uDCCB Patients List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"#6b7280\",\n              marginBottom: \"24px\"\n            },\n            children: \"Manage all registered patients and their information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 13\n          }, this), patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-icon\",\n              children: \"\\uD83D\\uDC65\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"empty-title\",\n              children: \"No Patients Yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-subtitle\",\n              children: \"Start by adding your first patient to the system.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 995,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"patient-grid\",\n            children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"patient-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"patient-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"patient-name\",\n                    children: [patient.relationship === \"self\" ? \"👤\" : \"👥\", \" \", patient.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1006,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"patient-id\",\n                    children: [\"ID: \", patient.id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1009,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1005,\n                  columnNumber: 23\n                }, this), patient.relationship !== \"self\" && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    background: \"#e0e7ff\",\n                    color: \"#4338ca\",\n                    padding: \"4px 12px\",\n                    borderRadius: \"20px\",\n                    fontSize: \"12px\",\n                    fontWeight: \"600\"\n                  },\n                  children: patient.relationship\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1012,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1004,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"patient-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"patient-detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uD83C\\uDF82\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1029,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Age: \", patient.age, \" years\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1030,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1028,\n                  columnNumber: 23\n                }, this), patient.gender && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"patient-detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u26A7\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1034,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Gender: \", patient.gender]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1035,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1033,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"patient-detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uD83C\\uDFE5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1039,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Diagnosis: \", patient.diagnosis || \"None specified\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1040,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1038,\n                  columnNumber: 23\n                }, this), patient.phone_number && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"patient-detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uD83D\\uDCDE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1044,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Phone: \", patient.phone_number]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1045,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 25\n                }, this), patient.relationship && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"patient-detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uD83D\\uDC65\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1050,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Relationship: \", patient.relationship]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1051,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1049,\n                  columnNumber: 25\n                }, this), patient.created_at && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"patient-detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\uD83D\\uDCC5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1056,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Registered: \", new Date(patient.created_at).toLocaleDateString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1057,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1055,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1027,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"patient-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(patient),\n                  className: \"btn btn-edit\",\n                  children: \"\\u270F\\uFE0F Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1063,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDelete(patient.id),\n                  className: \"btn btn-delete\",\n                  children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1066,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 21\n              }, this)]\n            }, patient.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1003,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 11\n        }, this), toast && /*#__PURE__*/_jsxDEV(Toast, {\n          message: toast.message,\n          type: toast.type,\n          onClose: () => setToast(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 825,\n    columnNumber: 5\n  }, this);\n}\n_s2(ReceptionistDashboard, \"nImDN29+khYSxQ8eJd0ed5mdRww=\");\n_c2 = ReceptionistDashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Toast\");\n$RefreshReg$(_c2, \"ReceptionistDashboard\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","useEffect","useState","Layout","jsxDEV","_jsxDEV","Toast","message","type","onClose","timer","setTimeout","clearTimeout","className","children","fileName","lineNumber","columnNumber","onClick","_c","ReceptionistDashboard","patients","setPatients","showForm","setShowForm","name","setName","age","setAge","gender","setGender","diagnosis","setDiagnosis","phoneNumber","setPhoneNumber","relationship","setRelationship","editingId","setEditingId","toast","setToast","loading","setLoading","token","localStorage","getItem","fetchPatients","res","fetch","headers","Authorization","ok","data","json","err","console","error","handleSubmit","e","preventDefault","patientData","Number","parseInt","phone_number","url","method","body","JSON","stringify","updatedPatient","patient","map","p","id","resetForm","errorData","handleDelete","window","confirm","filter","handleEdit","String","style","textAlign","padding","width","height","border","borderTop","borderRadius","animation","margin","color","fontSize","length","created_at","Date","toDateString","marginBottom","onSubmit","placeholder","value","onChange","target","required","paddingLeft","fontWeight","background","toLocaleDateString","_c2","$RefreshReg$"],"sources":["/Users/sathwik/hospital-portal/frontend/src/pages/ReceptionistDashboard.jsx"],"sourcesContent":["// import { useEffect, useState } from 'react';\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [name, setName] = useState('');\n//   const [age, setAge] = useState('');\n//   const [disease, setDisease] = useState('');\n//   const [editingId, setEditingId] = useState(null);\n//   const [toast, setToast] = useState(null);\n\n//   // Mock data for testing\n//   useEffect(() => {\n//     const mockPatients = [\n//       { id: 1, name: 'John Doe', age: 35, disease: 'Hypertension' },\n//       { id: 2, name: 'Jane Smith', age: 28, disease: 'Diabetes' },\n//       { id: 3, name: 'Bob Johnson', age: 45, disease: 'Asthma' },\n//     ];\n//     setPatients(mockPatients);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n    \n//     const newPatient = {\n//       id: editingId || Date.now(),\n//       name,\n//       age: parseInt(age),\n//       disease\n//     };\n\n//     if (editingId) {\n//       setPatients(patients.map(p => p.id === editingId ? newPatient : p));\n//       setToast({ message: 'Patient updated successfully!', type: 'success' });\n//     } else {\n//       setPatients([...patients, newPatient]);\n//       setToast({ message: 'Patient added successfully!', type: 'success' });\n//     }\n    \n//     resetForm();\n//   };\n\n//   const handleDelete = (id) => {\n//     if (window.confirm('Are you sure you want to delete this patient?')) {\n//       setPatients(patients.filter(p => p.id !== id));\n//       setToast({ message: 'Patient deleted successfully!', type: 'success' });\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setAge('');\n//     setDisease('');\n//     setShowForm(false);\n//     setEditingId(null);\n//   };\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name);\n//     setAge(String(patient.age));\n//     setDisease(patient.disease);\n//     setEditingId(patient.id);\n//     setShowForm(true);\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">Receptionist Dashboard</h1>\n//         <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//       </div>\n\n//       <div className=\"stats-grid\">\n//         <div className=\"stat-card blue\">\n//           <div className=\"stat-info\">\n//             <h3>Total Patients</h3>\n//             <p>{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card green\">\n//           <div className=\"stat-info\">\n//             <h3>Active Cases</h3>\n//             <p>{patients.filter(p => p.disease).length}</p>\n//           </div>\n//           <div className=\"stat-icon\">📋</div>\n//         </div>\n\n//         <div className=\"stat-card purple\">\n//           <div className=\"stat-info\">\n//             <h3>Today</h3>\n//             <p>{new Date().getDate()}</p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       <div style={{ textAlign: 'center', marginBottom: '32px' }}>\n//         <button\n//           className=\"btn-add\"\n//           onClick={() => setShowForm(!showForm)}\n//         >\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {showForm && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h2 className=\"modal-title\">\n//                 {editingId ? 'Edit Patient' : 'Add New Patient'}\n//               </h2>\n//               <p className=\"modal-subtitle\">\n//                 {editingId ? 'Update patient information' : 'Enter patient details below'}\n//               </p>\n//             </div>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter full name\"\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Age</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter age\"\n//                   value={age}\n//                   onChange={(e) => setAge(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Disease/Condition</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter disease or condition (optional)\"\n//                   value={disease}\n//                   onChange={(e) => setDisease(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"btn btn-submit\">\n//                   {editingId ? 'Update Patient' : 'Add Patient'}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <div className=\"patient-grid\">\n//         {patients.map((patient) => (\n//           <div key={patient.id} className=\"patient-card\">\n//             <div className=\"patient-header\">\n//               <div>\n//                 <h3 className=\"patient-name\">{patient.name}</h3>\n//                 <span className=\"patient-id\">ID: {patient.id}</span>\n//               </div>\n//             </div>\n            \n//             <div className=\"patient-details\">\n//               <div className=\"patient-detail\">\n//                 <span>👤</span>\n//                 <span>Age: {patient.age} years</span>\n//               </div>\n//               <div className=\"patient-detail\">\n//                 <span>🏥</span>\n//                 <span>Condition: {patient.disease || 'None specified'}</span>\n//               </div>\n//             </div>\n            \n//             <div className=\"patient-actions\">\n//               <button\n//                 onClick={() => handleEdit(patient)}\n//                 className=\"btn btn-edit\"\n//               >\n//                 ✏️ Edit\n//               </button>\n//               <button\n//                 onClick={() => handleDelete(patient.id)}\n//                 className=\"btn btn-delete\"\n//               >\n//                 🗑️ Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {patients.length === 0 && (\n//         <div className=\"empty-state\">\n//           <div className=\"empty-icon\">👥</div>\n//           <h3 className=\"empty-title\">No Patients Yet</h3>\n//           <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//         </div>\n//       )}\n\n//       {toast && (\n//         <div className={`toast ${toast.type === 'success' ? 'toast-success' : 'toast-error'}`}>\n//           <span className=\"toast-icon\">{toast.type === 'success' ? '✅' : '❌'}</span>\n//           <span className=\"toast-message\">{toast.message}</span>\n//           <button className=\"toast-close\" onClick={() => setToast(null)}>\n//             ×\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n///////////////\n\n\n\n// import { useEffect, useState } from 'react';\n// import Toast from '../components/Toast';\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [name, setName] = useState('');\n//   const [age, setAge] = useState('');\n//   const [gender, setGender] = useState('');\n//   const [diagnosis, setDiagnosis] = useState('');\n//   const [phoneNumber, setPhoneNumber] = useState('');\n//   const [editingId, setEditingId] = useState(null);\n//   const [toast, setToast] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     fetchPatients();\n//   }, []);\n\n//   const fetchPatients = async () => {\n//     try {\n//       const res = await fetch('http://localhost:8080/api/patients', {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n      \n//       if (res.ok) {\n//         const data = await res.json();\n//         setPatients(data);\n//       } else {\n//         setToast({ message: 'Failed to fetch patients', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error fetching patients:', err);\n//       setToast({ message: 'Network error while fetching patients', type: 'error' });\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n    \n//     const patientData = {\n//       name,\n//       age: parseInt(age),\n//       gender,\n//       diagnosis,\n//       phone_number: phoneNumber\n//     };\n\n//     try {\n//       let url = 'http://localhost:8080/api/patients';\n//       let method = 'POST';\n      \n//       if (editingId) {\n//         url = `http://localhost:8080/api/patients/${editingId}`;\n//         method = 'PUT';\n//       }\n\n//       const res = await fetch(url, {\n//         method,\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${token}`\n//         },\n//         body: JSON.stringify(patientData)\n//       });\n\n//       if (res.ok) {\n//         const data = await res.json();\n        \n//         if (editingId) {\n//           setPatients(patients.map(p => p.id === editingId ? data : p));\n//           setToast({ message: 'Patient updated successfully!', type: 'success' });\n//         } else {\n//           setPatients([...patients, data]);\n//           setToast({ message: 'Patient added successfully!', type: 'success' });\n//         }\n        \n//         resetForm();\n//       } else {\n//         const errorData = await res.json();\n//         setToast({ message: errorData.error || 'Failed to save patient', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error saving patient:', err);\n//       setToast({ message: 'Network error while saving patient', type: 'error' });\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm('Are you sure you want to delete this patient?')) return;\n\n//     try {\n//       const res = await fetch(`http://localhost:8080/api/patients/${id}`, {\n//         method: 'DELETE',\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (res.ok) {\n//         setPatients(patients.filter(p => p.id !== id));\n//         setToast({ message: 'Patient deleted successfully!', type: 'success' });\n//       } else {\n//         const errorData = await res.json();\n//         setToast({ message: errorData.error || 'Failed to delete patient', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error deleting patient:', err);\n//       setToast({ message: 'Network error while deleting patient', type: 'error' });\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setAge('');\n//     setGender('');\n//     setDiagnosis('');\n//     setPhoneNumber('');\n//     setShowForm(false);\n//     setEditingId(null);\n//   };\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name);\n//     setAge(String(patient.age));\n//     setGender(patient.gender || '');\n//     setDiagnosis(patient.diagnosis || '');\n//     setPhoneNumber(patient.phone_number || '');\n//     setEditingId(patient.id);\n//     setShowForm(true);\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"flex items-center justify-center h-64\">\n//         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div>\n//       <div className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">Receptionist Dashboard</h1>\n//         <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//       </div>\n\n//       <div className=\"stats-grid\">\n//         <div className=\"stat-card blue\">\n//           <div className=\"stat-info\">\n//             <h3>Total Patients</h3>\n//             <p>{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card green\">\n//           <div className=\"stat-info\">\n//             <h3>Active Cases</h3>\n//             <p>{patients.filter(p => p.diagnosis).length}</p>\n//           </div>\n//           <div className=\"stat-icon\">📋</div>\n//         </div>\n\n//         <div className=\"stat-card purple\">\n//           <div className=\"stat-info\">\n//             <h3>Today</h3>\n//             <p>{new Date().getDate()}</p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       <div style={{ textAlign: 'center', marginBottom: '32px' }}>\n//         <button\n//           className=\"btn-add\"\n//           onClick={() => setShowForm(!showForm)}\n//         >\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {showForm && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h2 className=\"modal-title\">\n//                 {editingId ? 'Edit Patient' : 'Add New Patient'}\n//               </h2>\n//               <p className=\"modal-subtitle\">\n//                 {editingId ? 'Update patient information' : 'Enter patient details below'}\n//               </p>\n//             </div>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter full name\"\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Age</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter age\"\n//                   value={age}\n//                   onChange={(e) => setAge(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Gender</label>\n//                 <select\n//                   className=\"form-select\"\n//                   value={gender}\n//                   onChange={(e) => setGender(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 >\n//                   <option value=\"\">Select gender</option>\n//                   <option value=\"Male\">Male</option>\n//                   <option value=\"Female\">Female</option>\n//                   <option value=\"Other\">Other</option>\n//                 </select>\n//               </div>\n//               // Add this to your patient registration form in ReceptionistDashboard.jsx\n// // In the form section, add this field after gender:\n\n//             <div className=\"form-group\">\n//               <label className=\"form-label\">Relationship to Phone Number Holder *</label>\n//               <select\n//                 name=\"relationship\"\n//                 className=\"form-input\"\n//                 value={newPatient.relationship || 'self'}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"self\">Self (I am the patient)</option>\n//                 <option value=\"son\">Son</option>\n//                 <option value=\"daughter\">Daughter</option>\n//                 <option value=\"mother\">Mother</option>\n//                 <option value=\"father\">Father</option>\n//                 <option value=\"spouse\">Spouse/Partner</option>\n//                 <option value=\"brother\">Brother</option>\n//                 <option value=\"sister\">Sister</option>\n//                 <option value=\"grandfather\">Grandfather</option>\n//                 <option value=\"grandmother\">Grandmother</option>\n//                 <option value=\"other\">Other Family Member</option>\n//               </select>\n//               <span className=\"helper-text\">\n//                 Who is the patient in relation to the person who owns this phone number?\n//               </span>\n//             </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Diagnosis/Condition</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter diagnosis or condition (optional)\"\n//                   value={diagnosis}\n//                   onChange={(e) => setDiagnosis(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Phone Number</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter phone number\"\n//                   value={phoneNumber}\n//                   onChange={(e) => setPhoneNumber(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"btn btn-submit\">\n//                   {editingId ? 'Update Patient' : 'Add Patient'}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <div className=\"patient-grid\">\n//         {patients.map((patient) => (\n//           <div key={patient.id} className=\"patient-card\">\n//             <div className=\"patient-header\">\n//               <div>\n//                 <h3 className=\"patient-name\">{patient.name}</h3>\n//                 <span className=\"patient-id\">ID: {patient.id}</span>\n//               </div>\n//             </div>\n            \n//             <div className=\"patient-details\">\n//               <div className=\"patient-detail\">\n//                 <span>👤</span>\n//                 <span>Age: {patient.age} years</span>\n//               </div>\n//               {patient.gender && (\n//                 <div className=\"patient-detail\">\n//                   <span>⚧️</span>\n//                   <span>Gender: {patient.gender}</span>\n//                 </div>\n//               )}\n//               <div className=\"patient-detail\">\n//                 <span>🏥</span>\n//                 <span>Diagnosis: {patient.diagnosis || 'None specified'}</span>\n//               </div>\n//               {patient.phone_number && (\n//                 <div className=\"patient-detail\">\n//                   <span>📞</span>\n//                   <span>Phone: {patient.phone_number}</span>\n//                 </div>\n//               )}\n//             </div>\n            \n//             <div className=\"patient-actions\">\n//               <button\n//                 onClick={() => handleEdit(patient)}\n//                 className=\"btn btn-edit\"\n//               >\n//                 ✏️ Edit\n//               </button>\n//               <button\n//                 onClick={() => handleDelete(patient.id)}\n//                 className=\"btn btn-delete\"\n//               >\n//                 🗑️ Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {patients.length === 0 && (\n//         <div className=\"empty-state\">\n//           <div className=\"empty-icon\">👥</div>\n//           <h3 className=\"empty-title\">No Patients Yet</h3>\n//           <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//         </div>\n//       )}\n\n//       {toast && (\n//         <Toast \n//           message={toast.message} \n//           type={toast.type} \n//           onClose={() => setToast(null)} \n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport Layout from \"../components/Layout\"\n\n// Simple Toast component since it's missing\nconst Toast = ({ message, type, onClose }) => {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose()\n    }, 3000)\n    return () => clearTimeout(timer)\n  }, [onClose])\n\n  return (\n    <div className={`toast ${type === \"success\" ? \"toast-success\" : \"toast-error\"}`}>\n      <span className=\"toast-icon\">{type === \"success\" ? \"✅\" : \"❌\"}</span>\n      <span className=\"toast-message\">{message}</span>\n      <button className=\"toast-close\" onClick={onClose}>\n        ✕\n      </button>\n    </div>\n  )\n}\n\nexport default function ReceptionistDashboard() {\n  const [patients, setPatients] = useState([])\n  const [showForm, setShowForm] = useState(false)\n  const [name, setName] = useState(\"\")\n  const [age, setAge] = useState(\"\")\n  const [gender, setGender] = useState(\"\")\n  const [diagnosis, setDiagnosis] = useState(\"\")\n  const [phoneNumber, setPhoneNumber] = useState(\"\")\n  const [relationship, setRelationship] = useState(\"self\")\n  const [editingId, setEditingId] = useState(null)\n  const [toast, setToast] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const token = localStorage.getItem(\"token\")\n\n  useEffect(() => {\n    fetchPatients()\n  }, [])\n\n  const fetchPatients = async () => {\n    try {\n      const res = await fetch(\"http://localhost:8080/api/patients\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n\n      if (res.ok) {\n        const data = await res.json()\n        setPatients(data || [])\n      } else {\n        setToast({ message: \"Failed to fetch patients\", type: \"error\" })\n      }\n    } catch (err) {\n      console.error(\"Error fetching patients:\", err)\n      setToast({ message: \"Network error while fetching patients\", type: \"error\" })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    const patientData = {\n      name,\n      age: Number.parseInt(age),\n      gender,\n      diagnosis,\n      phone_number: phoneNumber,\n      relationship,\n    }\n\n    try {\n      let url = \"http://localhost:8080/api/patients\"\n      let method = \"POST\"\n\n      if (editingId) {\n        url = `http://localhost:8080/api/patients/${editingId}`\n        method = \"PUT\"\n      }\n\n      const res = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(patientData),\n      })\n\n      if (res.ok) {\n        const data = await res.json()\n\n        if (editingId) {\n          const updatedPatient = data.patient || data\n          setPatients(patients.map((p) => (p.id === editingId ? updatedPatient : p)))\n          setToast({ message: \"Patient updated successfully!\", type: \"success\" })\n        } else {\n          setPatients([...patients, data])\n          setToast({ message: \"Patient added successfully!\", type: \"success\" })\n        }\n\n        resetForm()\n      } else {\n        const errorData = await res.json()\n        setToast({ message: errorData.error || \"Failed to save patient\", type: \"error\" })\n      }\n    } catch (err) {\n      console.error(\"Error saving patient:\", err)\n      setToast({ message: \"Network error while saving patient\", type: \"error\" })\n    }\n  }\n\n  const handleDelete = async (id) => {\n    if (!window.confirm(\"Are you sure you want to delete this patient?\")) return\n\n    try {\n      const res = await fetch(`http://localhost:8080/api/patients/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n\n      if (res.ok) {\n        setPatients(patients.filter((p) => p.id !== id))\n        setToast({ message: \"Patient deleted successfully!\", type: \"success\" })\n      } else {\n        const errorData = await res.json()\n        setToast({ message: errorData.error || \"Failed to delete patient\", type: \"error\" })\n      }\n    } catch (err) {\n      console.error(\"Error deleting patient:\", err)\n      setToast({ message: \"Network error while deleting patient\", type: \"error\" })\n    }\n  }\n\n  const resetForm = () => {\n    setName(\"\")\n    setAge(\"\")\n    setGender(\"\")\n    setDiagnosis(\"\")\n    setPhoneNumber(\"\")\n    setRelationship(\"self\")\n    setShowForm(false)\n    setEditingId(null)\n  }\n\n  const handleEdit = (patient) => {\n    setName(patient.name)\n    setAge(String(patient.age))\n    setGender(patient.gender || \"\")\n    setDiagnosis(patient.diagnosis || \"\")\n    setPhoneNumber(patient.phone_number || \"\")\n    setRelationship(patient.relationship || \"self\")\n    setEditingId(patient.id)\n    setShowForm(true)\n  }\n\n  if (loading) {\n    return (\n      <Layout>\n        <div className=\"content\">\n          <div className=\"content-card\">\n            <div style={{ textAlign: \"center\", padding: \"60px 20px\" }}>\n              <div\n                style={{\n                  width: \"48px\",\n                  height: \"48px\",\n                  border: \"4px solid #e5e7eb\",\n                  borderTop: \"4px solid #667eea\",\n                  borderRadius: \"50%\",\n                  animation: \"spin 1s linear infinite\",\n                  margin: \"0 auto 16px\",\n                }}\n              ></div>\n              <p style={{ color: \"#6b7280\", fontSize: \"16px\" }}>Loading patients...</p>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout>\n      <div className=\"content\">\n        <div className=\"content-card\">\n          <div className=\"dashboard-header\">\n            <h1 className=\"dashboard-title\">👩‍💼 Receptionist Dashboard</h1>\n            <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n          </div>\n\n          <div className=\"stats-grid\">\n            <div className=\"stat-card blue\">\n              <div className=\"stat-info\">\n                <h3>Total Patients</h3>\n                <p>{patients.length}</p>\n              </div>\n              <div className=\"stat-icon\">👥</div>\n            </div>\n\n            <div className=\"stat-card green\">\n              <div className=\"stat-info\">\n                <h3>Active Cases</h3>\n                <p>{patients.filter((p) => p.diagnosis && p.diagnosis !== \"N/A\").length}</p>\n              </div>\n              <div className=\"stat-icon\">📋</div>\n            </div>\n\n            <div className=\"stat-card purple\">\n              <div className=\"stat-info\">\n                <h3>New Today</h3>\n                <p>\n                  {\n                    patients.filter(\n                      (p) => p.created_at && new Date(p.created_at).toDateString() === new Date().toDateString(),\n                    ).length\n                  }\n                </p>\n              </div>\n              <div className=\"stat-icon\">📅</div>\n            </div>\n\n            <div className=\"stat-card orange\">\n              <div className=\"stat-info\">\n                <h3>Family Members</h3>\n                <p>{patients.filter((p) => p.relationship !== \"self\").length}</p>\n              </div>\n              <div className=\"stat-icon\">👨‍👩‍👧‍👦</div>\n            </div>\n          </div>\n\n          <div style={{ textAlign: \"center\", marginBottom: \"32px\" }}>\n            <button className=\"btn-add\" onClick={() => setShowForm(!showForm)}>\n              ➕ Add New Patient\n            </button>\n          </div>\n\n          {showForm && (\n            <div className=\"modal-overlay\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h2 className=\"modal-title\">{editingId ? \"Edit Patient\" : \"Add New Patient\"}</h2>\n                  <p className=\"modal-subtitle\">\n                    {editingId ? \"Update patient information\" : \"Enter patient details below\"}\n                  </p>\n                </div>\n\n                <form onSubmit={handleSubmit}>\n                  <div className=\"form-group\">\n                    <label className=\"form-label\">👤 Full Name</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-input\"\n                      placeholder=\"Enter full name\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label className=\"form-label\">🎂 Age</label>\n                    <input\n                      type=\"number\"\n                      className=\"form-input\"\n                      placeholder=\"Enter age\"\n                      value={age}\n                      onChange={(e) => setAge(e.target.value)}\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label className=\"form-label\">⚧️ Gender</label>\n                    <select\n                      className=\"form-input\"\n                      value={gender}\n                      onChange={(e) => setGender(e.target.value)}\n                      style={{ paddingLeft: \"16px\" }}\n                    >\n                      <option value=\"\">Select gender</option>\n                      <option value=\"Male\">Male</option>\n                      <option value=\"Female\">Female</option>\n                      <option value=\"Other\">Other</option>\n                    </select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label className=\"form-label\">👥 Relationship to Phone Number Holder</label>\n                    <select\n                      className=\"form-input\"\n                      value={relationship}\n                      onChange={(e) => setRelationship(e.target.value)}\n                      required\n                    >\n                      <option value=\"self\">Self (I am the patient)</option>\n                      <option value=\"son\">Son</option>\n                      <option value=\"daughter\">Daughter</option>\n                      <option value=\"mother\">Mother</option>\n                      <option value=\"father\">Father</option>\n                      <option value=\"spouse\">Spouse/Partner</option>\n                      <option value=\"brother\">Brother</option>\n                      <option value=\"sister\">Sister</option>\n                      <option value=\"grandfather\">Grandfather</option>\n                      <option value=\"grandmother\">Grandmother</option>\n                      <option value=\"other\">Other Family Member</option>\n                    </select>\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label className=\"form-label\">🏥 Diagnosis/Condition</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-input\"\n                      placeholder=\"Enter diagnosis or condition (optional)\"\n                      value={diagnosis}\n                      onChange={(e) => setDiagnosis(e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label className=\"form-label\">📞 Phone Number</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-input\"\n                      placeholder=\"Enter phone number\"\n                      value={phoneNumber}\n                      onChange={(e) => setPhoneNumber(e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"form-actions\">\n                    <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n                      Cancel\n                    </button>\n                    <button type=\"submit\" className=\"btn btn-submit\">\n                      {editingId ? \"Update Patient\" : \"Add Patient\"}\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          )}\n\n          <div style={{ marginBottom: \"32px\" }}>\n            <h2 style={{ fontSize: \"24px\", fontWeight: \"bold\", marginBottom: \"16px\", color: \"#1f2937\" }}>\n              📋 Patients List\n            </h2>\n            <p style={{ color: \"#6b7280\", marginBottom: \"24px\" }}>\n              Manage all registered patients and their information\n            </p>\n\n            {patients.length === 0 ? (\n              <div className=\"empty-state\">\n                <div className=\"empty-icon\">👥</div>\n                <h3 className=\"empty-title\">No Patients Yet</h3>\n                <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n              </div>\n            ) : (\n              <div className=\"patient-grid\">\n                {patients.map((patient) => (\n                  <div key={patient.id} className=\"patient-card\">\n                    <div className=\"patient-header\">\n                      <div>\n                        <h3 className=\"patient-name\">\n                          {patient.relationship === \"self\" ? \"👤\" : \"👥\"} {patient.name}\n                        </h3>\n                        <span className=\"patient-id\">ID: {patient.id}</span>\n                      </div>\n                      {patient.relationship !== \"self\" && (\n                        <span\n                          style={{\n                            background: \"#e0e7ff\",\n                            color: \"#4338ca\",\n                            padding: \"4px 12px\",\n                            borderRadius: \"20px\",\n                            fontSize: \"12px\",\n                            fontWeight: \"600\",\n                          }}\n                        >\n                          {patient.relationship}\n                        </span>\n                      )}\n                    </div>\n\n                    <div className=\"patient-details\">\n                      <div className=\"patient-detail\">\n                        <span>🎂</span>\n                        <span>Age: {patient.age} years</span>\n                      </div>\n                      {patient.gender && (\n                        <div className=\"patient-detail\">\n                          <span>⚧️</span>\n                          <span>Gender: {patient.gender}</span>\n                        </div>\n                      )}\n                      <div className=\"patient-detail\">\n                        <span>🏥</span>\n                        <span>Diagnosis: {patient.diagnosis || \"None specified\"}</span>\n                      </div>\n                      {patient.phone_number && (\n                        <div className=\"patient-detail\">\n                          <span>📞</span>\n                          <span>Phone: {patient.phone_number}</span>\n                        </div>\n                      )}\n                      {patient.relationship && (\n                        <div className=\"patient-detail\">\n                          <span>👥</span>\n                          <span>Relationship: {patient.relationship}</span>\n                        </div>\n                      )}\n                      {patient.created_at && (\n                        <div className=\"patient-detail\">\n                          <span>📅</span>\n                          <span>Registered: {new Date(patient.created_at).toLocaleDateString()}</span>\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"patient-actions\">\n                      <button onClick={() => handleEdit(patient)} className=\"btn btn-edit\">\n                        ✏️ Edit\n                      </button>\n                      <button onClick={() => handleDelete(patient.id)} className=\"btn btn-delete\">\n                        🗑️ Delete\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n"],"mappingsoBA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;EAAAC,GAAA,GAAAD,YAAA;AAEZ,SAASE,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGA,CAAC;EAAEC,OAAO;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAX,EAAA;EAC5CG,SAAS,CAAC,MAAM;IACd,MAAMS,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BF,OAAO,CAAC,CAAC;IACX,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EAEb,oBACEJ,OAAA;IAAKQ,SAAS,EAAE,SAASL,IAAI,KAAK,SAAS,GAAG,eAAe,GAAG,aAAa,EAAG;IAAAM,QAAA,gBAC9ET,OAAA;MAAMQ,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEN,IAAI,KAAK,SAAS,GAAG,GAAG,GAAG;IAAG;MAAAO,QAAA,EAAAlB,YAAA;MAAAmB,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpEZ,OAAA;MAAMQ,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEP;IAAO;MAAAQ,QAAA,EAAAlB,YAAA;MAAAmB,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAChDZ,OAAA;MAAQQ,SAAS,EAAC,aAAa;MAACK,OAAO,EAAET,OAAQ;MAAAK,QAAA,EAAC;IAElD;MAAAC,QAAA,EAAAlB,YAAA;MAAAmB,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAF,QAAA,EAAAlB,YAAA;IAAAmB,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAnB,EAAA,CAjBKQ,KAAK;AAAAa,EAAA,GAALb,KAAK;AAmBX,eAAe,SAASc,qBAAqBA,CAAA,EAAG;EAAApB,GAAA;EAC9C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACyB,GAAG,EAAEC,MAAM,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAC,MAAM,CAAC;EACxD,MAAM,CAACmC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACqC,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuC,OAAO,EAAEC,UAAU,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMyC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C5C,SAAS,CAAC,MAAM;IACd6C,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QAC5DC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUP,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,IAAII,GAAG,CAACI,EAAE,EAAE;QACV,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;QAC7B/B,WAAW,CAAC8B,IAAI,IAAI,EAAE,CAAC;MACzB,CAAC,MAAM;QACLZ,QAAQ,CAAC;UAAEjC,OAAO,EAAE,0BAA0B;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC;MAClE;IACF,CAAC,CAAC,OAAO8C,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;MAC9Cd,QAAQ,CAAC;QAAEjC,OAAO,EAAE,uCAAuC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;IAC/E,CAAC,SAAS;MACRkC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMe,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,WAAW,GAAG;MAClBnC,IAAI;MACJE,GAAG,EAAEkC,MAAM,CAACC,QAAQ,CAACnC,GAAG,CAAC;MACzBE,MAAM;MACNE,SAAS;MACTgC,YAAY,EAAE9B,WAAW;MACzBE;IACF,CAAC;IAED,IAAI;MACF,IAAI6B,GAAG,GAAG,oCAAoC;MAC9C,IAAIC,MAAM,GAAG,MAAM;MAEnB,IAAI5B,SAAS,EAAE;QACb2B,GAAG,GAAG,sCAAsC3B,SAAS,EAAE;QACvD4B,MAAM,GAAG,KAAK;MAChB;MAEA,MAAMlB,GAAG,GAAG,MAAMC,KAAK,CAACgB,GAAG,EAAE;QAC3BC,MAAM;QACNhB,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUP,KAAK;QAChC,CAAC;QACDuB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW;MAClC,CAAC,CAAC;MAEF,IAAIb,GAAG,CAACI,EAAE,EAAE;QACV,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;QAE7B,IAAIhB,SAAS,EAAE;UACb,MAAMgC,cAAc,GAAGjB,IAAI,CAACkB,OAAO,IAAIlB,IAAI;UAC3C9B,WAAW,CAACD,QAAQ,CAACkD,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACC,EAAE,KAAKpC,SAAS,GAAGgC,cAAc,GAAGG,CAAE,CAAC,CAAC;UAC3EhC,QAAQ,CAAC;YAAEjC,OAAO,EAAE,+BAA+B;YAAEC,IAAI,EAAE;UAAU,CAAC,CAAC;QACzE,CAAC,MAAM;UACLc,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE+B,IAAI,CAAC,CAAC;UAChCZ,QAAQ,CAAC;YAAEjC,OAAO,EAAE,6BAA6B;YAAEC,IAAI,EAAE;UAAU,CAAC,CAAC;QACvE;QAEAkE,SAAS,CAAC,CAAC;MACb,CAAC,MAAM;QACL,MAAMC,SAAS,GAAG,MAAM5B,GAAG,CAACM,IAAI,CAAC,CAAC;QAClCb,QAAQ,CAAC;UAAEjC,OAAO,EAAEoE,SAAS,CAACnB,KAAK,IAAI,wBAAwB;UAAEhD,IAAI,EAAE;QAAQ,CAAC,CAAC;MACnF;IACF,CAAC,CAAC,OAAO8C,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC3Cd,QAAQ,CAAC;QAAEjC,OAAO,EAAE,oCAAoC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;IAC5E;EACF,CAAC;EAED,MAAMoE,YAAY,GAAG,MAAOH,EAAE,IAAK;IACjC,IAAI,CAACI,MAAM,CAACC,OAAO,CAAC,+CAA+C,CAAC,EAAE;IAEtE,IAAI;MACF,MAAM/B,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAsCyB,EAAE,EAAE,EAAE;QAClER,MAAM,EAAE,QAAQ;QAChBhB,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUP,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,IAAII,GAAG,CAACI,EAAE,EAAE;QACV7B,WAAW,CAACD,QAAQ,CAAC0D,MAAM,CAAEP,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;QAChDjC,QAAQ,CAAC;UAAEjC,OAAO,EAAE,+BAA+B;UAAEC,IAAI,EAAE;QAAU,CAAC,CAAC;MACzE,CAAC,MAAM;QACL,MAAMmE,SAAS,GAAG,MAAM5B,GAAG,CAACM,IAAI,CAAC,CAAC;QAClCb,QAAQ,CAAC;UAAEjC,OAAO,EAAEoE,SAAS,CAACnB,KAAK,IAAI,0BAA0B;UAAEhD,IAAI,EAAE;QAAQ,CAAC,CAAC;MACrF;IACF,CAAC,CAAC,OAAO8C,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MAC7Cd,QAAQ,CAAC;QAAEjC,OAAO,EAAE,sCAAsC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;IAC9E;EACF,CAAC;EAED,MAAMkE,SAAS,GAAGA,CAAA,KAAM;IACtBhD,OAAO,CAAC,EAAE,CAAC;IACXE,MAAM,CAAC,EAAE,CAAC;IACVE,SAAS,CAAC,EAAE,CAAC;IACbE,YAAY,CAAC,EAAE,CAAC;IAChBE,cAAc,CAAC,EAAE,CAAC;IAClBE,eAAe,CAAC,MAAM,CAAC;IACvBZ,WAAW,CAAC,KAAK,CAAC;IAClBc,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAM0C,UAAU,GAAIV,OAAO,IAAK;IAC9B5C,OAAO,CAAC4C,OAAO,CAAC7C,IAAI,CAAC;IACrBG,MAAM,CAACqD,MAAM,CAACX,OAAO,CAAC3C,GAAG,CAAC,CAAC;IAC3BG,SAAS,CAACwC,OAAO,CAACzC,MAAM,IAAI,EAAE,CAAC;IAC/BG,YAAY,CAACsC,OAAO,CAACvC,SAAS,IAAI,EAAE,CAAC;IACrCG,cAAc,CAACoC,OAAO,CAACP,YAAY,IAAI,EAAE,CAAC;IAC1C3B,eAAe,CAACkC,OAAO,CAACnC,YAAY,IAAI,MAAM,CAAC;IAC/CG,YAAY,CAACgC,OAAO,CAACG,EAAE,CAAC;IACxBjD,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,IAAIiB,OAAO,EAAE;IACX,oBACEpC,OAAA,CAACF,MAAM;MAAAW,QAAA,eACLT,OAAA;QAAKQ,SAAS,EAAC,SAAS;QAAAC,QAAA,eACtBT,OAAA;UAAKQ,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BT,OAAA;YAAK6E,KAAK,EAAE;cAAEC,SAAS,EAAE,QAAQ;cAAEC,OAAO,EAAE;YAAY,CAAE;YAAAtE,QAAA,gBACxDT,OAAA;cACE6E,KAAK,EAAE;gBACLG,KAAK,EAAE,MAAM;gBACbC,MAAM,EAAE,MAAM;gBACdC,MAAM,EAAE,mBAAmB;gBAC3BC,SAAS,EAAE,mBAAmB;gBAC9BC,YAAY,EAAE,KAAK;gBACnBC,SAAS,EAAE,yBAAyB;gBACpCC,MAAM,EAAE;cACV;YAAE;cAAA5E,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACPZ,OAAA;cAAG6E,KAAK,EAAE;gBAAEU,KAAK,EAAE,SAAS;gBAAEC,QAAQ,EAAE;cAAO,CAAE;cAAA/E,QAAA,EAAC;YAAmB;cAAAC,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAF,QAAA,EAAAlB,YAAA;YAAAmB,UAAA;YAAAC,YAAA;UAAA,OACtE;QAAC;UAAAF,QAAA,EAAAlB,YAAA;UAAAmB,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAF,QAAA,EAAAlB,YAAA;QAAAmB,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAF,QAAA,EAAAlB,YAAA;MAAAmB,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAEb;EAEA,oBACEZ,OAAA,CAACF,MAAM;IAAAW,QAAA,eACLT,OAAA;MAAKQ,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBT,OAAA;QAAKQ,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BT,OAAA;UAAKQ,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BT,OAAA;YAAIQ,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAA4B;YAAAC,QAAA,EAAAlB,YAAA;YAAAmB,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjEZ,OAAA;YAAGQ,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAC;UAA4C;YAAAC,QAAA,EAAAlB,YAAA;YAAAmB,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAF,QAAA,EAAAlB,YAAA;UAAAmB,UAAA;UAAAC,YAAA;QAAA,OAC/E,CAAC,eAENZ,OAAA;UAAKQ,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBT,OAAA;YAAKQ,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BT,OAAA;cAAKQ,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBT,OAAA;gBAAAS,QAAA,EAAI;cAAc;gBAAAC,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACvBZ,OAAA;gBAAAS,QAAA,EAAIO,QAAQ,CAACyE;cAAM;gBAAA/E,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAF,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,eACNZ,OAAA;cAAKQ,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAF,QAAA,EAAAlB,YAAA;YAAAmB,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eAENZ,OAAA;YAAKQ,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BT,OAAA;cAAKQ,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBT,OAAA;gBAAAS,QAAA,EAAI;cAAY;gBAAAC,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrBZ,OAAA;gBAAAS,QAAA,EAAIO,QAAQ,CAAC0D,MAAM,CAAEP,CAAC,IAAKA,CAAC,CAACzC,SAAS,IAAIyC,CAAC,CAACzC,SAAS,KAAK,KAAK,CAAC,CAAC+D;cAAM;gBAAA/E,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAF,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OACzE,CAAC,eACNZ,OAAA;cAAKQ,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAF,QAAA,EAAAlB,YAAA;YAAAmB,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eAENZ,OAAA;YAAKQ,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BT,OAAA;cAAKQ,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBT,OAAA;gBAAAS,QAAA,EAAI;cAAS;gBAAAC,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClBZ,OAAA;gBAAAS,QAAA,EAEIO,QAAQ,CAAC0D,MAAM,CACZP,CAAC,IAAKA,CAAC,CAACuB,UAAU,IAAI,IAAIC,IAAI,CAACxB,CAAC,CAACuB,UAAU,CAAC,CAACE,YAAY,CAAC,CAAC,KAAK,IAAID,IAAI,CAAC,CAAC,CAACC,YAAY,CAAC,CAC3F,CAAC,CAACH;cAAM;gBAAA/E,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OAET,CAAC;YAAA;cAAAF,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eACNZ,OAAA;cAAKQ,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAF,QAAA,EAAAlB,YAAA;YAAAmB,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eAENZ,OAAA;YAAKQ,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/BT,OAAA;cAAKQ,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBT,OAAA;gBAAAS,QAAA,EAAI;cAAc;gBAAAC,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACvBZ,OAAA;gBAAAS,QAAA,EAAIO,QAAQ,CAAC0D,MAAM,CAAEP,CAAC,IAAKA,CAAC,CAACrC,YAAY,KAAK,MAAM,CAAC,CAAC2D;cAAM;gBAAA/E,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAF,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OAC9D,CAAC,eACNZ,OAAA;cAAKQ,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAF,QAAA,EAAAlB,YAAA;YAAAmB,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC;QAAA;UAAAF,QAAA,EAAAlB,YAAA;UAAAmB,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENZ,OAAA;UAAK6E,KAAK,EAAE;YAAEC,SAAS,EAAE,QAAQ;YAAEe,YAAY,EAAE;UAAO,CAAE;UAAApF,QAAA,eACxDT,OAAA;YAAQQ,SAAS,EAAC,SAAS;YAACK,OAAO,EAAEA,CAAA,KAAMM,WAAW,CAAC,CAACD,QAAQ,CAAE;YAAAT,QAAA,EAAC;UAEnE;YAAAC,QAAA,EAAAlB,YAAA;YAAAmB,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAF,QAAA,EAAAlB,YAAA;UAAAmB,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAELM,QAAQ,iBACPlB,OAAA;UAAKQ,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5BT,OAAA;YAAKQ,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5BT,OAAA;cAAKQ,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3BT,OAAA;gBAAIQ,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEuB,SAAS,GAAG,cAAc,GAAG;cAAiB;gBAAAtB,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjFZ,OAAA;gBAAGQ,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAC1BuB,SAAS,GAAG,4BAA4B,GAAG;cAA6B;gBAAAtB,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OACxE,CAAC;YAAA;cAAAF,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,eAENZ,OAAA;cAAM8F,QAAQ,EAAE1C,YAAa;cAAA3C,QAAA,gBAC3BT,OAAA;gBAAKQ,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzBT,OAAA;kBAAOQ,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAY;kBAAAC,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAClDZ,OAAA;kBACEG,IAAI,EAAC,MAAM;kBACXK,SAAS,EAAC,YAAY;kBACtBuF,WAAW,EAAC,iBAAiB;kBAC7BC,KAAK,EAAE5E,IAAK;kBACZ6E,QAAQ,EAAG5C,CAAC,IAAKhC,OAAO,CAACgC,CAAC,CAAC6C,MAAM,CAACF,KAAK,CAAE;kBACzCG,QAAQ;gBAAA;kBAAAzF,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA;gBAAAF,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENZ,OAAA;gBAAKQ,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzBT,OAAA;kBAAOQ,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC5CZ,OAAA;kBACEG,IAAI,EAAC,QAAQ;kBACbK,SAAS,EAAC,YAAY;kBACtBuF,WAAW,EAAC,WAAW;kBACvBC,KAAK,EAAE1E,GAAI;kBACX2E,QAAQ,EAAG5C,CAAC,IAAK9B,MAAM,CAAC8B,CAAC,CAAC6C,MAAM,CAACF,KAAK,CAAE;kBACxCG,QAAQ;gBAAA;kBAAAzF,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA;gBAAAF,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENZ,OAAA;gBAAKQ,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzBT,OAAA;kBAAOQ,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAS;kBAAAC,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC/CZ,OAAA;kBACEQ,SAAS,EAAC,YAAY;kBACtBwF,KAAK,EAAExE,MAAO;kBACdyE,QAAQ,EAAG5C,CAAC,IAAK5B,SAAS,CAAC4B,CAAC,CAAC6C,MAAM,CAACF,KAAK,CAAE;kBAC3CnB,KAAK,EAAE;oBAAEuB,WAAW,EAAE;kBAAO,CAAE;kBAAA3F,QAAA,gBAE/BT,OAAA;oBAAQgG,KAAK,EAAC,EAAE;oBAAAvF,QAAA,EAAC;kBAAa;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACvCZ,OAAA;oBAAQgG,KAAK,EAAC,MAAM;oBAAAvF,QAAA,EAAC;kBAAI;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAClCZ,OAAA;oBAAQgG,KAAK,EAAC,QAAQ;oBAAAvF,QAAA,EAAC;kBAAM;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACtCZ,OAAA;oBAAQgG,KAAK,EAAC,OAAO;oBAAAvF,QAAA,EAAC;kBAAK;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAF,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAC9B,CAAC;cAAA;gBAAAF,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,eAENZ,OAAA;gBAAKQ,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzBT,OAAA;kBAAOQ,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAsC;kBAAAC,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC5EZ,OAAA;kBACEQ,SAAS,EAAC,YAAY;kBACtBwF,KAAK,EAAElE,YAAa;kBACpBmE,QAAQ,EAAG5C,CAAC,IAAKtB,eAAe,CAACsB,CAAC,CAAC6C,MAAM,CAACF,KAAK,CAAE;kBACjDG,QAAQ;kBAAA1F,QAAA,gBAERT,OAAA;oBAAQgG,KAAK,EAAC,MAAM;oBAAAvF,QAAA,EAAC;kBAAuB;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACrDZ,OAAA;oBAAQgG,KAAK,EAAC,KAAK;oBAAAvF,QAAA,EAAC;kBAAG;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAChCZ,OAAA;oBAAQgG,KAAK,EAAC,UAAU;oBAAAvF,QAAA,EAAC;kBAAQ;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAC1CZ,OAAA;oBAAQgG,KAAK,EAAC,QAAQ;oBAAAvF,QAAA,EAAC;kBAAM;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACtCZ,OAAA;oBAAQgG,KAAK,EAAC,QAAQ;oBAAAvF,QAAA,EAAC;kBAAM;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACtCZ,OAAA;oBAAQgG,KAAK,EAAC,QAAQ;oBAAAvF,QAAA,EAAC;kBAAc;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAC9CZ,OAAA;oBAAQgG,KAAK,EAAC,SAAS;oBAAAvF,QAAA,EAAC;kBAAO;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACxCZ,OAAA;oBAAQgG,KAAK,EAAC,QAAQ;oBAAAvF,QAAA,EAAC;kBAAM;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACtCZ,OAAA;oBAAQgG,KAAK,EAAC,aAAa;oBAAAvF,QAAA,EAAC;kBAAW;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAChDZ,OAAA;oBAAQgG,KAAK,EAAC,aAAa;oBAAAvF,QAAA,EAAC;kBAAW;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAChDZ,OAAA;oBAAQgG,KAAK,EAAC,OAAO;oBAAAvF,QAAA,EAAC;kBAAmB;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAF,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAC5C,CAAC;cAAA;gBAAAF,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,eAENZ,OAAA;gBAAKQ,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzBT,OAAA;kBAAOQ,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAsB;kBAAAC,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAC5DZ,OAAA;kBACEG,IAAI,EAAC,MAAM;kBACXK,SAAS,EAAC,YAAY;kBACtBuF,WAAW,EAAC,yCAAyC;kBACrDC,KAAK,EAAEtE,SAAU;kBACjBuE,QAAQ,EAAG5C,CAAC,IAAK1B,YAAY,CAAC0B,CAAC,CAAC6C,MAAM,CAACF,KAAK;gBAAE;kBAAAtF,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAC/C,CAAC;cAAA;gBAAAF,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENZ,OAAA;gBAAKQ,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACzBT,OAAA;kBAAOQ,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAC;gBAAe;kBAAAC,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACrDZ,OAAA;kBACEG,IAAI,EAAC,MAAM;kBACXK,SAAS,EAAC,YAAY;kBACtBuF,WAAW,EAAC,oBAAoB;kBAChCC,KAAK,EAAEpE,WAAY;kBACnBqE,QAAQ,EAAG5C,CAAC,IAAKxB,cAAc,CAACwB,CAAC,CAAC6C,MAAM,CAACF,KAAK;gBAAE;kBAAAtF,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OACjD,CAAC;cAAA;gBAAAF,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENZ,OAAA;gBAAKQ,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3BT,OAAA;kBAAQG,IAAI,EAAC,QAAQ;kBAACK,SAAS,EAAC,gBAAgB;kBAACK,OAAO,EAAEwD,SAAU;kBAAA5D,QAAA,EAAC;gBAErE;kBAAAC,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACTZ,OAAA;kBAAQG,IAAI,EAAC,QAAQ;kBAACK,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAC7CuB,SAAS,GAAG,gBAAgB,GAAG;gBAAa;kBAAAtB,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OACvC,CAAC;cAAA;gBAAAF,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAAF,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAF,QAAA,EAAAlB,YAAA;YAAAmB,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAF,QAAA,EAAAlB,YAAA;UAAAmB,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,eAEDZ,OAAA;UAAK6E,KAAK,EAAE;YAAEgB,YAAY,EAAE;UAAO,CAAE;UAAApF,QAAA,gBACnCT,OAAA;YAAI6E,KAAK,EAAE;cAAEW,QAAQ,EAAE,MAAM;cAAEa,UAAU,EAAE,MAAM;cAAER,YAAY,EAAE,MAAM;cAAEN,KAAK,EAAE;YAAU,CAAE;YAAA9E,QAAA,EAAC;UAE7F;YAAAC,QAAA,EAAAlB,YAAA;YAAAmB,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLZ,OAAA;YAAG6E,KAAK,EAAE;cAAEU,KAAK,EAAE,SAAS;cAAEM,YAAY,EAAE;YAAO,CAAE;YAAApF,QAAA,EAAC;UAEtD;YAAAC,QAAA,EAAAlB,YAAA;YAAAmB,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EAEHI,QAAQ,CAACyE,MAAM,KAAK,CAAC,gBACpBzF,OAAA;YAAKQ,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BT,OAAA;cAAKQ,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpCZ,OAAA;cAAIQ,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChDZ,OAAA;cAAGQ,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAAC;YAAiD;cAAAC,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAF,QAAA,EAAAlB,YAAA;YAAAmB,UAAA;YAAAC,YAAA;UAAA,OAChF,CAAC,gBAENZ,OAAA;YAAKQ,SAAS,EAAC,cAAc;YAAAC,QAAA,EAC1BO,QAAQ,CAACkD,GAAG,CAAED,OAAO,iBACpBjE,OAAA;cAAsBQ,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC5CT,OAAA;gBAAKQ,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,gBAC7BT,OAAA;kBAAAS,QAAA,gBACET,OAAA;oBAAIQ,SAAS,EAAC,cAAc;oBAAAC,QAAA,GACzBwD,OAAO,CAACnC,YAAY,KAAK,MAAM,GAAG,IAAI,GAAG,IAAI,EAAC,GAAC,EAACmC,OAAO,CAAC7C,IAAI;kBAAA;oBAAAV,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAC3D,CAAC,eACLZ,OAAA;oBAAMQ,SAAS,EAAC,YAAY;oBAAAC,QAAA,GAAC,MAAI,EAACwD,OAAO,CAACG,EAAE;kBAAA;oBAAA1D,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAF,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OACjD,CAAC,EACLqD,OAAO,CAACnC,YAAY,KAAK,MAAM,iBAC9B9B,OAAA;kBACE6E,KAAK,EAAE;oBACLyB,UAAU,EAAE,SAAS;oBACrBf,KAAK,EAAE,SAAS;oBAChBR,OAAO,EAAE,UAAU;oBACnBK,YAAY,EAAE,MAAM;oBACpBI,QAAQ,EAAE,MAAM;oBAChBa,UAAU,EAAE;kBACd,CAAE;kBAAA5F,QAAA,EAEDwD,OAAO,CAACnC;gBAAY;kBAAApB,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OACjB,CACP;cAAA;gBAAAF,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eAENZ,OAAA;gBAAKQ,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,gBAC9BT,OAAA;kBAAKQ,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,gBAC7BT,OAAA;oBAAAS,QAAA,EAAM;kBAAE;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACfZ,OAAA;oBAAAS,QAAA,GAAM,OAAK,EAACwD,OAAO,CAAC3C,GAAG,EAAC,QAAM;kBAAA;oBAAAZ,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAF,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAClC,CAAC,EACLqD,OAAO,CAACzC,MAAM,iBACbxB,OAAA;kBAAKQ,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,gBAC7BT,OAAA;oBAAAS,QAAA,EAAM;kBAAE;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACfZ,OAAA;oBAAAS,QAAA,GAAM,UAAQ,EAACwD,OAAO,CAACzC,MAAM;kBAAA;oBAAAd,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAF,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAClC,CACN,eACDZ,OAAA;kBAAKQ,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,gBAC7BT,OAAA;oBAAAS,QAAA,EAAM;kBAAE;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACfZ,OAAA;oBAAAS,QAAA,GAAM,aAAW,EAACwD,OAAO,CAACvC,SAAS,IAAI,gBAAgB;kBAAA;oBAAAhB,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAF,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAC5D,CAAC,EACLqD,OAAO,CAACP,YAAY,iBACnB1D,OAAA;kBAAKQ,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,gBAC7BT,OAAA;oBAAAS,QAAA,EAAM;kBAAE;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACfZ,OAAA;oBAAAS,QAAA,GAAM,SAAO,EAACwD,OAAO,CAACP,YAAY;kBAAA;oBAAAhD,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAF,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OACvC,CACN,EACAqD,OAAO,CAACnC,YAAY,iBACnB9B,OAAA;kBAAKQ,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,gBAC7BT,OAAA;oBAAAS,QAAA,EAAM;kBAAE;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACfZ,OAAA;oBAAAS,QAAA,GAAM,gBAAc,EAACwD,OAAO,CAACnC,YAAY;kBAAA;oBAAApB,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAF,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAC9C,CACN,EACAqD,OAAO,CAACyB,UAAU,iBACjB1F,OAAA;kBAAKQ,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,gBAC7BT,OAAA;oBAAAS,QAAA,EAAM;kBAAE;oBAAAC,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACfZ,OAAA;oBAAAS,QAAA,GAAM,cAAY,EAAC,IAAIkF,IAAI,CAAC1B,OAAO,CAACyB,UAAU,CAAC,CAACa,kBAAkB,CAAC,CAAC;kBAAA;oBAAA7F,QAAA,EAAAlB,YAAA;oBAAAmB,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAF,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OACzE,CACN;cAAA;gBAAAF,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eAENZ,OAAA;gBAAKQ,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,gBAC9BT,OAAA;kBAAQa,OAAO,EAAEA,CAAA,KAAM8D,UAAU,CAACV,OAAO,CAAE;kBAACzD,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAC;gBAErE;kBAAAC,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACTZ,OAAA;kBAAQa,OAAO,EAAEA,CAAA,KAAM0D,YAAY,CAACN,OAAO,CAACG,EAAE,CAAE;kBAAC5D,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAAC;gBAE5E;kBAAAC,QAAA,EAAAlB,YAAA;kBAAAmB,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAF,QAAA,EAAAlB,YAAA;gBAAAmB,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA,GAlEEqD,OAAO,CAACG,EAAE;cAAA1D,QAAA,EAAAlB,YAAA;cAAAmB,UAAA;cAAAC,YAAA;YAAA,OAmEf,CACN;UAAC;YAAAF,QAAA,EAAAlB,YAAA;YAAAmB,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA;UAAAF,QAAA,EAAAlB,YAAA;UAAAmB,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EAELsB,KAAK,iBAAIlC,OAAA,CAACC,KAAK;UAACC,OAAO,EAAEgC,KAAK,CAAChC,OAAQ;UAACC,IAAI,EAAE+B,KAAK,CAAC/B,IAAK;UAACC,OAAO,EAAEA,CAAA,KAAM+B,QAAQ,CAAC,IAAI;QAAE;UAAAzB,QAAA,EAAAlB,YAAA;UAAAmB,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAF,QAAA,EAAAlB,YAAA;QAAAmB,UAAA;QAAAC,YAAA;MAAA,OACzF;IAAC;MAAAF,QAAA,EAAAlB,YAAA;MAAAmB,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAF,QAAA,EAAAlB,YAAA;IAAAmB,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACjB,GAAA,CArauBoB,qBAAqB;AAAAyF,GAAA,GAArBzF,qBAAqB;AAAA,IAAAD,EAAA,EAAA0F,GAAA;AAAAC,YAAA,CAAA3F,EAAA;AAAA2F,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}