{"ast":null,"code":"var _jsxFileName = \"/Users/sathwik/hospital-portal/frontend/src/App.js\";\n// // src/App.js\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import Layout from './components/Layout';\n// import LoginPage from './pages/LoginPage';\n// import RegisterPage from './pages/RegisterPage';\n// import PatientDashboard from './pages/PatientDashboard';\n// import DoctorDashboard from './pages/DoctorDashboard';\n// import ReceptionistDashboard from './pages/ReceptionistDashboard';\n\n// function App() {\n//   const token = localStorage.getItem('token');\n//   const role = localStorage.getItem('role');\n\n//   const isAuthenticated = !!token;\n\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={isAuthenticated ? <Layout /> : <Navigate to=\"/login\" />}>\n//           {role === 'receptionist' && (\n//             <Route index element={<ReceptionistDashboard />} />\n//           )}\n//           {role === 'doctor' && (\n//             <Route index element={<DoctorDashboard />} />\n//           )}\n//           {role === 'receptionist' && (\n//             <Route path=\"patients\" element={<PatientDashboard />} />\n//           )}\n//         </Route>\n//         <Route path=\"/login\" element={<LoginPage />} />\n//         <Route path=\"/register\" element={<RegisterPage />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n// // src/App.js\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import Layout from './components/Layout';\n// import LoginPage from './pages/LoginPage';\n// import RegisterPage from './pages/RegisterPage';\n// import PatientDashboard from './pages/PatientDashboard';\n// import DoctorDashboard from './pages/DoctorDashboard';\n// import ReceptionistDashboard from './pages/ReceptionistDashboard';\n\n// function App() {\n//   const token = localStorage.getItem('token');\n//   const role = localStorage.getItem('role');\n\n//   const isAuthenticated = !!token;\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\">\n//       <Router>\n//         <Routes>\n//           <Route path=\"/login\" element={<LoginPage />} />\n//           <Route path=\"/register\" element={<RegisterPage />} />\n\n//           {isAuthenticated ? (\n//             <Route path=\"/\" element={<Layout />}>\n//               {role === 'receptionist' && (\n//                 <>\n//                   <Route index element={<Navigate to=\"/receptionist\" />} />\n//                   <Route path=\"receptionist\" element={<ReceptionistDashboard />} />\n//                 </>\n//               )}\n//               {role === 'doctor' && (\n//                 <>\n//                   <Route index element={<Navigate to=\"/doctor\" />} />\n//                   <Route path=\"doctor\" element={<DoctorDashboard />} />\n//                 </>\n//               )}\n//               <Route path=\"patients\" element={<PatientDashboard />} />\n//             </Route>\n//           ) : (\n//             <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n//           )}\n//         </Routes>\n//       </Router>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import { Routes, Route, Navigate } from \"react-router-dom\"\n// import LoginPage from \"./pages/LoginPage\"\n// import RegisterPage from \"./pages/RegisterPage\"\n// import ReceptionistDashboard from \"./pages/ReceptionistDashboard\"\n// import DoctorDashboard from \"./pages/DoctorDashboard\"\n// import ProtectedRoute from \"./components/ProtectedRoute\"\n\n// function App() {\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\">\n//       <Routes>\n//         <Route path=\"/login\" element={<LoginPage />} />\n//         <Route path=\"/register\" element={<RegisterPage />} />\n\n//         <Route\n//           path=\"/receptionist\"\n//           element={\n//             <ProtectedRoute allowedRoles={[\"receptionist\"]}>\n//               <ReceptionistDashboard />\n//             </ProtectedRoute>\n//           }\n//         />\n\n//         <Route\n//           path=\"/doctor\"\n//           element={\n//             <ProtectedRoute allowedRoles={[\"doctor\"]}>\n//               <DoctorDashboard />\n//             </ProtectedRoute>\n//           }\n//         />\n\n//         <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\n//         <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\n//       </Routes>\n//     </div>\n//   )\n// }\n\n// export default App\n\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport LoginPage from \"./pages/LoginPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport ReceptionistDashboard from \"./pages/ReceptionistDashboard\";\nimport DoctorDashboard from \"./pages/DoctorDashboard\";\nimport Layout from \"./components/Layout\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/receptionist\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          allowedRoles: [\"receptionist\"],\n          children: /*#__PURE__*/_jsxDEV(Layout, {\n            children: /*#__PURE__*/_jsxDEV(ReceptionistDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/doctor\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          allowedRoles: [\"doctor\"],\n          children: /*#__PURE__*/_jsxDEV(Layout, {\n            children: /*#__PURE__*/_jsxDEV(DoctorDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","Navigate","LoginPage","RegisterPage","ReceptionistDashboard","DoctorDashboard","Layout","ProtectedRoute","jsxDEV","_jsxDEV","App","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","allowedRoles","to","replace","_c","$RefreshReg$"],"sources":["/Users/sathwik/hospital-portal/frontend/src/App.js"],"sourcesContent":["// // src/App.js\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import Layout from './components/Layout';\n// import LoginPage from './pages/LoginPage';\n// import RegisterPage from './pages/RegisterPage';\n// import PatientDashboard from './pages/PatientDashboard';\n// import DoctorDashboard from './pages/DoctorDashboard';\n// import ReceptionistDashboard from './pages/ReceptionistDashboard';\n\n// function App() {\n//   const token = localStorage.getItem('token');\n//   const role = localStorage.getItem('role');\n\n//   const isAuthenticated = !!token;\n\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={isAuthenticated ? <Layout /> : <Navigate to=\"/login\" />}>\n//           {role === 'receptionist' && (\n//             <Route index element={<ReceptionistDashboard />} />\n//           )}\n//           {role === 'doctor' && (\n//             <Route index element={<DoctorDashboard />} />\n//           )}\n//           {role === 'receptionist' && (\n//             <Route path=\"patients\" element={<PatientDashboard />} />\n//           )}\n//         </Route>\n//         <Route path=\"/login\" element={<LoginPage />} />\n//         <Route path=\"/register\" element={<RegisterPage />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n\n// // src/App.js\n// import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n// import Layout from './components/Layout';\n// import LoginPage from './pages/LoginPage';\n// import RegisterPage from './pages/RegisterPage';\n// import PatientDashboard from './pages/PatientDashboard';\n// import DoctorDashboard from './pages/DoctorDashboard';\n// import ReceptionistDashboard from './pages/ReceptionistDashboard';\n\n// function App() {\n//   const token = localStorage.getItem('token');\n//   const role = localStorage.getItem('role');\n\n//   const isAuthenticated = !!token;\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\">\n//       <Router>\n//         <Routes>\n//           <Route path=\"/login\" element={<LoginPage />} />\n//           <Route path=\"/register\" element={<RegisterPage />} />\n          \n//           {isAuthenticated ? (\n//             <Route path=\"/\" element={<Layout />}>\n//               {role === 'receptionist' && (\n//                 <>\n//                   <Route index element={<Navigate to=\"/receptionist\" />} />\n//                   <Route path=\"receptionist\" element={<ReceptionistDashboard />} />\n//                 </>\n//               )}\n//               {role === 'doctor' && (\n//                 <>\n//                   <Route index element={<Navigate to=\"/doctor\" />} />\n//                   <Route path=\"doctor\" element={<DoctorDashboard />} />\n//                 </>\n//               )}\n//               <Route path=\"patients\" element={<PatientDashboard />} />\n//             </Route>\n//           ) : (\n//             <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n//           )}\n//         </Routes>\n//       </Router>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\n// import { Routes, Route, Navigate } from \"react-router-dom\"\n// import LoginPage from \"./pages/LoginPage\"\n// import RegisterPage from \"./pages/RegisterPage\"\n// import ReceptionistDashboard from \"./pages/ReceptionistDashboard\"\n// import DoctorDashboard from \"./pages/DoctorDashboard\"\n// import ProtectedRoute from \"./components/ProtectedRoute\"\n\n// function App() {\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\">\n//       <Routes>\n//         <Route path=\"/login\" element={<LoginPage />} />\n//         <Route path=\"/register\" element={<RegisterPage />} />\n\n//         <Route\n//           path=\"/receptionist\"\n//           element={\n//             <ProtectedRoute allowedRoles={[\"receptionist\"]}>\n//               <ReceptionistDashboard />\n//             </ProtectedRoute>\n//           }\n//         />\n\n//         <Route\n//           path=\"/doctor\"\n//           element={\n//             <ProtectedRoute allowedRoles={[\"doctor\"]}>\n//               <DoctorDashboard />\n//             </ProtectedRoute>\n//           }\n//         />\n\n//         <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\n//         <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\n//       </Routes>\n//     </div>\n//   )\n// }\n\n// export default App\n\n\n\n\nimport { Routes, Route, Navigate } from \"react-router-dom\"\nimport LoginPage from \"./pages/LoginPage\"\nimport RegisterPage from \"./pages/RegisterPage\"\nimport ReceptionistDashboard from \"./pages/ReceptionistDashboard\"\nimport DoctorDashboard from \"./pages/DoctorDashboard\"\nimport Layout from \"./components/Layout\"\nimport ProtectedRoute from \"./components/ProtectedRoute\"\n\nfunction App() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\">\n      <Routes>\n        {/* Public Routes */}\n        <Route path=\"/login\" element={<LoginPage />} />\n        <Route path=\"/register\" element={<RegisterPage />} />\n\n        {/* Protected Routes with Layout */}\n        <Route\n          path=\"/receptionist\"\n          element={\n            <ProtectedRoute allowedRoles={[\"receptionist\"]}>\n              <Layout>\n                <ReceptionistDashboard />\n              </Layout>\n            </ProtectedRoute>\n          }\n        />\n\n        <Route\n          path=\"/doctor\"\n          element={\n            <ProtectedRoute allowedRoles={[\"doctor\"]}>\n              <Layout>\n                <DoctorDashboard />\n              </Layout>\n            </ProtectedRoute>\n          }\n        />\n\n        {/* Default redirects */}\n        <Route path=\"/\" element={<Navigate to=\"/login\" replace />} />\n        <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\n      </Routes>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,SAASA,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAC1D,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,qBAAqB,MAAM,+BAA+B;AACjE,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,cAAc,MAAM,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAKE,SAAS,EAAC,wEAAwE;IAAAC,QAAA,eACrFH,OAAA,CAACV,MAAM;MAAAa,QAAA,gBAELH,OAAA,CAACT,KAAK;QAACa,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEL,OAAA,CAACP,SAAS;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CT,OAAA,CAACT,KAAK;QAACa,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEL,OAAA,CAACN,YAAY;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGrDT,OAAA,CAACT,KAAK;QACJa,IAAI,EAAC,eAAe;QACpBC,OAAO,eACLL,OAAA,CAACF,cAAc;UAACY,YAAY,EAAE,CAAC,cAAc,CAAE;UAAAP,QAAA,eAC7CH,OAAA,CAACH,MAAM;YAAAM,QAAA,eACLH,OAAA,CAACL,qBAAqB;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MACjB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAEFT,OAAA,CAACT,KAAK;QACJa,IAAI,EAAC,SAAS;QACdC,OAAO,eACLL,OAAA,CAACF,cAAc;UAACY,YAAY,EAAE,CAAC,QAAQ,CAAE;UAAAP,QAAA,eACvCH,OAAA,CAACH,MAAM;YAAAM,QAAA,eACLH,OAAA,CAACJ,eAAe;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MACjB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAGFT,OAAA,CAACT,KAAK;QAACa,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEL,OAAA,CAACR,QAAQ;UAACmB,EAAE,EAAC,QAAQ;UAACC,OAAO;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7DT,OAAA,CAACT,KAAK;QAACa,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEL,OAAA,CAACR,QAAQ;UAACmB,EAAE,EAAC,QAAQ;UAACC,OAAO;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACI,EAAA,GArCQZ,GAAG;AAuCZ,eAAeA,GAAG;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}