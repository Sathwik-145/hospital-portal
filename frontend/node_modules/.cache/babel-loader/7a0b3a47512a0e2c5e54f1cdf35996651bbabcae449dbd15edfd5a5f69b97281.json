{"ast":null,"code":"// import { useEffect, useState } from 'react';\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [name, setName] = useState('');\n//   const [age, setAge] = useState('');\n//   const [disease, setDisease] = useState('');\n//   const [editingId, setEditingId] = useState(null);\n//   const [toast, setToast] = useState(null);\n\n//   // Mock data for testing\n//   useEffect(() => {\n//     const mockPatients = [\n//       { id: 1, name: 'John Doe', age: 35, disease: 'Hypertension' },\n//       { id: 2, name: 'Jane Smith', age: 28, disease: 'Diabetes' },\n//       { id: 3, name: 'Bob Johnson', age: 45, disease: 'Asthma' },\n//     ];\n//     setPatients(mockPatients);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const newPatient = {\n//       id: editingId || Date.now(),\n//       name,\n//       age: parseInt(age),\n//       disease\n//     };\n\n//     if (editingId) {\n//       setPatients(patients.map(p => p.id === editingId ? newPatient : p));\n//       setToast({ message: 'Patient updated successfully!', type: 'success' });\n//     } else {\n//       setPatients([...patients, newPatient]);\n//       setToast({ message: 'Patient added successfully!', type: 'success' });\n//     }\n\n//     resetForm();\n//   };\n\n//   const handleDelete = (id) => {\n//     if (window.confirm('Are you sure you want to delete this patient?')) {\n//       setPatients(patients.filter(p => p.id !== id));\n//       setToast({ message: 'Patient deleted successfully!', type: 'success' });\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setAge('');\n//     setDisease('');\n//     setShowForm(false);\n//     setEditingId(null);\n//   };\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name);\n//     setAge(String(patient.age));\n//     setDisease(patient.disease);\n//     setEditingId(patient.id);\n//     setShowForm(true);\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">Receptionist Dashboard</h1>\n//         <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//       </div>\n\n//       <div className=\"stats-grid\">\n//         <div className=\"stat-card blue\">\n//           <div className=\"stat-info\">\n//             <h3>Total Patients</h3>\n//             <p>{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card green\">\n//           <div className=\"stat-info\">\n//             <h3>Active Cases</h3>\n//             <p>{patients.filter(p => p.disease).length}</p>\n//           </div>\n//           <div className=\"stat-icon\">📋</div>\n//         </div>\n\n//         <div className=\"stat-card purple\">\n//           <div className=\"stat-info\">\n//             <h3>Today</h3>\n//             <p>{new Date().getDate()}</p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       <div style={{ textAlign: 'center', marginBottom: '32px' }}>\n//         <button\n//           className=\"btn-add\"\n//           onClick={() => setShowForm(!showForm)}\n//         >\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {showForm && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h2 className=\"modal-title\">\n//                 {editingId ? 'Edit Patient' : 'Add New Patient'}\n//               </h2>\n//               <p className=\"modal-subtitle\">\n//                 {editingId ? 'Update patient information' : 'Enter patient details below'}\n//               </p>\n//             </div>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter full name\"\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Age</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter age\"\n//                   value={age}\n//                   onChange={(e) => setAge(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Disease/Condition</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter disease or condition (optional)\"\n//                   value={disease}\n//                   onChange={(e) => setDisease(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"btn btn-submit\">\n//                   {editingId ? 'Update Patient' : 'Add Patient'}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <div className=\"patient-grid\">\n//         {patients.map((patient) => (\n//           <div key={patient.id} className=\"patient-card\">\n//             <div className=\"patient-header\">\n//               <div>\n//                 <h3 className=\"patient-name\">{patient.name}</h3>\n//                 <span className=\"patient-id\">ID: {patient.id}</span>\n//               </div>\n//             </div>\n\n//             <div className=\"patient-details\">\n//               <div className=\"patient-detail\">\n//                 <span>👤</span>\n//                 <span>Age: {patient.age} years</span>\n//               </div>\n//               <div className=\"patient-detail\">\n//                 <span>🏥</span>\n//                 <span>Condition: {patient.disease || 'None specified'}</span>\n//               </div>\n//             </div>\n\n//             <div className=\"patient-actions\">\n//               <button\n//                 onClick={() => handleEdit(patient)}\n//                 className=\"btn btn-edit\"\n//               >\n//                 ✏️ Edit\n//               </button>\n//               <button\n//                 onClick={() => handleDelete(patient.id)}\n//                 className=\"btn btn-delete\"\n//               >\n//                 🗑️ Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {patients.length === 0 && (\n//         <div className=\"empty-state\">\n//           <div className=\"empty-icon\">👥</div>\n//           <h3 className=\"empty-title\">No Patients Yet</h3>\n//           <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//         </div>\n//       )}\n\n//       {toast && (\n//         <div className={`toast ${toast.type === 'success' ? 'toast-success' : 'toast-error'}`}>\n//           <span className=\"toast-icon\">{toast.type === 'success' ? '✅' : '❌'}</span>\n//           <span className=\"toast-message\">{toast.message}</span>\n//           <button className=\"toast-close\" onClick={() => setToast(null)}>\n//             ×\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n///////////////\n\n// import { useEffect, useState } from 'react';\n// import Toast from '../components/Toast';\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [name, setName] = useState('');\n//   const [age, setAge] = useState('');\n//   const [gender, setGender] = useState('');\n//   const [diagnosis, setDiagnosis] = useState('');\n//   const [phoneNumber, setPhoneNumber] = useState('');\n//   const [editingId, setEditingId] = useState(null);\n//   const [toast, setToast] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     fetchPatients();\n//   }, []);\n\n//   const fetchPatients = async () => {\n//     try {\n//       const res = await fetch('http://localhost:8080/api/patients', {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (res.ok) {\n//         const data = await res.json();\n//         setPatients(data);\n//       } else {\n//         setToast({ message: 'Failed to fetch patients', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error fetching patients:', err);\n//       setToast({ message: 'Network error while fetching patients', type: 'error' });\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const patientData = {\n//       name,\n//       age: parseInt(age),\n//       gender,\n//       diagnosis,\n//       phone_number: phoneNumber\n//     };\n\n//     try {\n//       let url = 'http://localhost:8080/api/patients';\n//       let method = 'POST';\n\n//       if (editingId) {\n//         url = `http://localhost:8080/api/patients/${editingId}`;\n//         method = 'PUT';\n//       }\n\n//       const res = await fetch(url, {\n//         method,\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${token}`\n//         },\n//         body: JSON.stringify(patientData)\n//       });\n\n//       if (res.ok) {\n//         const data = await res.json();\n\n//         if (editingId) {\n//           setPatients(patients.map(p => p.id === editingId ? data : p));\n//           setToast({ message: 'Patient updated successfully!', type: 'success' });\n//         } else {\n//           setPatients([...patients, data]);\n//           setToast({ message: 'Patient added successfully!', type: 'success' });\n//         }\n\n//         resetForm();\n//       } else {\n//         const errorData = await res.json();\n//         setToast({ message: errorData.error || 'Failed to save patient', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error saving patient:', err);\n//       setToast({ message: 'Network error while saving patient', type: 'error' });\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm('Are you sure you want to delete this patient?')) return;\n\n//     try {\n//       const res = await fetch(`http://localhost:8080/api/patients/${id}`, {\n//         method: 'DELETE',\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (res.ok) {\n//         setPatients(patients.filter(p => p.id !== id));\n//         setToast({ message: 'Patient deleted successfully!', type: 'success' });\n//       } else {\n//         const errorData = await res.json();\n//         setToast({ message: errorData.error || 'Failed to delete patient', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error deleting patient:', err);\n//       setToast({ message: 'Network error while deleting patient', type: 'error' });\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setAge('');\n//     setGender('');\n//     setDiagnosis('');\n//     setPhoneNumber('');\n//     setShowForm(false);\n//     setEditingId(null);\n//   };\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name);\n//     setAge(String(patient.age));\n//     setGender(patient.gender || '');\n//     setDiagnosis(patient.diagnosis || '');\n//     setPhoneNumber(patient.phone_number || '');\n//     setEditingId(patient.id);\n//     setShowForm(true);\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"flex items-center justify-center h-64\">\n//         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div>\n//       <div className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">Receptionist Dashboard</h1>\n//         <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//       </div>\n\n//       <div className=\"stats-grid\">\n//         <div className=\"stat-card blue\">\n//           <div className=\"stat-info\">\n//             <h3>Total Patients</h3>\n//             <p>{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card green\">\n//           <div className=\"stat-info\">\n//             <h3>Active Cases</h3>\n//             <p>{patients.filter(p => p.diagnosis).length}</p>\n//           </div>\n//           <div className=\"stat-icon\">📋</div>\n//         </div>\n\n//         <div className=\"stat-card purple\">\n//           <div className=\"stat-info\">\n//             <h3>Today</h3>\n//             <p>{new Date().getDate()}</p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       <div style={{ textAlign: 'center', marginBottom: '32px' }}>\n//         <button\n//           className=\"btn-add\"\n//           onClick={() => setShowForm(!showForm)}\n//         >\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {showForm && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h2 className=\"modal-title\">\n//                 {editingId ? 'Edit Patient' : 'Add New Patient'}\n//               </h2>\n//               <p className=\"modal-subtitle\">\n//                 {editingId ? 'Update patient information' : 'Enter patient details below'}\n//               </p>\n//             </div>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter full name\"\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Age</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter age\"\n//                   value={age}\n//                   onChange={(e) => setAge(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Gender</label>\n//                 <select\n//                   className=\"form-select\"\n//                   value={gender}\n//                   onChange={(e) => setGender(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 >\n//                   <option value=\"\">Select gender</option>\n//                   <option value=\"Male\">Male</option>\n//                   <option value=\"Female\">Female</option>\n//                   <option value=\"Other\">Other</option>\n//                 </select>\n//               </div>\n//               // Add this to your patient registration form in ReceptionistDashboard.jsx\n// // In the form section, add this field after gender:\n\n//             <div className=\"form-group\">\n//               <label className=\"form-label\">Relationship to Phone Number Holder *</label>\n//               <select\n//                 name=\"relationship\"\n//                 className=\"form-input\"\n//                 value={newPatient.relationship || 'self'}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"self\">Self (I am the patient)</option>\n//                 <option value=\"son\">Son</option>\n//                 <option value=\"daughter\">Daughter</option>\n//                 <option value=\"mother\">Mother</option>\n//                 <option value=\"father\">Father</option>\n//                 <option value=\"spouse\">Spouse/Partner</option>\n//                 <option value=\"brother\">Brother</option>\n//                 <option value=\"sister\">Sister</option>\n//                 <option value=\"grandfather\">Grandfather</option>\n//                 <option value=\"grandmother\">Grandmother</option>\n//                 <option value=\"other\">Other Family Member</option>\n//               </select>\n//               <span className=\"helper-text\">\n//                 Who is the patient in relation to the person who owns this phone number?\n//               </span>\n//             </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Diagnosis/Condition</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter diagnosis or condition (optional)\"\n//                   value={diagnosis}\n//                   onChange={(e) => setDiagnosis(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Phone Number</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter phone number\"\n//                   value={phoneNumber}\n//                   onChange={(e) => setPhoneNumber(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"btn btn-submit\">\n//                   {editingId ? 'Update Patient' : 'Add Patient'}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <div className=\"patient-grid\">\n//         {patients.map((patient) => (\n//           <div key={patient.id} className=\"patient-card\">\n//             <div className=\"patient-header\">\n//               <div>\n//                 <h3 className=\"patient-name\">{patient.name}</h3>\n//                 <span className=\"patient-id\">ID: {patient.id}</span>\n//               </div>\n//             </div>\n\n//             <div className=\"patient-details\">\n//               <div className=\"patient-detail\">\n//                 <span>👤</span>\n//                 <span>Age: {patient.age} years</span>\n//               </div>\n//               {patient.gender && (\n//                 <div className=\"patient-detail\">\n//                   <span>⚧️</span>\n//                   <span>Gender: {patient.gender}</span>\n//                 </div>\n//               )}\n//               <div className=\"patient-detail\">\n//                 <span>🏥</span>\n//                 <span>Diagnosis: {patient.diagnosis || 'None specified'}</span>\n//               </div>\n//               {patient.phone_number && (\n//                 <div className=\"patient-detail\">\n//                   <span>📞</span>\n//                   <span>Phone: {patient.phone_number}</span>\n//                 </div>\n//               )}\n//             </div>\n\n//             <div className=\"patient-actions\">\n//               <button\n//                 onClick={() => handleEdit(patient)}\n//                 className=\"btn btn-edit\"\n//               >\n//                 ✏️ Edit\n//               </button>\n//               <button\n//                 onClick={() => handleDelete(patient.id)}\n//                 className=\"btn btn-delete\"\n//               >\n//                 🗑️ Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {patients.length === 0 && (\n//         <div className=\"empty-state\">\n//           <div className=\"empty-icon\">👥</div>\n//           <h3 className=\"empty-title\">No Patients Yet</h3>\n//           <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//         </div>\n//       )}\n\n//       {toast && (\n//         <Toast \n//           message={toast.message} \n//           type={toast.type} \n//           onClose={() => setToast(null)} \n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n// \"use client\"\n\n// import { useEffect, useState } from \"react\"\n// import Layout from \"../components/Layout\"\n\n// // Simple Toast component since it's missing\n// const Toast = ({ message, type, onClose }) => {\n//   useEffect(() => {\n//     const timer = setTimeout(() => {\n//       onClose()\n//     }, 3000)\n//     return () => clearTimeout(timer)\n//   }, [onClose])\n\n//   return (\n//     <div className={`toast ${type === \"success\" ? \"toast-success\" : \"toast-error\"}`}>\n//       <span className=\"toast-icon\">{type === \"success\" ? \"✅\" : \"❌\"}</span>\n//       <span className=\"toast-message\">{message}</span>\n//       <button className=\"toast-close\" onClick={onClose}>\n//         ✕\n//       </button>\n//     </div>\n//   )\n// }\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([])\n//   const [showForm, setShowForm] = useState(false)\n//   const [name, setName] = useState(\"\")\n//   const [age, setAge] = useState(\"\")\n//   const [gender, setGender] = useState(\"\")\n//   const [diagnosis, setDiagnosis] = useState(\"\")\n//   const [phoneNumber, setPhoneNumber] = useState(\"\")\n//   const [relationship, setRelationship] = useState(\"self\")\n//   const [editingId, setEditingId] = useState(null)\n//   const [toast, setToast] = useState(null)\n//   const [loading, setLoading] = useState(true)\n//   const token = localStorage.getItem(\"token\")\n\n//   useEffect(() => {\n//     fetchPatients()\n//   }, [])\n\n//   const fetchPatients = async () => {\n//     try {\n//       const res = await fetch(\"http://localhost:8080/api/patients\", {\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       })\n\n//       if (res.ok) {\n//         const data = await res.json()\n//         setPatients(data || [])\n//       } else {\n//         setToast({ message: \"Failed to fetch patients\", type: \"error\" })\n//       }\n//     } catch (err) {\n//       console.error(\"Error fetching patients:\", err)\n//       setToast({ message: \"Network error while fetching patients\", type: \"error\" })\n//     } finally {\n//       setLoading(false)\n//     }\n//   }\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault()\n\n//     const patientData = {\n//       name,\n//       age: Number.parseInt(age),\n//       gender,\n//       diagnosis,\n//       phone_number: phoneNumber,\n//       relationship,\n//     }\n\n//     try {\n//       let url = \"http://localhost:8080/api/patients\"\n//       let method = \"POST\"\n\n//       if (editingId) {\n//         url = `http://localhost:8080/api/patients/${editingId}`\n//         method = \"PUT\"\n//       }\n\n//       const res = await fetch(url, {\n//         method,\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${token}`,\n//         },\n//         body: JSON.stringify(patientData),\n//       })\n\n//       if (res.ok) {\n//         const data = await res.json()\n\n//         if (editingId) {\n//           const updatedPatient = data.patient || data\n//           setPatients(patients.map((p) => (p.id === editingId ? updatedPatient : p)))\n//           setToast({ message: \"Patient updated successfully!\", type: \"success\" })\n//         } else {\n//           setPatients([...patients, data])\n//           setToast({ message: \"Patient added successfully!\", type: \"success\" })\n//         }\n\n//         resetForm()\n//       } else {\n//         const errorData = await res.json()\n//         setToast({ message: errorData.error || \"Failed to save patient\", type: \"error\" })\n//       }\n//     } catch (err) {\n//       console.error(\"Error saving patient:\", err)\n//       setToast({ message: \"Network error while saving patient\", type: \"error\" })\n//     }\n//   }\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Are you sure you want to delete this patient?\")) return\n\n//     try {\n//       const res = await fetch(`http://localhost:8080/api/patients/${id}`, {\n//         method: \"DELETE\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       })\n\n//       if (res.ok) {\n//         setPatients(patients.filter((p) => p.id !== id))\n//         setToast({ message: \"Patient deleted successfully!\", type: \"success\" })\n//       } else {\n//         const errorData = await res.json()\n//         setToast({ message: errorData.error || \"Failed to delete patient\", type: \"error\" })\n//       }\n//     } catch (err) {\n//       console.error(\"Error deleting patient:\", err)\n//       setToast({ message: \"Network error while deleting patient\", type: \"error\" })\n//     }\n//   }\n\n//   const resetForm = () => {\n//     setName(\"\")\n//     setAge(\"\")\n//     setGender(\"\")\n//     setDiagnosis(\"\")\n//     setPhoneNumber(\"\")\n//     setRelationship(\"self\")\n//     setShowForm(false)\n//     setEditingId(null)\n//   }\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name)\n//     setAge(String(patient.age))\n//     setGender(patient.gender || \"\")\n//     setDiagnosis(patient.diagnosis || \"\")\n//     setPhoneNumber(patient.phone_number || \"\")\n//     setRelationship(patient.relationship || \"self\")\n//     setEditingId(patient.id)\n//     setShowForm(true)\n//   }\n\n//   if (loading) {\n//     return (\n//       <Layout>\n//         <div className=\"content\">\n//           <div className=\"content-card\">\n//             <div style={{ textAlign: \"center\", padding: \"60px 20px\" }}>\n//               <div\n//                 style={{\n//                   width: \"48px\",\n//                   height: \"48px\",\n//                   border: \"4px solid #e5e7eb\",\n//                   borderTop: \"4px solid #667eea\",\n//                   borderRadius: \"50%\",\n//                   animation: \"spin 1s linear infinite\",\n//                   margin: \"0 auto 16px\",\n//                 }}\n//               ></div>\n//               <p style={{ color: \"#6b7280\", fontSize: \"16px\" }}>Loading patients...</p>\n//             </div>\n//           </div>\n//         </div>\n//       </Layout>\n//     )\n//   }\n\n//   return (\n//     <Layout>\n//       <div className=\"content\">\n//         <div className=\"content-card\">\n//           <div className=\"dashboard-header\">\n//             <h1 className=\"dashboard-title\">👩‍💼 Receptionist Dashboard</h1>\n//             <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//           </div>\n\n//           <div className=\"stats-grid\">\n//             <div className=\"stat-card blue\">\n//               <div className=\"stat-info\">\n//                 <h3>Total Patients</h3>\n//                 <p>{patients.length}</p>\n//               </div>\n//               <div className=\"stat-icon\">👥</div>\n//             </div>\n\n//             <div className=\"stat-card green\">\n//               <div className=\"stat-info\">\n//                 <h3>Active Cases</h3>\n//                 <p>{patients.filter((p) => p.diagnosis && p.diagnosis !== \"N/A\").length}</p>\n//               </div>\n//               <div className=\"stat-icon\">📋</div>\n//             </div>\n\n//             <div className=\"stat-card purple\">\n//               <div className=\"stat-info\">\n//                 <h3>New Today</h3>\n//                 <p>\n//                   {\n//                     patients.filter(\n//                       (p) => p.created_at && new Date(p.created_at).toDateString() === new Date().toDateString(),\n//                     ).length\n//                   }\n//                 </p>\n//               </div>\n//               <div className=\"stat-icon\">📅</div>\n//             </div>\n\n//             <div className=\"stat-card orange\">\n//               <div className=\"stat-info\">\n//                 <h3>Family Members</h3>\n//                 <p>{patients.filter((p) => p.relationship !== \"self\").length}</p>\n//               </div>\n//               <div className=\"stat-icon\">👨‍👩‍👧‍👦</div>\n//             </div>\n//           </div>\n\n//           <div style={{ textAlign: \"center\", marginBottom: \"32px\" }}>\n//             <button className=\"btn-add\" onClick={() => setShowForm(!showForm)}>\n//               ➕ Add New Patient\n//             </button>\n//           </div>\n\n//           {showForm && (\n//             <div className=\"modal-overlay\">\n//               <div className=\"modal-content\">\n//                 <div className=\"modal-header\">\n//                   <h2 className=\"modal-title\">{editingId ? \"Edit Patient\" : \"Add New Patient\"}</h2>\n//                   <p className=\"modal-subtitle\">\n//                     {editingId ? \"Update patient information\" : \"Enter patient details below\"}\n//                   </p>\n//                 </div>\n\n//                 <form onSubmit={handleSubmit}>\n//                   <div className=\"form-group\">\n//                     <label className=\"form-label\">👤 Full Name</label>\n//                     <input\n//                       type=\"text\"\n//                       className=\"form-input\"\n//                       placeholder=\"Enter full name\"\n//                       value={name}\n//                       onChange={(e) => setName(e.target.value)}\n//                       required\n//                     />\n//                   </div>\n\n//                   <div className=\"form-group\">\n//                     <label className=\"form-label\">🎂 Age</label>\n//                     <input\n//                       type=\"number\"\n//                       className=\"form-input\"\n//                       placeholder=\"Enter age\"\n//                       value={age}\n//                       onChange={(e) => setAge(e.target.value)}\n//                       required\n//                     />\n//                   </div>\n\n//                   <div className=\"form-group\">\n//                     <label className=\"form-label\">⚧️ Gender</label>\n//                     <select\n//                       className=\"form-input\"\n//                       value={gender}\n//                       onChange={(e) => setGender(e.target.value)}\n//                       style={{ paddingLeft: \"16px\" }}\n//                     >\n//                       <option value=\"\">Select gender</option>\n//                       <option value=\"Male\">Male</option>\n//                       <option value=\"Female\">Female</option>\n//                       <option value=\"Other\">Other</option>\n//                     </select>\n//                   </div>\n\n//                   <div className=\"form-group\">\n//                     <label className=\"form-label\">👥 Relationship to Phone Number Holder</label>\n//                     <select\n//                       className=\"form-input\"\n//                       value={relationship}\n//                       onChange={(e) => setRelationship(e.target.value)}\n//                       required\n//                     >\n//                       <option value=\"self\">Self (I am the patient)</option>\n//                       <option value=\"son\">Son</option>\n//                       <option value=\"daughter\">Daughter</option>\n//                       <option value=\"mother\">Mother</option>\n//                       <option value=\"father\">Father</option>\n//                       <option value=\"spouse\">Spouse/Partner</option>\n//                       <option value=\"brother\">Brother</option>\n//                       <option value=\"sister\">Sister</option>\n//                       <option value=\"grandfather\">Grandfather</option>\n//                       <option value=\"grandmother\">Grandmother</option>\n//                       <option value=\"other\">Other Family Member</option>\n//                     </select>\n//                   </div>\n\n//                   <div className=\"form-group\">\n//                     <label className=\"form-label\">🏥 Diagnosis/Condition</label>\n//                     <input\n//                       type=\"text\"\n//                       className=\"form-input\"\n//                       placeholder=\"Enter diagnosis or condition (optional)\"\n//                       value={diagnosis}\n//                       onChange={(e) => setDiagnosis(e.target.value)}\n//                     />\n//                   </div>\n\n//                   <div className=\"form-group\">\n//                     <label className=\"form-label\">📞 Phone Number</label>\n//                     <input\n//                       type=\"text\"\n//                       className=\"form-input\"\n//                       placeholder=\"Enter phone number\"\n//                       value={phoneNumber}\n//                       onChange={(e) => setPhoneNumber(e.target.value)}\n//                     />\n//                   </div>\n\n//                   <div className=\"form-actions\">\n//                     <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                       Cancel\n//                     </button>\n//                     <button type=\"submit\" className=\"btn btn-submit\">\n//                       {editingId ? \"Update Patient\" : \"Add Patient\"}\n//                     </button>\n//                   </div>\n//                 </form>\n//               </div>\n//             </div>\n//           )}\n\n//           <div style={{ marginBottom: \"32px\" }}>\n//             <h2 style={{ fontSize: \"24px\", fontWeight: \"bold\", marginBottom: \"16px\", color: \"#1f2937\" }}>\n//               📋 Patients List\n//             </h2>\n//             <p style={{ color: \"#6b7280\", marginBottom: \"24px\" }}>\n//               Manage all registered patients and their information\n//             </p>\n\n//             {patients.length === 0 ? (\n//               <div className=\"empty-state\">\n//                 <div className=\"empty-icon\">👥</div>\n//                 <h3 className=\"empty-title\">No Patients Yet</h3>\n//                 <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//               </div>\n//             ) : (\n//               <div className=\"patient-grid\">\n//                 {patients.map((patient) => (\n//                   <div key={patient.id} className=\"patient-card\">\n//                     <div className=\"patient-header\">\n//                       <div>\n//                         <h3 className=\"patient-name\">\n//                           {patient.relationship === \"self\" ? \"👤\" : \"👥\"} {patient.name}\n//                         </h3>\n//                         <span className=\"patient-id\">ID: {patient.id}</span>\n//                       </div>\n//                       {patient.relationship !== \"self\" && (\n//                         <span\n//                           style={{\n//                             background: \"#e0e7ff\",\n//                             color: \"#4338ca\",\n//                             padding: \"4px 12px\",\n//                             borderRadius: \"20px\",\n//                             fontSize: \"12px\",\n//                             fontWeight: \"600\",\n//                           }}\n//                         >\n//                           {patient.relationship}\n//                         </span>\n//                       )}\n//                     </div>\n\n//                     <div className=\"patient-details\">\n//                       <div className=\"patient-detail\">\n//                         <span>🎂</span>\n//                         <span>Age: {patient.age} years</span>\n//                       </div>\n//                       {patient.gender && (\n//                         <div className=\"patient-detail\">\n//                           <span>⚧️</span>\n//                           <span>Gender: {patient.gender}</span>\n//                         </div>\n//                       )}\n//                       <div className=\"patient-detail\">\n//                         <span>🏥</span>\n//                         <span>Diagnosis: {patient.diagnosis || \"None specified\"}</span>\n//                       </div>\n//                       {patient.phone_number && (\n//                         <div className=\"patient-detail\">\n//                           <span>📞</span>\n//                           <span>Phone: {patient.phone_number}</span>\n//                         </div>\n//                       )}\n//                       {patient.relationship && (\n//                         <div className=\"patient-detail\">\n//                           <span>👥</span>\n//                           <span>Relationship: {patient.relationship}</span>\n//                         </div>\n//                       )}\n//                       {patient.created_at && (\n//                         <div className=\"patient-detail\">\n//                           <span>📅</span>\n//                           <span>Registered: {new Date(patient.created_at).toLocaleDateString()}</span>\n//                         </div>\n//                       )}\n//                     </div>\n\n//                     <div className=\"patient-actions\">\n//                       <button onClick={() => handleEdit(patient)} className=\"btn btn-edit\">\n//                         ✏️ Edit\n//                       </button>\n//                       <button onClick={() => handleDelete(patient.id)} className=\"btn btn-delete\">\n//                         🗑️ Delete\n//                       </button>\n//                     </div>\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n\n//           {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\n//         </div>\n//       </div>\n//     </Layout>\n//   )\n// }\n\n// \"use client\"\n\n// import { useState, useEffect } from \"react\"\n\n// const ReceptionistDashboard = () => {\n//   const [patients, setPatients] = useState([])\n//   const [loading, setLoading] = useState(true)\n//   const [showForm, setShowForm] = useState(false)\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     age: \"\",\n//     gender: \"\",\n//     diagnosis: \"\",\n//     phone_number: \"\",\n//     relationship: \"self\",\n//   })\n//   const [editingId, setEditingId] = useState(null)\n//   const [error, setError] = useState(\"\")\n//   const [success, setSuccess] = useState(\"\")\n\n//   const token = localStorage.getItem(\"token\")\n\n//   // Fetch patients on component mount\n//   useEffect(() => {\n//     fetchPatients()\n//   }, [])\n\n//   const fetchPatients = async () => {\n//     try {\n//       setLoading(true)\n//       const response = await fetch(\"http://localhost:8080/api/patients\", {\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       })\n\n//       if (response.ok) {\n//         const data = await response.json()\n//         setPatients(data || [])\n//         setError(\"\")\n//       } else {\n//         setError(\"Failed to fetch patients\")\n//       }\n//     } catch (err) {\n//       console.error(\"Error fetching patients:\", err)\n//       setError(\"Network error while fetching patients\")\n//     } finally {\n//       setLoading(false)\n//     }\n//   }\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault()\n\n//     try {\n//       const patientData = {\n//         name: formData.name,\n//         age: Number.parseInt(formData.age),\n//         gender: formData.gender,\n//         diagnosis: formData.diagnosis,\n//         phone_number: formData.phone_number,\n//         relationship: formData.relationship,\n//       }\n\n//       let url = \"http://localhost:8080/api/patients\"\n//       let method = \"POST\"\n\n//       if (editingId) {\n//         url = `http://localhost:8080/api/patients/${editingId}`\n//         method = \"PUT\"\n//       }\n\n//       const response = await fetch(url, {\n//         method,\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${token}`,\n//         },\n//         body: JSON.stringify(patientData),\n//       })\n\n//       if (response.ok) {\n//         setSuccess(editingId ? \"Patient updated successfully!\" : \"Patient added successfully!\")\n//         resetForm()\n//         fetchPatients()\n//       } else {\n//         const errorData = await response.json()\n//         setError(errorData.error || \"Failed to save patient\")\n//       }\n//     } catch (err) {\n//       console.error(\"Error saving patient:\", err)\n//       setError(\"Network error while saving patient\")\n//     }\n//   }\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Are you sure you want to delete this patient?\")) return\n\n//     try {\n//       const response = await fetch(`http://localhost:8080/api/patients/${id}`, {\n//         method: \"DELETE\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       })\n\n//       if (response.ok) {\n//         setSuccess(\"Patient deleted successfully!\")\n//         fetchPatients()\n//       } else {\n//         const errorData = await response.json()\n//         setError(errorData.error || \"Failed to delete patient\")\n//       }\n//     } catch (err) {\n//       console.error(\"Error deleting patient:\", err)\n//       setError(\"Network error while deleting patient\")\n//     }\n//   }\n\n//   const handleEdit = (patient) => {\n//     setFormData({\n//       name: patient.name || \"\",\n//       age: patient.age ? String(patient.age) : \"\",\n//       gender: patient.gender || \"\",\n//       diagnosis: patient.diagnosis || \"\",\n//       phone_number: patient.phone_number || \"\",\n//       relationship: patient.relationship || \"self\",\n//     })\n//     setEditingId(patient.id)\n//     setShowForm(true)\n//   }\n\n//   const resetForm = () => {\n//     setFormData({\n//       name: \"\",\n//       age: \"\",\n//       gender: \"\",\n//       diagnosis: \"\",\n//       phone_number: \"\",\n//       relationship: \"self\",\n//     })\n//     setEditingId(null)\n//     setShowForm(false)\n//   }\n\n//   return (\n//     <div className=\"receptionist-dashboard\">\n//       <div className=\"dashboard-header\">\n//         <h1>👩‍💼 Receptionist Dashboard</h1>\n//         <p>Manage patient registrations and information</p>\n//       </div>\n\n//       {/* Stats Cards */}\n//       <div className=\"stats-container\">\n//         <div className=\"stat-card\" style={{ backgroundColor: \"#4ade80\" }}>\n//           <div className=\"stat-content\">\n//             <h3>Total Patients</h3>\n//             <p className=\"stat-number\">{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card\" style={{ backgroundColor: \"#60a5fa\" }}>\n//           <div className=\"stat-content\">\n//             <h3>Active Cases</h3>\n//             <p className=\"stat-number\">\n//               {patients.filter((p) => p.diagnosis && p.diagnosis !== \"None specified\").length}\n//             </p>\n//           </div>\n//           <div className=\"stat-icon\">🏥</div>\n//         </div>\n\n//         <div className=\"stat-card\" style={{ backgroundColor: \"#c084fc\" }}>\n//           <div className=\"stat-content\">\n//             <h3>Family Members</h3>\n//             <p className=\"stat-number\">{patients.filter((p) => p.relationship && p.relationship !== \"self\").length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👨‍👩‍👧‍👦</div>\n//         </div>\n\n//         <div className=\"stat-card\" style={{ backgroundColor: \"#fb923c\" }}>\n//           <div className=\"stat-content\">\n//             <h3>Today's Registrations</h3>\n//             <p className=\"stat-number\">\n//               {\n//                 patients.filter(\n//                   (p) => p.created_at && new Date(p.created_at).toDateString() === new Date().toDateString(),\n//                 ).length\n//               }\n//             </p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       {/* Action Button */}\n//       <div className=\"action-container\">\n//         <button className=\"add-button\" onClick={() => setShowForm(true)}>\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {/* Error and Success Messages */}\n//       {error && (\n//         <div className=\"message error-message\">\n//           <p>❌ {error}</p>\n//           <button onClick={() => setError(\"\")}>×</button>\n//         </div>\n//       )}\n\n//       {success && (\n//         <div className=\"message success-message\">\n//           <p>✅ {success}</p>\n//           <button onClick={() => setSuccess(\"\")}>×</button>\n//         </div>\n//       )}\n\n//       {/* Patient List */}\n//       <div className=\"patients-section\">\n//         <h2>📋 Patient Records</h2>\n\n//         {loading ? (\n//           <div className=\"loading-container\">\n//             <div className=\"loading-spinner\"></div>\n//             <p>Loading patients...</p>\n//           </div>\n//         ) : patients.length === 0 ? (\n//           <div className=\"empty-state\">\n//             <div className=\"empty-icon\">👥</div>\n//             <h3>No Patients Yet</h3>\n//             <p>Start by adding your first patient to the system.</p>\n//           </div>\n//         ) : (\n//           <div className=\"patients-grid\">\n//             {patients.map((patient) => (\n//               <div key={patient.id} className=\"patient-card\">\n//                 <div className=\"patient-header\">\n//                   <h3>{patient.name}</h3>\n//                   <span className=\"patient-id\">ID: {patient.id}</span>\n//                 </div>\n\n//                 <div className=\"patient-details\">\n//                   <p>\n//                     <span>👤</span> Age: {patient.age} years\n//                   </p>\n//                   {patient.gender && (\n//                     <p>\n//                       <span>⚧️</span> Gender: {patient.gender}\n//                     </p>\n//                   )}\n//                   <p>\n//                     <span>🏥</span> Diagnosis: {patient.diagnosis || \"None specified\"}\n//                   </p>\n//                   {patient.phone_number && (\n//                     <p>\n//                       <span>📞</span> Phone: {patient.phone_number}\n//                     </p>\n//                   )}\n//                   {patient.relationship && (\n//                     <p>\n//                       <span>👥</span> Relationship: {patient.relationship}\n//                     </p>\n//                   )}\n//                 </div>\n\n//                 <div className=\"patient-actions\">\n//                   <button className=\"edit-button\" onClick={() => handleEdit(patient)}>\n//                     ✏️ Edit\n//                   </button>\n//                   <button className=\"delete-button\" onClick={() => handleDelete(patient.id)}>\n//                     🗑️ Delete\n//                   </button>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Add/Edit Patient Form Modal */}\n//       {showForm && (\n//         <div className=\"modal-overlay\" onClick={() => resetForm()}>\n//           <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n//             <h2>{editingId ? \"Edit Patient\" : \"Add New Patient\"}</h2>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label>👤 Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   value={formData.name}\n//                   onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n//                   placeholder=\"Enter patient name\"\n//                   required\n//                 />\n//               </div>\n\n//               <div className=\"form-row\">\n//                 <div className=\"form-group\">\n//                   <label>🎂 Age</label>\n//                   <input\n//                     type=\"number\"\n//                     value={formData.age}\n//                     onChange={(e) => setFormData({ ...formData, age: e.target.value })}\n//                     placeholder=\"Enter age\"\n//                     required\n//                   />\n//                 </div>\n\n//                 <div className=\"form-group\">\n//                   <label>⚧️ Gender</label>\n//                   <select\n//                     value={formData.gender}\n//                     onChange={(e) => setFormData({ ...formData, gender: e.target.value })}\n//                   >\n//                     <option value=\"\">Select gender</option>\n//                     <option value=\"Male\">Male</option>\n//                     <option value=\"Female\">Female</option>\n//                     <option value=\"Other\">Other</option>\n//                   </select>\n//                 </div>\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label>📞 Phone Number</label>\n//                 <input\n//                   type=\"text\"\n//                   value={formData.phone_number}\n//                   onChange={(e) => setFormData({ ...formData, phone_number: e.target.value })}\n//                   placeholder=\"Enter phone number\"\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label>👥 Relationship</label>\n//                 <select\n//                   value={formData.relationship}\n//                   onChange={(e) => setFormData({ ...formData, relationship: e.target.value })}\n//                   required\n//                 >\n//                   <option value=\"self\">Self (Patient)</option>\n//                   <option value=\"son\">Son</option>\n//                   <option value=\"daughter\">Daughter</option>\n//                   <option value=\"spouse\">Spouse</option>\n//                   <option value=\"mother\">Mother</option>\n//                   <option value=\"father\">Father</option>\n//                   <option value=\"brother\">Brother</option>\n//                   <option value=\"sister\">Sister</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label>🏥 Diagnosis</label>\n//                 <textarea\n//                   value={formData.diagnosis}\n//                   onChange={(e) => setFormData({ ...formData, diagnosis: e.target.value })}\n//                   placeholder=\"Enter diagnosis or condition (optional)\"\n//                   rows=\"3\"\n//                 ></textarea>\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"submit-button\">\n//                   {editingId ? \"Update Patient\" : \"Add Patient\"}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <style jsx>{`\n//         .receptionist-dashboard {\n//           padding: 20px;\n//           max-width: 1200px;\n//           margin: 0 auto;\n//         }\n\n//         .dashboard-header {\n//           text-align: center;\n//           margin-bottom: 30px;\n//         }\n\n//         .dashboard-header h1 {\n//           font-size: 32px;\n//           color: #4338ca;\n//           margin-bottom: 8px;\n//         }\n\n//         .dashboard-header p {\n//           color: #6b7280;\n//           font-size: 16px;\n//         }\n\n//         .stats-container {\n//           display: grid;\n//           grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n//           gap: 20px;\n//           margin-bottom: 30px;\n//         }\n\n//         .stat-card {\n//           border-radius: 12px;\n//           padding: 20px;\n//           color: white;\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n//         }\n\n//         .stat-content h3 {\n//           font-size: 16px;\n//           margin: 0 0 8px 0;\n//           opacity: 0.9;\n//         }\n\n//         .stat-number {\n//           font-size: 28px;\n//           font-weight: bold;\n//           margin: 0;\n//         }\n\n//         .stat-icon {\n//           font-size: 32px;\n//           opacity: 0.8;\n//         }\n\n//         .action-container {\n//           display: flex;\n//           justify-content: center;\n//           margin-bottom: 30px;\n//         }\n\n//         .add-button {\n//           background: linear-gradient(135deg, #4338ca 0%, #6366f1 100%);\n//           color: white;\n//           border: none;\n//           padding: 12px 24px;\n//           border-radius: 8px;\n//           font-size: 16px;\n//           font-weight: bold;\n//           cursor: pointer;\n//           box-shadow: 0 4px 6px rgba(99, 102, 241, 0.5);\n//           transition: all 0.3s ease;\n//         }\n\n//         .add-button:hover {\n//           transform: translateY(-2px);\n//           box-shadow: 0 6px 10px rgba(99, 102, 241, 0.6);\n//         }\n\n//         .message {\n//           padding: 12px 20px;\n//           border-radius: 8px;\n//           margin-bottom: 20px;\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//         }\n\n//         .error-message {\n//           background-color: #fee2e2;\n//           border: 1px solid #fecaca;\n//           color: #b91c1c;\n//         }\n\n//         .success-message {\n//           background-color: #dcfce7;\n//           border: 1px solid #bbf7d0;\n//           color: #15803d;\n//         }\n\n//         .message p {\n//           margin: 0;\n//         }\n\n//         .message button {\n//           background: none;\n//           border: none;\n//           font-size: 20px;\n//           cursor: pointer;\n//           color: inherit;\n//         }\n\n//         .patients-section {\n//           margin-top: 20px;\n//         }\n\n//         .patients-section h2 {\n//           font-size: 24px;\n//           color: #1f2937;\n//           margin-bottom: 20px;\n//         }\n\n//         .loading-container {\n//           text-align: center;\n//           padding: 40px;\n//         }\n\n//         .loading-spinner {\n//           width: 40px;\n//           height: 40px;\n//           border: 4px solid #e5e7eb;\n//           border-top: 4px solid #4338ca;\n//           border-radius: 50%;\n//           margin: 0 auto 16px;\n//           animation: spin 1s linear infinite;\n//         }\n\n//         @keyframes spin {\n//           0% { transform: rotate(0deg); }\n//           100% { transform: rotate(360deg); }\n//         }\n\n//         .empty-state {\n//           text-align: center;\n//           padding: 60px 20px;\n//           background-color: #f9fafb;\n//           border-radius: 12px;\n//           border: 2px dashed #e5e7eb;\n//         }\n\n//         .empty-icon {\n//           font-size: 48px;\n//           margin-bottom: 16px;\n//           color: #9ca3af;\n//         }\n\n//         .empty-state h3 {\n//           font-size: 20px;\n//           color: #4b5563;\n//           margin-bottom: 8px;\n//         }\n\n//         .empty-state p {\n//           color: #6b7280;\n//         }\n\n//         .patients-grid {\n//           display: grid;\n//           grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n//           gap: 20px;\n//         }\n\n//         .patient-card {\n//           background-color: white;\n//           border-radius: 12px;\n//           padding: 20px;\n//           box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n//           border: 1px solid #e5e7eb;\n//           transition: all 0.3s ease;\n//         }\n\n//         .patient-card:hover {\n//           transform: translateY(-4px);\n//           box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);\n//           border-color: #c7d2fe;\n//         }\n\n//         .patient-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: flex-start;\n//           margin-bottom: 15px;\n//           border-bottom: 1px solid #f3f4f6;\n//           padding-bottom: 10px;\n//         }\n\n//         .patient-header h3 {\n//           font-size: 18px;\n//           margin: 0;\n//           color: #1f2937;\n//         }\n\n//         .patient-id {\n//           background-color: #e0e7ff;\n//           color: #4338ca;\n//           padding: 4px 8px;\n//           border-radius: 20px;\n//           font-size: 12px;\n//           font-weight: bold;\n//         }\n\n//         .patient-details {\n//           margin-bottom: 15px;\n//         }\n\n//         .patient-details p {\n//           margin: 8px 0;\n//           color: #4b5563;\n//           display: flex;\n//           align-items: center;\n//           gap: 8px;\n//         }\n\n//         .patient-details span {\n//           font-size: 16px;\n//         }\n\n//         .patient-actions {\n//           display: flex;\n//           gap: 10px;\n//         }\n\n//         .edit-button, .delete-button {\n//           flex: 1;\n//           padding: 8px 0;\n//           border: none;\n//           border-radius: 6px;\n//           font-weight: bold;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//         }\n\n//         .edit-button {\n//           background-color: #dbeafe;\n//           color: #2563eb;\n//         }\n\n//         .edit-button:hover {\n//           background-color: #bfdbfe;\n//         }\n\n//         .delete-button {\n//           background-color: #fee2e2;\n//           color: #dc2626;\n//         }\n\n//         .delete-button:hover {\n//           background-color: #fecaca;\n//         }\n\n//         .modal-overlay {\n//           position: fixed;\n//           top: 0;\n//           left: 0;\n//           right: 0;\n//           bottom: 0;\n//           background-color: rgba(0, 0, 0, 0.5);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           z-index: 1000;\n//           backdrop-filter: blur(4px);\n//         }\n\n//         .modal-content {\n//           background-color: white;\n//           border-radius: 12px;\n//           padding: 30px;\n//           width: 90%;\n//           max-width: 500px;\n//           max-height: 90vh;\n//           overflow-y: auto;\n//           box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n//         }\n\n//         .modal-content h2 {\n//           text-align: center;\n//           margin-top: 0;\n//           margin-bottom: 20px;\n//           color: #4338ca;\n//         }\n\n//         .form-group {\n//           margin-bottom: 20px;\n//         }\n\n//         .form-row {\n//           display: grid;\n//           grid-template-columns: 1fr 1fr;\n//           gap: 15px;\n//         }\n\n//         .form-group label {\n//           display: block;\n//           margin-bottom: 8px;\n//           font-weight: bold;\n//           color: #4b5563;\n//         }\n\n//         .form-group input, .form-group select, .form-group textarea {\n//           width: 100%;\n//           padding: 10px 12px;\n//           border: 2px solid #e5e7eb;\n//           border-radius: 6px;\n//           font-size: 16px;\n//           transition: all 0.3s ease;\n//         }\n\n//         .form-group input:focus, .form-group select:focus, .form-group textarea:focus {\n//           outline: none;\n//           border-color: #a5b4fc;\n//           box-shadow: 0 0 0 3px rgba(165, 180, 252, 0.2);\n//         }\n\n//         .form-actions {\n//           display: flex;\n//           gap: 15px;\n//           margin-top: 30px;\n//         }\n\n//         .cancel-button, .submit-button {\n//           flex: 1;\n//           padding: 12px 0;\n//           border-radius: 6px;\n//           font-weight: bold;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//         }\n\n//         .cancel-button {\n//           background-color: #f3f4f6;\n//           border: 1px solid #d1d5db;\n//           color: #4b5563;\n//         }\n\n//         .cancel-button:hover {\n//           background-color: #e5e7eb;\n//         }\n\n//         .submit-button {\n//           background-color: #4338ca;\n//           border: none;\n//           color: white;\n//         }\n\n//         .submit-button:hover {\n//           background-color: #4f46e5;\n//         }\n//       `}</style>\n//     </div>\n//   )\n// }\n\n// export default ReceptionistDashboard\n\n\"use client\";\n\nvar _jsxFileName = \"/Users/sathwik/hospital-portal/frontend/src/pages/ReceptionistDashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReceptionistDashboard = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    age: \"\",\n    gender: \"\",\n    diagnosis: \"\",\n    phone_number: \"\",\n    relationship: \"self\"\n  });\n  const [editingId, setEditingId] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n\n  // Fetch patients on component mount\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const fetchPatients = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"http://localhost:8080/api/patients\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPatients(data || []);\n        setError(\"\");\n      } else {\n        setError(\"Failed to fetch patients\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching patients:\", err);\n      setError(\"Network error while fetching patients\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const patientData = {\n        name: formData.name,\n        age: Number.parseInt(formData.age),\n        gender: formData.gender,\n        diagnosis: formData.diagnosis,\n        phone_number: formData.phone_number,\n        relationship: formData.relationship\n      };\n      let url = \"http://localhost:8080/api/patients\";\n      let method = \"POST\";\n      if (editingId) {\n        url = `http://localhost:8080/api/patients/${editingId}`;\n        method = \"PUT\";\n      }\n      const response = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(patientData)\n      });\n      if (response.ok) {\n        setSuccess(editingId ? \"Patient updated successfully!\" : \"Patient added successfully!\");\n        resetForm();\n        fetchPatients();\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || \"Failed to save patient\");\n      }\n    } catch (err) {\n      console.error(\"Error saving patient:\", err);\n      setError(\"Network error while saving patient\");\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this patient?\")) return;\n    try {\n      const response = await fetch(`http://localhost:8080/api/patients/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        setSuccess(\"Patient deleted successfully!\");\n        fetchPatients();\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || \"Failed to delete patient\");\n      }\n    } catch (err) {\n      console.error(\"Error deleting patient:\", err);\n      setError(\"Network error while deleting patient\");\n    }\n  };\n  const handleEdit = patient => {\n    setFormData({\n      name: patient.name || \"\",\n      age: patient.age ? String(patient.age) : \"\",\n      gender: patient.gender || \"\",\n      diagnosis: patient.diagnosis || \"\",\n      phone_number: patient.phone_number || \"\",\n      relationship: patient.relationship || \"self\"\n    });\n    setEditingId(patient.id);\n    setShowForm(true);\n  };\n  const resetForm = () => {\n    setFormData({\n      name: \"\",\n      age: \"\",\n      gender: \"\",\n      diagnosis: \"\",\n      phone_number: \"\",\n      relationship: \"self\"\n    });\n    setEditingId(null);\n    setShowForm(false);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    window.location.href = \"/login\";\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"receptionist-dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"\\uD83D\\uDC69\\u200D\\uD83D\\uDCBC Receptionist Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2004,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Manage patient registrations and information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2005,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2003,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logout-button\",\n            onClick: handleLogout,\n            children: \"\\uD83D\\uDEAA Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2007,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2002,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2001,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          style: {\n            backgroundColor: \"#4ade80\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Total Patients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2017,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-number\",\n              children: patients.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2018,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2016,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-icon\",\n            children: \"\\uD83D\\uDC65\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2020,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2015,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          style: {\n            backgroundColor: \"#60a5fa\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Active Cases\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2025,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-number\",\n              children: patients.filter(p => p.diagnosis && p.diagnosis !== \"None specified\").length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2026,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2024,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-icon\",\n            children: \"\\uD83C\\uDFE5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2030,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2023,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          style: {\n            backgroundColor: \"#c084fc\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Family Members\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2035,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-number\",\n              children: patients.filter(p => p.relationship && p.relationship !== \"self\").length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2036,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2034,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-icon\",\n            children: \"\\uD83D\\uDC68\\u200D\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D\\uD83D\\uDC66\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2040,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2033,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          style: {\n            backgroundColor: \"#fb923c\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Today's Registrations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2045,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"stat-number\",\n              children: patients.filter(p => p.created_at && new Date(p.created_at).toDateString() === new Date().toDateString()).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2046,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2044,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-icon\",\n            children: \"\\uD83D\\uDCC5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2054,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2043,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2014,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: () => setShowForm(true),\n          children: \"\\u2795 Add New Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2060,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2059,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u274C \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2068,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(\"\"),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2069,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2067,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message success-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2705 \", success]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2075,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSuccess(\"\"),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2076,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2074,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patients-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDCCB Patient Records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2082,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2086,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading patients...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2087,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2085,\n          columnNumber: 13\n        }, this) : patients.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-icon\",\n            children: \"\\uD83D\\uDC65\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2091,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No Patients Yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2092,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start by adding your first patient to the system.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2093,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2090,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patients-grid\",\n          children: patients.map(patient => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"patient-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"patient-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: patient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"patient-id\",\n                children: [\"ID: \", patient.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2101,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2099,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"patient-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\uD83D\\uDC64\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2106,\n                  columnNumber: 23\n                }, this), \" Age: \", patient.age, \" years\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2105,\n                columnNumber: 21\n              }, this), patient.gender && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\u26A7\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2110,\n                  columnNumber: 25\n                }, this), \" Gender: \", patient.gender]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2109,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\uD83C\\uDFE5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2114,\n                  columnNumber: 23\n                }, this), \" Diagnosis: \", patient.diagnosis || \"None specified\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2113,\n                columnNumber: 21\n              }, this), patient.phone_number && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\uD83D\\uDCDE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2118,\n                  columnNumber: 25\n                }, this), \" Phone: \", patient.phone_number]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2117,\n                columnNumber: 23\n              }, this), patient.relationship && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\uD83D\\uDC65\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2123,\n                  columnNumber: 25\n                }, this), \" Relationship: \", patient.relationship]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2122,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"patient-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-button\",\n                onClick: () => handleEdit(patient),\n                children: \"\\u270F\\uFE0F Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2129,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => handleDelete(patient.id),\n                children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2132,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2128,\n              columnNumber: 19\n            }, this)]\n          }, patient.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2098,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2096,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2081,\n        columnNumber: 9\n      }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        onClick: () => resetForm(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: editingId ? \"Edit Patient\" : \"Add New Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\uD83D\\uDC64 Full Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: formData.name,\n                onChange: e => setFormData({\n                  ...formData,\n                  name: e.target.value\n                }),\n                placeholder: \"Enter patient name\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2151,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"\\uD83C\\uDF82 Age\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2162,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: formData.age,\n                  onChange: e => setFormData({\n                    ...formData,\n                    age: e.target.value\n                  }),\n                  placeholder: \"Enter age\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2163,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"\\u26A7\\uFE0F Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2173,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: formData.gender,\n                  onChange: e => setFormData({\n                    ...formData,\n                    gender: e.target.value\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select gender\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2178,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Male\",\n                    children: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2179,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Female\",\n                    children: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2180,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Other\",\n                    children: \"Other\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2181,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2174,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\uD83D\\uDCDE Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: formData.phone_number,\n                onChange: e => setFormData({\n                  ...formData,\n                  phone_number: e.target.value\n                }),\n                placeholder: \"Enter phone number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2188,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\uD83D\\uDC65 Relationship\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: formData.relationship,\n                onChange: e => setFormData({\n                  ...formData,\n                  relationship: e.target.value\n                }),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"self\",\n                  children: \"Self (Patient)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2203,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"son\",\n                  children: \"Son\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2204,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"daughter\",\n                  children: \"Daughter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2205,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"spouse\",\n                  children: \"Spouse\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2206,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"mother\",\n                  children: \"Mother\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2207,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"father\",\n                  children: \"Father\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2208,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"brother\",\n                  children: \"Brother\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2209,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"sister\",\n                  children: \"Sister\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2210,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"other\",\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2211,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2198,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"\\uD83C\\uDFE5 Diagnosis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: formData.diagnosis,\n                onChange: e => setFormData({\n                  ...formData,\n                  diagnosis: e.target.value\n                }),\n                placeholder: \"Enter diagnosis or condition (optional)\",\n                rows: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"cancel-button\",\n                onClick: resetForm,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"submit-button\",\n                children: editingId ? \"Update Patient\" : \"Add Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n        jsx: true,\n        children: `\n          .receptionist-dashboard {\n            padding: 0;\n            max-width: 100%;\n          }\n          \n          .dashboard-header {\n            text-align: center;\n            margin-bottom: 30px;\n          }\n          \n          .dashboard-header h1 {\n            font-size: 32px;\n            color: #4338ca;\n            margin-bottom: 8px;\n          }\n          \n          .dashboard-header p {\n            color: #6b7280;\n            font-size: 16px;\n          }\n\n          .header-content {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            max-width: 1200px;\n            margin: 0 auto;\n          }\n\n          .logout-button {\n            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n            color: white;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 8px;\n            font-size: 14px;\n            font-weight: bold;\n            cursor: pointer;\n            box-shadow: 0 2px 4px rgba(239, 68, 68, 0.3);\n            transition: all 0.2s ease;\n          }\n\n          .logout-button:hover {\n            transform: translateY(-1px);\n            box-shadow: 0 4px 8px rgba(239, 68, 68, 0.4);\n          }\n          \n          .stats-container {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 20px;\n            margin-bottom: 30px;\n          }\n          \n          .stat-card {\n            border-radius: 12px;\n            padding: 20px;\n            color: white;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n          }\n          \n          .stat-content h3 {\n            font-size: 16px;\n            margin: 0 0 8px 0;\n            opacity: 0.9;\n          }\n          \n          .stat-number {\n            font-size: 28px;\n            font-weight: bold;\n            margin: 0;\n          }\n          \n          .stat-icon {\n            font-size: 32px;\n            opacity: 0.8;\n          }\n          \n          .action-container {\n            display: flex;\n            justify-content: center;\n            margin-bottom: 30px;\n          }\n          \n          .add-button {\n            background: linear-gradient(135deg, #4338ca 0%, #6366f1 100%);\n            color: white;\n            border: none;\n            padding: 12px 24px;\n            border-radius: 8px;\n            font-size: 16px;\n            font-weight: bold;\n            cursor: pointer;\n            box-shadow: 0 4px 6px rgba(99, 102, 241, 0.5);\n            transition: all 0.3s ease;\n          }\n          \n          .add-button:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 6px 10px rgba(99, 102, 241, 0.6);\n          }\n          \n          .message {\n            padding: 12px 20px;\n            border-radius: 8px;\n            margin-bottom: 20px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n          }\n          \n          .error-message {\n            background-color: #fee2e2;\n            border: 1px solid #fecaca;\n            color: #b91c1c;\n          }\n          \n          .success-message {\n            background-color: #dcfce7;\n            border: 1px solid #bbf7d0;\n            color: #15803d;\n          }\n          \n          .message p {\n            margin: 0;\n          }\n          \n          .message button {\n            background: none;\n            border: none;\n            font-size: 20px;\n            cursor: pointer;\n            color: inherit;\n          }\n          \n          .patients-section {\n            margin-top: 20px;\n          }\n          \n          .patients-section h2 {\n            font-size: 24px;\n            color: #1f2937;\n            margin-bottom: 20px;\n          }\n          \n          .loading-container {\n            text-align: center;\n            padding: 40px;\n          }\n          \n          .loading-spinner {\n            width: 40px;\n            height: 40px;\n            border: 4px solid #e5e7eb;\n            border-top: 4px solid #4338ca;\n            border-radius: 50%;\n            margin: 0 auto 16px;\n            animation: spin 1s linear infinite;\n          }\n          \n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n          \n          .empty-state {\n            text-align: center;\n            padding: 60px 20px;\n            background-color: #f9fafb;\n            border-radius: 12px;\n            border: 2px dashed #e5e7eb;\n          }\n          \n          .empty-icon {\n            font-size: 48px;\n            margin-bottom: 16px;\n            color: #9ca3af;\n          }\n          \n          .empty-state h3 {\n            font-size: 20px;\n            color: #4b5563;\n            margin-bottom: 8px;\n          }\n          \n          .empty-state p {\n            color: #6b7280;\n          }\n          \n          .patients-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n            gap: 20px;\n          }\n          \n          .patient-card {\n            background-color: white;\n            border-radius: 12px;\n            padding: 20px;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            border: 1px solid #e5e7eb;\n            transition: all 0.3s ease;\n          }\n          \n          .patient-card:hover {\n            transform: translateY(-4px);\n            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);\n            border-color: #c7d2fe;\n          }\n          \n          .patient-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: flex-start;\n            margin-bottom: 15px;\n            border-bottom: 1px solid #f3f4f6;\n            padding-bottom: 10px;\n          }\n          \n          .patient-header h3 {\n            font-size: 18px;\n            margin: 0;\n            color: #1f2937;\n          }\n          \n          .patient-id {\n            background-color: #e0e7ff;\n            color: #4338ca;\n            padding: 4px 8px;\n            border-radius: 20px;\n            font-size: 12px;\n            font-weight: bold;\n          }\n          \n          .patient-details {\n            margin-bottom: 15px;\n          }\n          \n          .patient-details p {\n            margin: 8px 0;\n            color: #4b5563;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n          }\n          \n          .patient-details span {\n            font-size: 16px;\n          }\n          \n          .patient-actions {\n            display: flex;\n            gap: 10px;\n          }\n          \n          .edit-button, .delete-button {\n            flex: 1;\n            padding: 8px 0;\n            border: none;\n            border-radius: 6px;\n            font-weight: bold;\n            cursor: pointer;\n            transition: all 0.2s ease;\n          }\n          \n          .edit-button {\n            background-color: #dbeafe;\n            color: #2563eb;\n          }\n          \n          .edit-button:hover {\n            background-color: #bfdbfe;\n          }\n          \n          .delete-button {\n            background-color: #fee2e2;\n            color: #dc2626;\n          }\n          \n          .delete-button:hover {\n            background-color: #fecaca;\n          }\n          \n          .modal-overlay {\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: rgba(0, 0, 0, 0.5);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            z-index: 1000;\n            backdrop-filter: blur(4px);\n          }\n          \n          .modal-content {\n            background-color: white;\n            border-radius: 12px;\n            padding: 30px;\n            width: 90%;\n            max-width: 500px;\n            max-height: 90vh;\n            overflow-y: auto;\n            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n          }\n          \n          .modal-content h2 {\n            text-align: center;\n            margin-top: 0;\n            margin-bottom: 20px;\n            color: #4338ca;\n          }\n          \n          .form-group {\n            margin-bottom: 20px;\n          }\n          \n          .form-row {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 15px;\n          }\n          \n          .form-group label {\n            display: block;\n            margin-bottom: 8px;\n            font-weight: bold;\n            color: #4b5563;\n          }\n          \n          .form-group input, .form-group select, .form-group textarea {\n            width: 100%;\n            padding: 10px 12px;\n            border: 2px solid #e5e7eb;\n            border-radius: 6px;\n            font-size: 16px;\n            transition: all 0.3s ease;\n            box-sizing: border-box;\n          }\n          \n          .form-group input:focus, .form-group select:focus, .form-group textarea:focus {\n            outline: none;\n            border-color: #a5b4fc;\n            box-shadow: 0 0 0 3px rgba(165, 180, 252, 0.2);\n          }\n          \n          .form-actions {\n            display: flex;\n            gap: 15px;\n            margin-top: 30px;\n          }\n          \n          .cancel-button, .submit-button {\n            flex: 1;\n            padding: 12px 0;\n            border-radius: 6px;\n            font-weight: bold;\n            cursor: pointer;\n            transition: all 0.2s ease;\n          }\n          \n          .cancel-button {\n            background-color: #f3f4f6;\n            border: 1px solid #d1d5db;\n            color: #4b5563;\n          }\n          \n          .cancel-button:hover {\n            background-color: #e5e7eb;\n          }\n          \n          .submit-button {\n            background-color: #4338ca;\n            border: none;\n            color: white;\n          }\n          \n          .submit-button:hover {\n            background-color: #4f46e5;\n          }\n        `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2000,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1999,\n    columnNumber: 5\n  }, this);\n};\n_s(ReceptionistDashboard, \"2sPQA1mF/de0E/NIwT2R2ACbmW4=\");\n_c = ReceptionistDashboard;\nexport default ReceptionistDashboard;\nvar _c;\n$RefreshReg$(_c, \"ReceptionistDashboard\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","Layout","jsxDEV","_jsxDEV","ReceptionistDashboard","patients","setPatients","loading","setLoading","showForm","setShowForm","formData","setFormData","name","age","gender","diagnosis","phone_number","relationship","editingId","setEditingId","error","setError","success","setSuccess","token","localStorage","getItem","fetchPatients","response","fetch","headers","Authorization","ok","data","json","err","console","handleSubmit","e","preventDefault","patientData","Number","parseInt","url","method","body","JSON","stringify","resetForm","errorData","handleDelete","id","window","confirm","handleEdit","patient","String","handleLogout","removeItem","location","href","children","className","fileName","lineNumber","columnNumber","onClick","style","backgroundColor","length","filter","p","created_at","Date","toDateString","map","stopPropagation","onSubmit","type","value","onChange","target","placeholder","required","rows","jsx","_c","$RefreshReg$"],"sources":["/Users/sathwik/hospital-portal/frontend/src/pages/ReceptionistDashboard.jsx"],"sourcesContent":["// import { useEffect, useState } from 'react';\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [name, setName] = useState('');\n//   const [age, setAge] = useState('');\n//   const [disease, setDisease] = useState('');\n//   const [editingId, setEditingId] = useState(null);\n//   const [toast, setToast] = useState(null);\n\n//   // Mock data for testing\n//   useEffect(() => {\n//     const mockPatients = [\n//       { id: 1, name: 'John Doe', age: 35, disease: 'Hypertension' },\n//       { id: 2, name: 'Jane Smith', age: 28, disease: 'Diabetes' },\n//       { id: 3, name: 'Bob Johnson', age: 45, disease: 'Asthma' },\n//     ];\n//     setPatients(mockPatients);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n    \n//     const newPatient = {\n//       id: editingId || Date.now(),\n//       name,\n//       age: parseInt(age),\n//       disease\n//     };\n\n//     if (editingId) {\n//       setPatients(patients.map(p => p.id === editingId ? newPatient : p));\n//       setToast({ message: 'Patient updated successfully!', type: 'success' });\n//     } else {\n//       setPatients([...patients, newPatient]);\n//       setToast({ message: 'Patient added successfully!', type: 'success' });\n//     }\n    \n//     resetForm();\n//   };\n\n//   const handleDelete = (id) => {\n//     if (window.confirm('Are you sure you want to delete this patient?')) {\n//       setPatients(patients.filter(p => p.id !== id));\n//       setToast({ message: 'Patient deleted successfully!', type: 'success' });\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setAge('');\n//     setDisease('');\n//     setShowForm(false);\n//     setEditingId(null);\n//   };\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name);\n//     setAge(String(patient.age));\n//     setDisease(patient.disease);\n//     setEditingId(patient.id);\n//     setShowForm(true);\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">Receptionist Dashboard</h1>\n//         <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//       </div>\n\n//       <div className=\"stats-grid\">\n//         <div className=\"stat-card blue\">\n//           <div className=\"stat-info\">\n//             <h3>Total Patients</h3>\n//             <p>{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card green\">\n//           <div className=\"stat-info\">\n//             <h3>Active Cases</h3>\n//             <p>{patients.filter(p => p.disease).length}</p>\n//           </div>\n//           <div className=\"stat-icon\">📋</div>\n//         </div>\n\n//         <div className=\"stat-card purple\">\n//           <div className=\"stat-info\">\n//             <h3>Today</h3>\n//             <p>{new Date().getDate()}</p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       <div style={{ textAlign: 'center', marginBottom: '32px' }}>\n//         <button\n//           className=\"btn-add\"\n//           onClick={() => setShowForm(!showForm)}\n//         >\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {showForm && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h2 className=\"modal-title\">\n//                 {editingId ? 'Edit Patient' : 'Add New Patient'}\n//               </h2>\n//               <p className=\"modal-subtitle\">\n//                 {editingId ? 'Update patient information' : 'Enter patient details below'}\n//               </p>\n//             </div>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter full name\"\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Age</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter age\"\n//                   value={age}\n//                   onChange={(e) => setAge(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Disease/Condition</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter disease or condition (optional)\"\n//                   value={disease}\n//                   onChange={(e) => setDisease(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"btn btn-submit\">\n//                   {editingId ? 'Update Patient' : 'Add Patient'}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <div className=\"patient-grid\">\n//         {patients.map((patient) => (\n//           <div key={patient.id} className=\"patient-card\">\n//             <div className=\"patient-header\">\n//               <div>\n//                 <h3 className=\"patient-name\">{patient.name}</h3>\n//                 <span className=\"patient-id\">ID: {patient.id}</span>\n//               </div>\n//             </div>\n            \n//             <div className=\"patient-details\">\n//               <div className=\"patient-detail\">\n//                 <span>👤</span>\n//                 <span>Age: {patient.age} years</span>\n//               </div>\n//               <div className=\"patient-detail\">\n//                 <span>🏥</span>\n//                 <span>Condition: {patient.disease || 'None specified'}</span>\n//               </div>\n//             </div>\n            \n//             <div className=\"patient-actions\">\n//               <button\n//                 onClick={() => handleEdit(patient)}\n//                 className=\"btn btn-edit\"\n//               >\n//                 ✏️ Edit\n//               </button>\n//               <button\n//                 onClick={() => handleDelete(patient.id)}\n//                 className=\"btn btn-delete\"\n//               >\n//                 🗑️ Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {patients.length === 0 && (\n//         <div className=\"empty-state\">\n//           <div className=\"empty-icon\">👥</div>\n//           <h3 className=\"empty-title\">No Patients Yet</h3>\n//           <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//         </div>\n//       )}\n\n//       {toast && (\n//         <div className={`toast ${toast.type === 'success' ? 'toast-success' : 'toast-error'}`}>\n//           <span className=\"toast-icon\">{toast.type === 'success' ? '✅' : '❌'}</span>\n//           <span className=\"toast-message\">{toast.message}</span>\n//           <button className=\"toast-close\" onClick={() => setToast(null)}>\n//             ×\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n///////////////\n\n\n\n// import { useEffect, useState } from 'react';\n// import Toast from '../components/Toast';\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([]);\n//   const [showForm, setShowForm] = useState(false);\n//   const [name, setName] = useState('');\n//   const [age, setAge] = useState('');\n//   const [gender, setGender] = useState('');\n//   const [diagnosis, setDiagnosis] = useState('');\n//   const [phoneNumber, setPhoneNumber] = useState('');\n//   const [editingId, setEditingId] = useState(null);\n//   const [toast, setToast] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//   const token = localStorage.getItem('token');\n\n//   useEffect(() => {\n//     fetchPatients();\n//   }, []);\n\n//   const fetchPatients = async () => {\n//     try {\n//       const res = await fetch('http://localhost:8080/api/patients', {\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n      \n//       if (res.ok) {\n//         const data = await res.json();\n//         setPatients(data);\n//       } else {\n//         setToast({ message: 'Failed to fetch patients', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error fetching patients:', err);\n//       setToast({ message: 'Network error while fetching patients', type: 'error' });\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n    \n//     const patientData = {\n//       name,\n//       age: parseInt(age),\n//       gender,\n//       diagnosis,\n//       phone_number: phoneNumber\n//     };\n\n//     try {\n//       let url = 'http://localhost:8080/api/patients';\n//       let method = 'POST';\n      \n//       if (editingId) {\n//         url = `http://localhost:8080/api/patients/${editingId}`;\n//         method = 'PUT';\n//       }\n\n//       const res = await fetch(url, {\n//         method,\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${token}`\n//         },\n//         body: JSON.stringify(patientData)\n//       });\n\n//       if (res.ok) {\n//         const data = await res.json();\n        \n//         if (editingId) {\n//           setPatients(patients.map(p => p.id === editingId ? data : p));\n//           setToast({ message: 'Patient updated successfully!', type: 'success' });\n//         } else {\n//           setPatients([...patients, data]);\n//           setToast({ message: 'Patient added successfully!', type: 'success' });\n//         }\n        \n//         resetForm();\n//       } else {\n//         const errorData = await res.json();\n//         setToast({ message: errorData.error || 'Failed to save patient', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error saving patient:', err);\n//       setToast({ message: 'Network error while saving patient', type: 'error' });\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm('Are you sure you want to delete this patient?')) return;\n\n//     try {\n//       const res = await fetch(`http://localhost:8080/api/patients/${id}`, {\n//         method: 'DELETE',\n//         headers: {\n//           'Authorization': `Bearer ${token}`\n//         }\n//       });\n\n//       if (res.ok) {\n//         setPatients(patients.filter(p => p.id !== id));\n//         setToast({ message: 'Patient deleted successfully!', type: 'success' });\n//       } else {\n//         const errorData = await res.json();\n//         setToast({ message: errorData.error || 'Failed to delete patient', type: 'error' });\n//       }\n//     } catch (err) {\n//       console.error('Error deleting patient:', err);\n//       setToast({ message: 'Network error while deleting patient', type: 'error' });\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setName('');\n//     setAge('');\n//     setGender('');\n//     setDiagnosis('');\n//     setPhoneNumber('');\n//     setShowForm(false);\n//     setEditingId(null);\n//   };\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name);\n//     setAge(String(patient.age));\n//     setGender(patient.gender || '');\n//     setDiagnosis(patient.diagnosis || '');\n//     setPhoneNumber(patient.phone_number || '');\n//     setEditingId(patient.id);\n//     setShowForm(true);\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"flex items-center justify-center h-64\">\n//         <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div>\n//       <div className=\"dashboard-header\">\n//         <h1 className=\"dashboard-title\">Receptionist Dashboard</h1>\n//         <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//       </div>\n\n//       <div className=\"stats-grid\">\n//         <div className=\"stat-card blue\">\n//           <div className=\"stat-info\">\n//             <h3>Total Patients</h3>\n//             <p>{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card green\">\n//           <div className=\"stat-info\">\n//             <h3>Active Cases</h3>\n//             <p>{patients.filter(p => p.diagnosis).length}</p>\n//           </div>\n//           <div className=\"stat-icon\">📋</div>\n//         </div>\n\n//         <div className=\"stat-card purple\">\n//           <div className=\"stat-info\">\n//             <h3>Today</h3>\n//             <p>{new Date().getDate()}</p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       <div style={{ textAlign: 'center', marginBottom: '32px' }}>\n//         <button\n//           className=\"btn-add\"\n//           onClick={() => setShowForm(!showForm)}\n//         >\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {showForm && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h2 className=\"modal-title\">\n//                 {editingId ? 'Edit Patient' : 'Add New Patient'}\n//               </h2>\n//               <p className=\"modal-subtitle\">\n//                 {editingId ? 'Update patient information' : 'Enter patient details below'}\n//               </p>\n//             </div>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter full name\"\n//                   value={name}\n//                   onChange={(e) => setName(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Age</label>\n//                 <input\n//                   type=\"number\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter age\"\n//                   value={age}\n//                   onChange={(e) => setAge(e.target.value)}\n//                   required\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Gender</label>\n//                 <select\n//                   className=\"form-select\"\n//                   value={gender}\n//                   onChange={(e) => setGender(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 >\n//                   <option value=\"\">Select gender</option>\n//                   <option value=\"Male\">Male</option>\n//                   <option value=\"Female\">Female</option>\n//                   <option value=\"Other\">Other</option>\n//                 </select>\n//               </div>\n//               // Add this to your patient registration form in ReceptionistDashboard.jsx\n// // In the form section, add this field after gender:\n\n//             <div className=\"form-group\">\n//               <label className=\"form-label\">Relationship to Phone Number Holder *</label>\n//               <select\n//                 name=\"relationship\"\n//                 className=\"form-input\"\n//                 value={newPatient.relationship || 'self'}\n//                 onChange={handleInputChange}\n//                 required\n//               >\n//                 <option value=\"self\">Self (I am the patient)</option>\n//                 <option value=\"son\">Son</option>\n//                 <option value=\"daughter\">Daughter</option>\n//                 <option value=\"mother\">Mother</option>\n//                 <option value=\"father\">Father</option>\n//                 <option value=\"spouse\">Spouse/Partner</option>\n//                 <option value=\"brother\">Brother</option>\n//                 <option value=\"sister\">Sister</option>\n//                 <option value=\"grandfather\">Grandfather</option>\n//                 <option value=\"grandmother\">Grandmother</option>\n//                 <option value=\"other\">Other Family Member</option>\n//               </select>\n//               <span className=\"helper-text\">\n//                 Who is the patient in relation to the person who owns this phone number?\n//               </span>\n//             </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Diagnosis/Condition</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter diagnosis or condition (optional)\"\n//                   value={diagnosis}\n//                   onChange={(e) => setDiagnosis(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label className=\"form-label\">Phone Number</label>\n//                 <input\n//                   type=\"text\"\n//                   className=\"form-input\"\n//                   placeholder=\"Enter phone number\"\n//                   value={phoneNumber}\n//                   onChange={(e) => setPhoneNumber(e.target.value)}\n//                   style={{ paddingLeft: '16px' }}\n//                 />\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"btn btn-submit\">\n//                   {editingId ? 'Update Patient' : 'Add Patient'}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <div className=\"patient-grid\">\n//         {patients.map((patient) => (\n//           <div key={patient.id} className=\"patient-card\">\n//             <div className=\"patient-header\">\n//               <div>\n//                 <h3 className=\"patient-name\">{patient.name}</h3>\n//                 <span className=\"patient-id\">ID: {patient.id}</span>\n//               </div>\n//             </div>\n            \n//             <div className=\"patient-details\">\n//               <div className=\"patient-detail\">\n//                 <span>👤</span>\n//                 <span>Age: {patient.age} years</span>\n//               </div>\n//               {patient.gender && (\n//                 <div className=\"patient-detail\">\n//                   <span>⚧️</span>\n//                   <span>Gender: {patient.gender}</span>\n//                 </div>\n//               )}\n//               <div className=\"patient-detail\">\n//                 <span>🏥</span>\n//                 <span>Diagnosis: {patient.diagnosis || 'None specified'}</span>\n//               </div>\n//               {patient.phone_number && (\n//                 <div className=\"patient-detail\">\n//                   <span>📞</span>\n//                   <span>Phone: {patient.phone_number}</span>\n//                 </div>\n//               )}\n//             </div>\n            \n//             <div className=\"patient-actions\">\n//               <button\n//                 onClick={() => handleEdit(patient)}\n//                 className=\"btn btn-edit\"\n//               >\n//                 ✏️ Edit\n//               </button>\n//               <button\n//                 onClick={() => handleDelete(patient.id)}\n//                 className=\"btn btn-delete\"\n//               >\n//                 🗑️ Delete\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {patients.length === 0 && (\n//         <div className=\"empty-state\">\n//           <div className=\"empty-icon\">👥</div>\n//           <h3 className=\"empty-title\">No Patients Yet</h3>\n//           <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//         </div>\n//       )}\n\n//       {toast && (\n//         <Toast \n//           message={toast.message} \n//           type={toast.type} \n//           onClose={() => setToast(null)} \n//         />\n//       )}\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n// \"use client\"\n\n// import { useEffect, useState } from \"react\"\n// import Layout from \"../components/Layout\"\n\n// // Simple Toast component since it's missing\n// const Toast = ({ message, type, onClose }) => {\n//   useEffect(() => {\n//     const timer = setTimeout(() => {\n//       onClose()\n//     }, 3000)\n//     return () => clearTimeout(timer)\n//   }, [onClose])\n\n//   return (\n//     <div className={`toast ${type === \"success\" ? \"toast-success\" : \"toast-error\"}`}>\n//       <span className=\"toast-icon\">{type === \"success\" ? \"✅\" : \"❌\"}</span>\n//       <span className=\"toast-message\">{message}</span>\n//       <button className=\"toast-close\" onClick={onClose}>\n//         ✕\n//       </button>\n//     </div>\n//   )\n// }\n\n// export default function ReceptionistDashboard() {\n//   const [patients, setPatients] = useState([])\n//   const [showForm, setShowForm] = useState(false)\n//   const [name, setName] = useState(\"\")\n//   const [age, setAge] = useState(\"\")\n//   const [gender, setGender] = useState(\"\")\n//   const [diagnosis, setDiagnosis] = useState(\"\")\n//   const [phoneNumber, setPhoneNumber] = useState(\"\")\n//   const [relationship, setRelationship] = useState(\"self\")\n//   const [editingId, setEditingId] = useState(null)\n//   const [toast, setToast] = useState(null)\n//   const [loading, setLoading] = useState(true)\n//   const token = localStorage.getItem(\"token\")\n\n//   useEffect(() => {\n//     fetchPatients()\n//   }, [])\n\n//   const fetchPatients = async () => {\n//     try {\n//       const res = await fetch(\"http://localhost:8080/api/patients\", {\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       })\n\n//       if (res.ok) {\n//         const data = await res.json()\n//         setPatients(data || [])\n//       } else {\n//         setToast({ message: \"Failed to fetch patients\", type: \"error\" })\n//       }\n//     } catch (err) {\n//       console.error(\"Error fetching patients:\", err)\n//       setToast({ message: \"Network error while fetching patients\", type: \"error\" })\n//     } finally {\n//       setLoading(false)\n//     }\n//   }\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault()\n\n//     const patientData = {\n//       name,\n//       age: Number.parseInt(age),\n//       gender,\n//       diagnosis,\n//       phone_number: phoneNumber,\n//       relationship,\n//     }\n\n//     try {\n//       let url = \"http://localhost:8080/api/patients\"\n//       let method = \"POST\"\n\n//       if (editingId) {\n//         url = `http://localhost:8080/api/patients/${editingId}`\n//         method = \"PUT\"\n//       }\n\n//       const res = await fetch(url, {\n//         method,\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${token}`,\n//         },\n//         body: JSON.stringify(patientData),\n//       })\n\n//       if (res.ok) {\n//         const data = await res.json()\n\n//         if (editingId) {\n//           const updatedPatient = data.patient || data\n//           setPatients(patients.map((p) => (p.id === editingId ? updatedPatient : p)))\n//           setToast({ message: \"Patient updated successfully!\", type: \"success\" })\n//         } else {\n//           setPatients([...patients, data])\n//           setToast({ message: \"Patient added successfully!\", type: \"success\" })\n//         }\n\n//         resetForm()\n//       } else {\n//         const errorData = await res.json()\n//         setToast({ message: errorData.error || \"Failed to save patient\", type: \"error\" })\n//       }\n//     } catch (err) {\n//       console.error(\"Error saving patient:\", err)\n//       setToast({ message: \"Network error while saving patient\", type: \"error\" })\n//     }\n//   }\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Are you sure you want to delete this patient?\")) return\n\n//     try {\n//       const res = await fetch(`http://localhost:8080/api/patients/${id}`, {\n//         method: \"DELETE\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       })\n\n//       if (res.ok) {\n//         setPatients(patients.filter((p) => p.id !== id))\n//         setToast({ message: \"Patient deleted successfully!\", type: \"success\" })\n//       } else {\n//         const errorData = await res.json()\n//         setToast({ message: errorData.error || \"Failed to delete patient\", type: \"error\" })\n//       }\n//     } catch (err) {\n//       console.error(\"Error deleting patient:\", err)\n//       setToast({ message: \"Network error while deleting patient\", type: \"error\" })\n//     }\n//   }\n\n//   const resetForm = () => {\n//     setName(\"\")\n//     setAge(\"\")\n//     setGender(\"\")\n//     setDiagnosis(\"\")\n//     setPhoneNumber(\"\")\n//     setRelationship(\"self\")\n//     setShowForm(false)\n//     setEditingId(null)\n//   }\n\n//   const handleEdit = (patient) => {\n//     setName(patient.name)\n//     setAge(String(patient.age))\n//     setGender(patient.gender || \"\")\n//     setDiagnosis(patient.diagnosis || \"\")\n//     setPhoneNumber(patient.phone_number || \"\")\n//     setRelationship(patient.relationship || \"self\")\n//     setEditingId(patient.id)\n//     setShowForm(true)\n//   }\n\n//   if (loading) {\n//     return (\n//       <Layout>\n//         <div className=\"content\">\n//           <div className=\"content-card\">\n//             <div style={{ textAlign: \"center\", padding: \"60px 20px\" }}>\n//               <div\n//                 style={{\n//                   width: \"48px\",\n//                   height: \"48px\",\n//                   border: \"4px solid #e5e7eb\",\n//                   borderTop: \"4px solid #667eea\",\n//                   borderRadius: \"50%\",\n//                   animation: \"spin 1s linear infinite\",\n//                   margin: \"0 auto 16px\",\n//                 }}\n//               ></div>\n//               <p style={{ color: \"#6b7280\", fontSize: \"16px\" }}>Loading patients...</p>\n//             </div>\n//           </div>\n//         </div>\n//       </Layout>\n//     )\n//   }\n\n//   return (\n//     <Layout>\n//       <div className=\"content\">\n//         <div className=\"content-card\">\n//           <div className=\"dashboard-header\">\n//             <h1 className=\"dashboard-title\">👩‍💼 Receptionist Dashboard</h1>\n//             <p className=\"dashboard-subtitle\">Manage patient registrations and information</p>\n//           </div>\n\n//           <div className=\"stats-grid\">\n//             <div className=\"stat-card blue\">\n//               <div className=\"stat-info\">\n//                 <h3>Total Patients</h3>\n//                 <p>{patients.length}</p>\n//               </div>\n//               <div className=\"stat-icon\">👥</div>\n//             </div>\n\n//             <div className=\"stat-card green\">\n//               <div className=\"stat-info\">\n//                 <h3>Active Cases</h3>\n//                 <p>{patients.filter((p) => p.diagnosis && p.diagnosis !== \"N/A\").length}</p>\n//               </div>\n//               <div className=\"stat-icon\">📋</div>\n//             </div>\n\n//             <div className=\"stat-card purple\">\n//               <div className=\"stat-info\">\n//                 <h3>New Today</h3>\n//                 <p>\n//                   {\n//                     patients.filter(\n//                       (p) => p.created_at && new Date(p.created_at).toDateString() === new Date().toDateString(),\n//                     ).length\n//                   }\n//                 </p>\n//               </div>\n//               <div className=\"stat-icon\">📅</div>\n//             </div>\n\n//             <div className=\"stat-card orange\">\n//               <div className=\"stat-info\">\n//                 <h3>Family Members</h3>\n//                 <p>{patients.filter((p) => p.relationship !== \"self\").length}</p>\n//               </div>\n//               <div className=\"stat-icon\">👨‍👩‍👧‍👦</div>\n//             </div>\n//           </div>\n\n//           <div style={{ textAlign: \"center\", marginBottom: \"32px\" }}>\n//             <button className=\"btn-add\" onClick={() => setShowForm(!showForm)}>\n//               ➕ Add New Patient\n//             </button>\n//           </div>\n\n//           {showForm && (\n//             <div className=\"modal-overlay\">\n//               <div className=\"modal-content\">\n//                 <div className=\"modal-header\">\n//                   <h2 className=\"modal-title\">{editingId ? \"Edit Patient\" : \"Add New Patient\"}</h2>\n//                   <p className=\"modal-subtitle\">\n//                     {editingId ? \"Update patient information\" : \"Enter patient details below\"}\n//                   </p>\n//                 </div>\n\n//                 <form onSubmit={handleSubmit}>\n//                   <div className=\"form-group\">\n//                     <label className=\"form-label\">👤 Full Name</label>\n//                     <input\n//                       type=\"text\"\n//                       className=\"form-input\"\n//                       placeholder=\"Enter full name\"\n//                       value={name}\n//                       onChange={(e) => setName(e.target.value)}\n//                       required\n//                     />\n//                   </div>\n\n//                   <div className=\"form-group\">\n//                     <label className=\"form-label\">🎂 Age</label>\n//                     <input\n//                       type=\"number\"\n//                       className=\"form-input\"\n//                       placeholder=\"Enter age\"\n//                       value={age}\n//                       onChange={(e) => setAge(e.target.value)}\n//                       required\n//                     />\n//                   </div>\n\n//                   <div className=\"form-group\">\n//                     <label className=\"form-label\">⚧️ Gender</label>\n//                     <select\n//                       className=\"form-input\"\n//                       value={gender}\n//                       onChange={(e) => setGender(e.target.value)}\n//                       style={{ paddingLeft: \"16px\" }}\n//                     >\n//                       <option value=\"\">Select gender</option>\n//                       <option value=\"Male\">Male</option>\n//                       <option value=\"Female\">Female</option>\n//                       <option value=\"Other\">Other</option>\n//                     </select>\n//                   </div>\n\n//                   <div className=\"form-group\">\n//                     <label className=\"form-label\">👥 Relationship to Phone Number Holder</label>\n//                     <select\n//                       className=\"form-input\"\n//                       value={relationship}\n//                       onChange={(e) => setRelationship(e.target.value)}\n//                       required\n//                     >\n//                       <option value=\"self\">Self (I am the patient)</option>\n//                       <option value=\"son\">Son</option>\n//                       <option value=\"daughter\">Daughter</option>\n//                       <option value=\"mother\">Mother</option>\n//                       <option value=\"father\">Father</option>\n//                       <option value=\"spouse\">Spouse/Partner</option>\n//                       <option value=\"brother\">Brother</option>\n//                       <option value=\"sister\">Sister</option>\n//                       <option value=\"grandfather\">Grandfather</option>\n//                       <option value=\"grandmother\">Grandmother</option>\n//                       <option value=\"other\">Other Family Member</option>\n//                     </select>\n//                   </div>\n\n//                   <div className=\"form-group\">\n//                     <label className=\"form-label\">🏥 Diagnosis/Condition</label>\n//                     <input\n//                       type=\"text\"\n//                       className=\"form-input\"\n//                       placeholder=\"Enter diagnosis or condition (optional)\"\n//                       value={diagnosis}\n//                       onChange={(e) => setDiagnosis(e.target.value)}\n//                     />\n//                   </div>\n\n//                   <div className=\"form-group\">\n//                     <label className=\"form-label\">📞 Phone Number</label>\n//                     <input\n//                       type=\"text\"\n//                       className=\"form-input\"\n//                       placeholder=\"Enter phone number\"\n//                       value={phoneNumber}\n//                       onChange={(e) => setPhoneNumber(e.target.value)}\n//                     />\n//                   </div>\n\n//                   <div className=\"form-actions\">\n//                     <button type=\"button\" className=\"btn btn-cancel\" onClick={resetForm}>\n//                       Cancel\n//                     </button>\n//                     <button type=\"submit\" className=\"btn btn-submit\">\n//                       {editingId ? \"Update Patient\" : \"Add Patient\"}\n//                     </button>\n//                   </div>\n//                 </form>\n//               </div>\n//             </div>\n//           )}\n\n//           <div style={{ marginBottom: \"32px\" }}>\n//             <h2 style={{ fontSize: \"24px\", fontWeight: \"bold\", marginBottom: \"16px\", color: \"#1f2937\" }}>\n//               📋 Patients List\n//             </h2>\n//             <p style={{ color: \"#6b7280\", marginBottom: \"24px\" }}>\n//               Manage all registered patients and their information\n//             </p>\n\n//             {patients.length === 0 ? (\n//               <div className=\"empty-state\">\n//                 <div className=\"empty-icon\">👥</div>\n//                 <h3 className=\"empty-title\">No Patients Yet</h3>\n//                 <p className=\"empty-subtitle\">Start by adding your first patient to the system.</p>\n//               </div>\n//             ) : (\n//               <div className=\"patient-grid\">\n//                 {patients.map((patient) => (\n//                   <div key={patient.id} className=\"patient-card\">\n//                     <div className=\"patient-header\">\n//                       <div>\n//                         <h3 className=\"patient-name\">\n//                           {patient.relationship === \"self\" ? \"👤\" : \"👥\"} {patient.name}\n//                         </h3>\n//                         <span className=\"patient-id\">ID: {patient.id}</span>\n//                       </div>\n//                       {patient.relationship !== \"self\" && (\n//                         <span\n//                           style={{\n//                             background: \"#e0e7ff\",\n//                             color: \"#4338ca\",\n//                             padding: \"4px 12px\",\n//                             borderRadius: \"20px\",\n//                             fontSize: \"12px\",\n//                             fontWeight: \"600\",\n//                           }}\n//                         >\n//                           {patient.relationship}\n//                         </span>\n//                       )}\n//                     </div>\n\n//                     <div className=\"patient-details\">\n//                       <div className=\"patient-detail\">\n//                         <span>🎂</span>\n//                         <span>Age: {patient.age} years</span>\n//                       </div>\n//                       {patient.gender && (\n//                         <div className=\"patient-detail\">\n//                           <span>⚧️</span>\n//                           <span>Gender: {patient.gender}</span>\n//                         </div>\n//                       )}\n//                       <div className=\"patient-detail\">\n//                         <span>🏥</span>\n//                         <span>Diagnosis: {patient.diagnosis || \"None specified\"}</span>\n//                       </div>\n//                       {patient.phone_number && (\n//                         <div className=\"patient-detail\">\n//                           <span>📞</span>\n//                           <span>Phone: {patient.phone_number}</span>\n//                         </div>\n//                       )}\n//                       {patient.relationship && (\n//                         <div className=\"patient-detail\">\n//                           <span>👥</span>\n//                           <span>Relationship: {patient.relationship}</span>\n//                         </div>\n//                       )}\n//                       {patient.created_at && (\n//                         <div className=\"patient-detail\">\n//                           <span>📅</span>\n//                           <span>Registered: {new Date(patient.created_at).toLocaleDateString()}</span>\n//                         </div>\n//                       )}\n//                     </div>\n\n//                     <div className=\"patient-actions\">\n//                       <button onClick={() => handleEdit(patient)} className=\"btn btn-edit\">\n//                         ✏️ Edit\n//                       </button>\n//                       <button onClick={() => handleDelete(patient.id)} className=\"btn btn-delete\">\n//                         🗑️ Delete\n//                       </button>\n//                     </div>\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n\n//           {toast && <Toast message={toast.message} type={toast.type} onClose={() => setToast(null)} />}\n//         </div>\n//       </div>\n//     </Layout>\n//   )\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n// \"use client\"\n\n// import { useState, useEffect } from \"react\"\n\n// const ReceptionistDashboard = () => {\n//   const [patients, setPatients] = useState([])\n//   const [loading, setLoading] = useState(true)\n//   const [showForm, setShowForm] = useState(false)\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     age: \"\",\n//     gender: \"\",\n//     diagnosis: \"\",\n//     phone_number: \"\",\n//     relationship: \"self\",\n//   })\n//   const [editingId, setEditingId] = useState(null)\n//   const [error, setError] = useState(\"\")\n//   const [success, setSuccess] = useState(\"\")\n\n//   const token = localStorage.getItem(\"token\")\n\n//   // Fetch patients on component mount\n//   useEffect(() => {\n//     fetchPatients()\n//   }, [])\n\n//   const fetchPatients = async () => {\n//     try {\n//       setLoading(true)\n//       const response = await fetch(\"http://localhost:8080/api/patients\", {\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       })\n\n//       if (response.ok) {\n//         const data = await response.json()\n//         setPatients(data || [])\n//         setError(\"\")\n//       } else {\n//         setError(\"Failed to fetch patients\")\n//       }\n//     } catch (err) {\n//       console.error(\"Error fetching patients:\", err)\n//       setError(\"Network error while fetching patients\")\n//     } finally {\n//       setLoading(false)\n//     }\n//   }\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault()\n\n//     try {\n//       const patientData = {\n//         name: formData.name,\n//         age: Number.parseInt(formData.age),\n//         gender: formData.gender,\n//         diagnosis: formData.diagnosis,\n//         phone_number: formData.phone_number,\n//         relationship: formData.relationship,\n//       }\n\n//       let url = \"http://localhost:8080/api/patients\"\n//       let method = \"POST\"\n\n//       if (editingId) {\n//         url = `http://localhost:8080/api/patients/${editingId}`\n//         method = \"PUT\"\n//       }\n\n//       const response = await fetch(url, {\n//         method,\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${token}`,\n//         },\n//         body: JSON.stringify(patientData),\n//       })\n\n//       if (response.ok) {\n//         setSuccess(editingId ? \"Patient updated successfully!\" : \"Patient added successfully!\")\n//         resetForm()\n//         fetchPatients()\n//       } else {\n//         const errorData = await response.json()\n//         setError(errorData.error || \"Failed to save patient\")\n//       }\n//     } catch (err) {\n//       console.error(\"Error saving patient:\", err)\n//       setError(\"Network error while saving patient\")\n//     }\n//   }\n\n//   const handleDelete = async (id) => {\n//     if (!window.confirm(\"Are you sure you want to delete this patient?\")) return\n\n//     try {\n//       const response = await fetch(`http://localhost:8080/api/patients/${id}`, {\n//         method: \"DELETE\",\n//         headers: {\n//           Authorization: `Bearer ${token}`,\n//         },\n//       })\n\n//       if (response.ok) {\n//         setSuccess(\"Patient deleted successfully!\")\n//         fetchPatients()\n//       } else {\n//         const errorData = await response.json()\n//         setError(errorData.error || \"Failed to delete patient\")\n//       }\n//     } catch (err) {\n//       console.error(\"Error deleting patient:\", err)\n//       setError(\"Network error while deleting patient\")\n//     }\n//   }\n\n//   const handleEdit = (patient) => {\n//     setFormData({\n//       name: patient.name || \"\",\n//       age: patient.age ? String(patient.age) : \"\",\n//       gender: patient.gender || \"\",\n//       diagnosis: patient.diagnosis || \"\",\n//       phone_number: patient.phone_number || \"\",\n//       relationship: patient.relationship || \"self\",\n//     })\n//     setEditingId(patient.id)\n//     setShowForm(true)\n//   }\n\n//   const resetForm = () => {\n//     setFormData({\n//       name: \"\",\n//       age: \"\",\n//       gender: \"\",\n//       diagnosis: \"\",\n//       phone_number: \"\",\n//       relationship: \"self\",\n//     })\n//     setEditingId(null)\n//     setShowForm(false)\n//   }\n\n//   return (\n//     <div className=\"receptionist-dashboard\">\n//       <div className=\"dashboard-header\">\n//         <h1>👩‍💼 Receptionist Dashboard</h1>\n//         <p>Manage patient registrations and information</p>\n//       </div>\n\n//       {/* Stats Cards */}\n//       <div className=\"stats-container\">\n//         <div className=\"stat-card\" style={{ backgroundColor: \"#4ade80\" }}>\n//           <div className=\"stat-content\">\n//             <h3>Total Patients</h3>\n//             <p className=\"stat-number\">{patients.length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👥</div>\n//         </div>\n\n//         <div className=\"stat-card\" style={{ backgroundColor: \"#60a5fa\" }}>\n//           <div className=\"stat-content\">\n//             <h3>Active Cases</h3>\n//             <p className=\"stat-number\">\n//               {patients.filter((p) => p.diagnosis && p.diagnosis !== \"None specified\").length}\n//             </p>\n//           </div>\n//           <div className=\"stat-icon\">🏥</div>\n//         </div>\n\n//         <div className=\"stat-card\" style={{ backgroundColor: \"#c084fc\" }}>\n//           <div className=\"stat-content\">\n//             <h3>Family Members</h3>\n//             <p className=\"stat-number\">{patients.filter((p) => p.relationship && p.relationship !== \"self\").length}</p>\n//           </div>\n//           <div className=\"stat-icon\">👨‍👩‍👧‍👦</div>\n//         </div>\n\n//         <div className=\"stat-card\" style={{ backgroundColor: \"#fb923c\" }}>\n//           <div className=\"stat-content\">\n//             <h3>Today's Registrations</h3>\n//             <p className=\"stat-number\">\n//               {\n//                 patients.filter(\n//                   (p) => p.created_at && new Date(p.created_at).toDateString() === new Date().toDateString(),\n//                 ).length\n//               }\n//             </p>\n//           </div>\n//           <div className=\"stat-icon\">📅</div>\n//         </div>\n//       </div>\n\n//       {/* Action Button */}\n//       <div className=\"action-container\">\n//         <button className=\"add-button\" onClick={() => setShowForm(true)}>\n//           ➕ Add New Patient\n//         </button>\n//       </div>\n\n//       {/* Error and Success Messages */}\n//       {error && (\n//         <div className=\"message error-message\">\n//           <p>❌ {error}</p>\n//           <button onClick={() => setError(\"\")}>×</button>\n//         </div>\n//       )}\n\n//       {success && (\n//         <div className=\"message success-message\">\n//           <p>✅ {success}</p>\n//           <button onClick={() => setSuccess(\"\")}>×</button>\n//         </div>\n//       )}\n\n//       {/* Patient List */}\n//       <div className=\"patients-section\">\n//         <h2>📋 Patient Records</h2>\n\n//         {loading ? (\n//           <div className=\"loading-container\">\n//             <div className=\"loading-spinner\"></div>\n//             <p>Loading patients...</p>\n//           </div>\n//         ) : patients.length === 0 ? (\n//           <div className=\"empty-state\">\n//             <div className=\"empty-icon\">👥</div>\n//             <h3>No Patients Yet</h3>\n//             <p>Start by adding your first patient to the system.</p>\n//           </div>\n//         ) : (\n//           <div className=\"patients-grid\">\n//             {patients.map((patient) => (\n//               <div key={patient.id} className=\"patient-card\">\n//                 <div className=\"patient-header\">\n//                   <h3>{patient.name}</h3>\n//                   <span className=\"patient-id\">ID: {patient.id}</span>\n//                 </div>\n\n//                 <div className=\"patient-details\">\n//                   <p>\n//                     <span>👤</span> Age: {patient.age} years\n//                   </p>\n//                   {patient.gender && (\n//                     <p>\n//                       <span>⚧️</span> Gender: {patient.gender}\n//                     </p>\n//                   )}\n//                   <p>\n//                     <span>🏥</span> Diagnosis: {patient.diagnosis || \"None specified\"}\n//                   </p>\n//                   {patient.phone_number && (\n//                     <p>\n//                       <span>📞</span> Phone: {patient.phone_number}\n//                     </p>\n//                   )}\n//                   {patient.relationship && (\n//                     <p>\n//                       <span>👥</span> Relationship: {patient.relationship}\n//                     </p>\n//                   )}\n//                 </div>\n\n//                 <div className=\"patient-actions\">\n//                   <button className=\"edit-button\" onClick={() => handleEdit(patient)}>\n//                     ✏️ Edit\n//                   </button>\n//                   <button className=\"delete-button\" onClick={() => handleDelete(patient.id)}>\n//                     🗑️ Delete\n//                   </button>\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Add/Edit Patient Form Modal */}\n//       {showForm && (\n//         <div className=\"modal-overlay\" onClick={() => resetForm()}>\n//           <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n//             <h2>{editingId ? \"Edit Patient\" : \"Add New Patient\"}</h2>\n\n//             <form onSubmit={handleSubmit}>\n//               <div className=\"form-group\">\n//                 <label>👤 Full Name</label>\n//                 <input\n//                   type=\"text\"\n//                   value={formData.name}\n//                   onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n//                   placeholder=\"Enter patient name\"\n//                   required\n//                 />\n//               </div>\n\n//               <div className=\"form-row\">\n//                 <div className=\"form-group\">\n//                   <label>🎂 Age</label>\n//                   <input\n//                     type=\"number\"\n//                     value={formData.age}\n//                     onChange={(e) => setFormData({ ...formData, age: e.target.value })}\n//                     placeholder=\"Enter age\"\n//                     required\n//                   />\n//                 </div>\n\n//                 <div className=\"form-group\">\n//                   <label>⚧️ Gender</label>\n//                   <select\n//                     value={formData.gender}\n//                     onChange={(e) => setFormData({ ...formData, gender: e.target.value })}\n//                   >\n//                     <option value=\"\">Select gender</option>\n//                     <option value=\"Male\">Male</option>\n//                     <option value=\"Female\">Female</option>\n//                     <option value=\"Other\">Other</option>\n//                   </select>\n//                 </div>\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label>📞 Phone Number</label>\n//                 <input\n//                   type=\"text\"\n//                   value={formData.phone_number}\n//                   onChange={(e) => setFormData({ ...formData, phone_number: e.target.value })}\n//                   placeholder=\"Enter phone number\"\n//                 />\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label>👥 Relationship</label>\n//                 <select\n//                   value={formData.relationship}\n//                   onChange={(e) => setFormData({ ...formData, relationship: e.target.value })}\n//                   required\n//                 >\n//                   <option value=\"self\">Self (Patient)</option>\n//                   <option value=\"son\">Son</option>\n//                   <option value=\"daughter\">Daughter</option>\n//                   <option value=\"spouse\">Spouse</option>\n//                   <option value=\"mother\">Mother</option>\n//                   <option value=\"father\">Father</option>\n//                   <option value=\"brother\">Brother</option>\n//                   <option value=\"sister\">Sister</option>\n//                   <option value=\"other\">Other</option>\n//                 </select>\n//               </div>\n\n//               <div className=\"form-group\">\n//                 <label>🏥 Diagnosis</label>\n//                 <textarea\n//                   value={formData.diagnosis}\n//                   onChange={(e) => setFormData({ ...formData, diagnosis: e.target.value })}\n//                   placeholder=\"Enter diagnosis or condition (optional)\"\n//                   rows=\"3\"\n//                 ></textarea>\n//               </div>\n\n//               <div className=\"form-actions\">\n//                 <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>\n//                   Cancel\n//                 </button>\n//                 <button type=\"submit\" className=\"submit-button\">\n//                   {editingId ? \"Update Patient\" : \"Add Patient\"}\n//                 </button>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       <style jsx>{`\n//         .receptionist-dashboard {\n//           padding: 20px;\n//           max-width: 1200px;\n//           margin: 0 auto;\n//         }\n        \n//         .dashboard-header {\n//           text-align: center;\n//           margin-bottom: 30px;\n//         }\n        \n//         .dashboard-header h1 {\n//           font-size: 32px;\n//           color: #4338ca;\n//           margin-bottom: 8px;\n//         }\n        \n//         .dashboard-header p {\n//           color: #6b7280;\n//           font-size: 16px;\n//         }\n        \n//         .stats-container {\n//           display: grid;\n//           grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n//           gap: 20px;\n//           margin-bottom: 30px;\n//         }\n        \n//         .stat-card {\n//           border-radius: 12px;\n//           padding: 20px;\n//           color: white;\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n//         }\n        \n//         .stat-content h3 {\n//           font-size: 16px;\n//           margin: 0 0 8px 0;\n//           opacity: 0.9;\n//         }\n        \n//         .stat-number {\n//           font-size: 28px;\n//           font-weight: bold;\n//           margin: 0;\n//         }\n        \n//         .stat-icon {\n//           font-size: 32px;\n//           opacity: 0.8;\n//         }\n        \n//         .action-container {\n//           display: flex;\n//           justify-content: center;\n//           margin-bottom: 30px;\n//         }\n        \n//         .add-button {\n//           background: linear-gradient(135deg, #4338ca 0%, #6366f1 100%);\n//           color: white;\n//           border: none;\n//           padding: 12px 24px;\n//           border-radius: 8px;\n//           font-size: 16px;\n//           font-weight: bold;\n//           cursor: pointer;\n//           box-shadow: 0 4px 6px rgba(99, 102, 241, 0.5);\n//           transition: all 0.3s ease;\n//         }\n        \n//         .add-button:hover {\n//           transform: translateY(-2px);\n//           box-shadow: 0 6px 10px rgba(99, 102, 241, 0.6);\n//         }\n        \n//         .message {\n//           padding: 12px 20px;\n//           border-radius: 8px;\n//           margin-bottom: 20px;\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//         }\n        \n//         .error-message {\n//           background-color: #fee2e2;\n//           border: 1px solid #fecaca;\n//           color: #b91c1c;\n//         }\n        \n//         .success-message {\n//           background-color: #dcfce7;\n//           border: 1px solid #bbf7d0;\n//           color: #15803d;\n//         }\n        \n//         .message p {\n//           margin: 0;\n//         }\n        \n//         .message button {\n//           background: none;\n//           border: none;\n//           font-size: 20px;\n//           cursor: pointer;\n//           color: inherit;\n//         }\n        \n//         .patients-section {\n//           margin-top: 20px;\n//         }\n        \n//         .patients-section h2 {\n//           font-size: 24px;\n//           color: #1f2937;\n//           margin-bottom: 20px;\n//         }\n        \n//         .loading-container {\n//           text-align: center;\n//           padding: 40px;\n//         }\n        \n//         .loading-spinner {\n//           width: 40px;\n//           height: 40px;\n//           border: 4px solid #e5e7eb;\n//           border-top: 4px solid #4338ca;\n//           border-radius: 50%;\n//           margin: 0 auto 16px;\n//           animation: spin 1s linear infinite;\n//         }\n        \n//         @keyframes spin {\n//           0% { transform: rotate(0deg); }\n//           100% { transform: rotate(360deg); }\n//         }\n        \n//         .empty-state {\n//           text-align: center;\n//           padding: 60px 20px;\n//           background-color: #f9fafb;\n//           border-radius: 12px;\n//           border: 2px dashed #e5e7eb;\n//         }\n        \n//         .empty-icon {\n//           font-size: 48px;\n//           margin-bottom: 16px;\n//           color: #9ca3af;\n//         }\n        \n//         .empty-state h3 {\n//           font-size: 20px;\n//           color: #4b5563;\n//           margin-bottom: 8px;\n//         }\n        \n//         .empty-state p {\n//           color: #6b7280;\n//         }\n        \n//         .patients-grid {\n//           display: grid;\n//           grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n//           gap: 20px;\n//         }\n        \n//         .patient-card {\n//           background-color: white;\n//           border-radius: 12px;\n//           padding: 20px;\n//           box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n//           border: 1px solid #e5e7eb;\n//           transition: all 0.3s ease;\n//         }\n        \n//         .patient-card:hover {\n//           transform: translateY(-4px);\n//           box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);\n//           border-color: #c7d2fe;\n//         }\n        \n//         .patient-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: flex-start;\n//           margin-bottom: 15px;\n//           border-bottom: 1px solid #f3f4f6;\n//           padding-bottom: 10px;\n//         }\n        \n//         .patient-header h3 {\n//           font-size: 18px;\n//           margin: 0;\n//           color: #1f2937;\n//         }\n        \n//         .patient-id {\n//           background-color: #e0e7ff;\n//           color: #4338ca;\n//           padding: 4px 8px;\n//           border-radius: 20px;\n//           font-size: 12px;\n//           font-weight: bold;\n//         }\n        \n//         .patient-details {\n//           margin-bottom: 15px;\n//         }\n        \n//         .patient-details p {\n//           margin: 8px 0;\n//           color: #4b5563;\n//           display: flex;\n//           align-items: center;\n//           gap: 8px;\n//         }\n        \n//         .patient-details span {\n//           font-size: 16px;\n//         }\n        \n//         .patient-actions {\n//           display: flex;\n//           gap: 10px;\n//         }\n        \n//         .edit-button, .delete-button {\n//           flex: 1;\n//           padding: 8px 0;\n//           border: none;\n//           border-radius: 6px;\n//           font-weight: bold;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//         }\n        \n//         .edit-button {\n//           background-color: #dbeafe;\n//           color: #2563eb;\n//         }\n        \n//         .edit-button:hover {\n//           background-color: #bfdbfe;\n//         }\n        \n//         .delete-button {\n//           background-color: #fee2e2;\n//           color: #dc2626;\n//         }\n        \n//         .delete-button:hover {\n//           background-color: #fecaca;\n//         }\n        \n//         .modal-overlay {\n//           position: fixed;\n//           top: 0;\n//           left: 0;\n//           right: 0;\n//           bottom: 0;\n//           background-color: rgba(0, 0, 0, 0.5);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           z-index: 1000;\n//           backdrop-filter: blur(4px);\n//         }\n        \n//         .modal-content {\n//           background-color: white;\n//           border-radius: 12px;\n//           padding: 30px;\n//           width: 90%;\n//           max-width: 500px;\n//           max-height: 90vh;\n//           overflow-y: auto;\n//           box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n//         }\n        \n//         .modal-content h2 {\n//           text-align: center;\n//           margin-top: 0;\n//           margin-bottom: 20px;\n//           color: #4338ca;\n//         }\n        \n//         .form-group {\n//           margin-bottom: 20px;\n//         }\n        \n//         .form-row {\n//           display: grid;\n//           grid-template-columns: 1fr 1fr;\n//           gap: 15px;\n//         }\n        \n//         .form-group label {\n//           display: block;\n//           margin-bottom: 8px;\n//           font-weight: bold;\n//           color: #4b5563;\n//         }\n        \n//         .form-group input, .form-group select, .form-group textarea {\n//           width: 100%;\n//           padding: 10px 12px;\n//           border: 2px solid #e5e7eb;\n//           border-radius: 6px;\n//           font-size: 16px;\n//           transition: all 0.3s ease;\n//         }\n        \n//         .form-group input:focus, .form-group select:focus, .form-group textarea:focus {\n//           outline: none;\n//           border-color: #a5b4fc;\n//           box-shadow: 0 0 0 3px rgba(165, 180, 252, 0.2);\n//         }\n        \n//         .form-actions {\n//           display: flex;\n//           gap: 15px;\n//           margin-top: 30px;\n//         }\n        \n//         .cancel-button, .submit-button {\n//           flex: 1;\n//           padding: 12px 0;\n//           border-radius: 6px;\n//           font-weight: bold;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//         }\n        \n//         .cancel-button {\n//           background-color: #f3f4f6;\n//           border: 1px solid #d1d5db;\n//           color: #4b5563;\n//         }\n        \n//         .cancel-button:hover {\n//           background-color: #e5e7eb;\n//         }\n        \n//         .submit-button {\n//           background-color: #4338ca;\n//           border: none;\n//           color: white;\n//         }\n        \n//         .submit-button:hover {\n//           background-color: #4f46e5;\n//         }\n//       `}</style>\n//     </div>\n//   )\n// }\n\n// export default ReceptionistDashboard\n\n\n\n\n\n\n\n\n\n\n\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport Layout from \"../components/Layout\"\n\nconst ReceptionistDashboard = () => {\n  const [patients, setPatients] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [showForm, setShowForm] = useState(false)\n  const [formData, setFormData] = useState({\n    name: \"\",\n    age: \"\",\n    gender: \"\",\n    diagnosis: \"\",\n    phone_number: \"\",\n    relationship: \"self\",\n  })\n  const [editingId, setEditingId] = useState(null)\n  const [error, setError] = useState(\"\")\n  const [success, setSuccess] = useState(\"\")\n\n  const token = localStorage.getItem(\"token\")\n\n  // Fetch patients on component mount\n  useEffect(() => {\n    fetchPatients()\n  }, [])\n\n  const fetchPatients = async () => {\n    try {\n      setLoading(true)\n      const response = await fetch(\"http://localhost:8080/api/patients\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        setPatients(data || [])\n        setError(\"\")\n      } else {\n        setError(\"Failed to fetch patients\")\n      }\n    } catch (err) {\n      console.error(\"Error fetching patients:\", err)\n      setError(\"Network error while fetching patients\")\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    try {\n      const patientData = {\n        name: formData.name,\n        age: Number.parseInt(formData.age),\n        gender: formData.gender,\n        diagnosis: formData.diagnosis,\n        phone_number: formData.phone_number,\n        relationship: formData.relationship,\n      }\n\n      let url = \"http://localhost:8080/api/patients\"\n      let method = \"POST\"\n\n      if (editingId) {\n        url = `http://localhost:8080/api/patients/${editingId}`\n        method = \"PUT\"\n      }\n\n      const response = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(patientData),\n      })\n\n      if (response.ok) {\n        setSuccess(editingId ? \"Patient updated successfully!\" : \"Patient added successfully!\")\n        resetForm()\n        fetchPatients()\n      } else {\n        const errorData = await response.json()\n        setError(errorData.error || \"Failed to save patient\")\n      }\n    } catch (err) {\n      console.error(\"Error saving patient:\", err)\n      setError(\"Network error while saving patient\")\n    }\n  }\n\n  const handleDelete = async (id) => {\n    if (!window.confirm(\"Are you sure you want to delete this patient?\")) return\n\n    try {\n      const response = await fetch(`http://localhost:8080/api/patients/${id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n\n      if (response.ok) {\n        setSuccess(\"Patient deleted successfully!\")\n        fetchPatients()\n      } else {\n        const errorData = await response.json()\n        setError(errorData.error || \"Failed to delete patient\")\n      }\n    } catch (err) {\n      console.error(\"Error deleting patient:\", err)\n      setError(\"Network error while deleting patient\")\n    }\n  }\n\n  const handleEdit = (patient) => {\n    setFormData({\n      name: patient.name || \"\",\n      age: patient.age ? String(patient.age) : \"\",\n      gender: patient.gender || \"\",\n      diagnosis: patient.diagnosis || \"\",\n      phone_number: patient.phone_number || \"\",\n      relationship: patient.relationship || \"self\",\n    })\n    setEditingId(patient.id)\n    setShowForm(true)\n  }\n\n  const resetForm = () => {\n    setFormData({\n      name: \"\",\n      age: \"\",\n      gender: \"\",\n      diagnosis: \"\",\n      phone_number: \"\",\n      relationship: \"self\",\n    })\n    setEditingId(null)\n    setShowForm(false)\n  }\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"user\")\n    window.location.href = \"/login\"\n  }\n\n  return (\n    <Layout>\n      <div className=\"receptionist-dashboard\">\n        <div className=\"dashboard-header\">\n          <div className=\"header-content\">\n            <div>\n              <h1>👩‍💼 Receptionist Dashboard</h1>\n              <p>Manage patient registrations and information</p>\n            </div>\n            <button className=\"logout-button\" onClick={handleLogout}>\n              🚪 Logout\n            </button>\n          </div>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"stats-container\">\n          <div className=\"stat-card\" style={{ backgroundColor: \"#4ade80\" }}>\n            <div className=\"stat-content\">\n              <h3>Total Patients</h3>\n              <p className=\"stat-number\">{patients.length}</p>\n            </div>\n            <div className=\"stat-icon\">👥</div>\n          </div>\n\n          <div className=\"stat-card\" style={{ backgroundColor: \"#60a5fa\" }}>\n            <div className=\"stat-content\">\n              <h3>Active Cases</h3>\n              <p className=\"stat-number\">\n                {patients.filter((p) => p.diagnosis && p.diagnosis !== \"None specified\").length}\n              </p>\n            </div>\n            <div className=\"stat-icon\">🏥</div>\n          </div>\n\n          <div className=\"stat-card\" style={{ backgroundColor: \"#c084fc\" }}>\n            <div className=\"stat-content\">\n              <h3>Family Members</h3>\n              <p className=\"stat-number\">\n                {patients.filter((p) => p.relationship && p.relationship !== \"self\").length}\n              </p>\n            </div>\n            <div className=\"stat-icon\">👨‍👩‍👧‍👦</div>\n          </div>\n\n          <div className=\"stat-card\" style={{ backgroundColor: \"#fb923c\" }}>\n            <div className=\"stat-content\">\n              <h3>Today's Registrations</h3>\n              <p className=\"stat-number\">\n                {\n                  patients.filter(\n                    (p) => p.created_at && new Date(p.created_at).toDateString() === new Date().toDateString(),\n                  ).length\n                }\n              </p>\n            </div>\n            <div className=\"stat-icon\">📅</div>\n          </div>\n        </div>\n\n        {/* Action Button */}\n        <div className=\"action-container\">\n          <button className=\"add-button\" onClick={() => setShowForm(true)}>\n            ➕ Add New Patient\n          </button>\n        </div>\n\n        {/* Error and Success Messages */}\n        {error && (\n          <div className=\"message error-message\">\n            <p>❌ {error}</p>\n            <button onClick={() => setError(\"\")}>×</button>\n          </div>\n        )}\n\n        {success && (\n          <div className=\"message success-message\">\n            <p>✅ {success}</p>\n            <button onClick={() => setSuccess(\"\")}>×</button>\n          </div>\n        )}\n\n        {/* Patient List */}\n        <div className=\"patients-section\">\n          <h2>📋 Patient Records</h2>\n\n          {loading ? (\n            <div className=\"loading-container\">\n              <div className=\"loading-spinner\"></div>\n              <p>Loading patients...</p>\n            </div>\n          ) : patients.length === 0 ? (\n            <div className=\"empty-state\">\n              <div className=\"empty-icon\">👥</div>\n              <h3>No Patients Yet</h3>\n              <p>Start by adding your first patient to the system.</p>\n            </div>\n          ) : (\n            <div className=\"patients-grid\">\n              {patients.map((patient) => (\n                <div key={patient.id} className=\"patient-card\">\n                  <div className=\"patient-header\">\n                    <h3>{patient.name}</h3>\n                    <span className=\"patient-id\">ID: {patient.id}</span>\n                  </div>\n\n                  <div className=\"patient-details\">\n                    <p>\n                      <span>👤</span> Age: {patient.age} years\n                    </p>\n                    {patient.gender && (\n                      <p>\n                        <span>⚧️</span> Gender: {patient.gender}\n                      </p>\n                    )}\n                    <p>\n                      <span>🏥</span> Diagnosis: {patient.diagnosis || \"None specified\"}\n                    </p>\n                    {patient.phone_number && (\n                      <p>\n                        <span>📞</span> Phone: {patient.phone_number}\n                      </p>\n                    )}\n                    {patient.relationship && (\n                      <p>\n                        <span>👥</span> Relationship: {patient.relationship}\n                      </p>\n                    )}\n                  </div>\n\n                  <div className=\"patient-actions\">\n                    <button className=\"edit-button\" onClick={() => handleEdit(patient)}>\n                      ✏️ Edit\n                    </button>\n                    <button className=\"delete-button\" onClick={() => handleDelete(patient.id)}>\n                      🗑️ Delete\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Add/Edit Patient Form Modal */}\n        {showForm && (\n          <div className=\"modal-overlay\" onClick={() => resetForm()}>\n            <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n              <h2>{editingId ? \"Edit Patient\" : \"Add New Patient\"}</h2>\n\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label>👤 Full Name</label>\n                  <input\n                    type=\"text\"\n                    value={formData.name}\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                    placeholder=\"Enter patient name\"\n                    required\n                  />\n                </div>\n\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label>🎂 Age</label>\n                    <input\n                      type=\"number\"\n                      value={formData.age}\n                      onChange={(e) => setFormData({ ...formData, age: e.target.value })}\n                      placeholder=\"Enter age\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label>⚧️ Gender</label>\n                    <select\n                      value={formData.gender}\n                      onChange={(e) => setFormData({ ...formData, gender: e.target.value })}\n                    >\n                      <option value=\"\">Select gender</option>\n                      <option value=\"Male\">Male</option>\n                      <option value=\"Female\">Female</option>\n                      <option value=\"Other\">Other</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <label>📞 Phone Number</label>\n                  <input\n                    type=\"text\"\n                    value={formData.phone_number}\n                    onChange={(e) => setFormData({ ...formData, phone_number: e.target.value })}\n                    placeholder=\"Enter phone number\"\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label>👥 Relationship</label>\n                  <select\n                    value={formData.relationship}\n                    onChange={(e) => setFormData({ ...formData, relationship: e.target.value })}\n                    required\n                  >\n                    <option value=\"self\">Self (Patient)</option>\n                    <option value=\"son\">Son</option>\n                    <option value=\"daughter\">Daughter</option>\n                    <option value=\"spouse\">Spouse</option>\n                    <option value=\"mother\">Mother</option>\n                    <option value=\"father\">Father</option>\n                    <option value=\"brother\">Brother</option>\n                    <option value=\"sister\">Sister</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label>🏥 Diagnosis</label>\n                  <textarea\n                    value={formData.diagnosis}\n                    onChange={(e) => setFormData({ ...formData, diagnosis: e.target.value })}\n                    placeholder=\"Enter diagnosis or condition (optional)\"\n                    rows=\"3\"\n                  ></textarea>\n                </div>\n\n                <div className=\"form-actions\">\n                  <button type=\"button\" className=\"cancel-button\" onClick={resetForm}>\n                    Cancel\n                  </button>\n                  <button type=\"submit\" className=\"submit-button\">\n                    {editingId ? \"Update Patient\" : \"Add Patient\"}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n        <style jsx>{`\n          .receptionist-dashboard {\n            padding: 0;\n            max-width: 100%;\n          }\n          \n          .dashboard-header {\n            text-align: center;\n            margin-bottom: 30px;\n          }\n          \n          .dashboard-header h1 {\n            font-size: 32px;\n            color: #4338ca;\n            margin-bottom: 8px;\n          }\n          \n          .dashboard-header p {\n            color: #6b7280;\n            font-size: 16px;\n          }\n\n          .header-content {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            max-width: 1200px;\n            margin: 0 auto;\n          }\n\n          .logout-button {\n            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);\n            color: white;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 8px;\n            font-size: 14px;\n            font-weight: bold;\n            cursor: pointer;\n            box-shadow: 0 2px 4px rgba(239, 68, 68, 0.3);\n            transition: all 0.2s ease;\n          }\n\n          .logout-button:hover {\n            transform: translateY(-1px);\n            box-shadow: 0 4px 8px rgba(239, 68, 68, 0.4);\n          }\n          \n          .stats-container {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 20px;\n            margin-bottom: 30px;\n          }\n          \n          .stat-card {\n            border-radius: 12px;\n            padding: 20px;\n            color: white;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n          }\n          \n          .stat-content h3 {\n            font-size: 16px;\n            margin: 0 0 8px 0;\n            opacity: 0.9;\n          }\n          \n          .stat-number {\n            font-size: 28px;\n            font-weight: bold;\n            margin: 0;\n          }\n          \n          .stat-icon {\n            font-size: 32px;\n            opacity: 0.8;\n          }\n          \n          .action-container {\n            display: flex;\n            justify-content: center;\n            margin-bottom: 30px;\n          }\n          \n          .add-button {\n            background: linear-gradient(135deg, #4338ca 0%, #6366f1 100%);\n            color: white;\n            border: none;\n            padding: 12px 24px;\n            border-radius: 8px;\n            font-size: 16px;\n            font-weight: bold;\n            cursor: pointer;\n            box-shadow: 0 4px 6px rgba(99, 102, 241, 0.5);\n            transition: all 0.3s ease;\n          }\n          \n          .add-button:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 6px 10px rgba(99, 102, 241, 0.6);\n          }\n          \n          .message {\n            padding: 12px 20px;\n            border-radius: 8px;\n            margin-bottom: 20px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n          }\n          \n          .error-message {\n            background-color: #fee2e2;\n            border: 1px solid #fecaca;\n            color: #b91c1c;\n          }\n          \n          .success-message {\n            background-color: #dcfce7;\n            border: 1px solid #bbf7d0;\n            color: #15803d;\n          }\n          \n          .message p {\n            margin: 0;\n          }\n          \n          .message button {\n            background: none;\n            border: none;\n            font-size: 20px;\n            cursor: pointer;\n            color: inherit;\n          }\n          \n          .patients-section {\n            margin-top: 20px;\n          }\n          \n          .patients-section h2 {\n            font-size: 24px;\n            color: #1f2937;\n            margin-bottom: 20px;\n          }\n          \n          .loading-container {\n            text-align: center;\n            padding: 40px;\n          }\n          \n          .loading-spinner {\n            width: 40px;\n            height: 40px;\n            border: 4px solid #e5e7eb;\n            border-top: 4px solid #4338ca;\n            border-radius: 50%;\n            margin: 0 auto 16px;\n            animation: spin 1s linear infinite;\n          }\n          \n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n          \n          .empty-state {\n            text-align: center;\n            padding: 60px 20px;\n            background-color: #f9fafb;\n            border-radius: 12px;\n            border: 2px dashed #e5e7eb;\n          }\n          \n          .empty-icon {\n            font-size: 48px;\n            margin-bottom: 16px;\n            color: #9ca3af;\n          }\n          \n          .empty-state h3 {\n            font-size: 20px;\n            color: #4b5563;\n            margin-bottom: 8px;\n          }\n          \n          .empty-state p {\n            color: #6b7280;\n          }\n          \n          .patients-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n            gap: 20px;\n          }\n          \n          .patient-card {\n            background-color: white;\n            border-radius: 12px;\n            padding: 20px;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n            border: 1px solid #e5e7eb;\n            transition: all 0.3s ease;\n          }\n          \n          .patient-card:hover {\n            transform: translateY(-4px);\n            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);\n            border-color: #c7d2fe;\n          }\n          \n          .patient-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: flex-start;\n            margin-bottom: 15px;\n            border-bottom: 1px solid #f3f4f6;\n            padding-bottom: 10px;\n          }\n          \n          .patient-header h3 {\n            font-size: 18px;\n            margin: 0;\n            color: #1f2937;\n          }\n          \n          .patient-id {\n            background-color: #e0e7ff;\n            color: #4338ca;\n            padding: 4px 8px;\n            border-radius: 20px;\n            font-size: 12px;\n            font-weight: bold;\n          }\n          \n          .patient-details {\n            margin-bottom: 15px;\n          }\n          \n          .patient-details p {\n            margin: 8px 0;\n            color: #4b5563;\n            display: flex;\n            align-items: center;\n            gap: 8px;\n          }\n          \n          .patient-details span {\n            font-size: 16px;\n          }\n          \n          .patient-actions {\n            display: flex;\n            gap: 10px;\n          }\n          \n          .edit-button, .delete-button {\n            flex: 1;\n            padding: 8px 0;\n            border: none;\n            border-radius: 6px;\n            font-weight: bold;\n            cursor: pointer;\n            transition: all 0.2s ease;\n          }\n          \n          .edit-button {\n            background-color: #dbeafe;\n            color: #2563eb;\n          }\n          \n          .edit-button:hover {\n            background-color: #bfdbfe;\n          }\n          \n          .delete-button {\n            background-color: #fee2e2;\n            color: #dc2626;\n          }\n          \n          .delete-button:hover {\n            background-color: #fecaca;\n          }\n          \n          .modal-overlay {\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background-color: rgba(0, 0, 0, 0.5);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            z-index: 1000;\n            backdrop-filter: blur(4px);\n          }\n          \n          .modal-content {\n            background-color: white;\n            border-radius: 12px;\n            padding: 30px;\n            width: 90%;\n            max-width: 500px;\n            max-height: 90vh;\n            overflow-y: auto;\n            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n          }\n          \n          .modal-content h2 {\n            text-align: center;\n            margin-top: 0;\n            margin-bottom: 20px;\n            color: #4338ca;\n          }\n          \n          .form-group {\n            margin-bottom: 20px;\n          }\n          \n          .form-row {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 15px;\n          }\n          \n          .form-group label {\n            display: block;\n            margin-bottom: 8px;\n            font-weight: bold;\n            color: #4b5563;\n          }\n          \n          .form-group input, .form-group select, .form-group textarea {\n            width: 100%;\n            padding: 10px 12px;\n            border: 2px solid #e5e7eb;\n            border-radius: 6px;\n            font-size: 16px;\n            transition: all 0.3s ease;\n            box-sizing: border-box;\n          }\n          \n          .form-group input:focus, .form-group select:focus, .form-group textarea:focus {\n            outline: none;\n            border-color: #a5b4fc;\n            box-shadow: 0 0 0 3px rgba(165, 180, 252, 0.2);\n          }\n          \n          .form-actions {\n            display: flex;\n            gap: 15px;\n            margin-top: 30px;\n          }\n          \n          .cancel-button, .submit-button {\n            flex: 1;\n            padding: 12px 0;\n            border-radius: 6px;\n            font-weight: bold;\n            cursor: pointer;\n            transition: all 0.2s ease;\n          }\n          \n          .cancel-button {\n            background-color: #f3f4f6;\n            border: 1px solid #d1d5db;\n            color: #4b5563;\n          }\n          \n          .cancel-button:hover {\n            background-color: #e5e7eb;\n          }\n          \n          .submit-button {\n            background-color: #4338ca;\n            border: none;\n            color: white;\n          }\n          \n          .submit-button:hover {\n            background-color: #4f46e5;\n          }\n        `}</style>\n      </div>\n    </Layout>\n  )\n}\n\nexport default ReceptionistDashboard\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}