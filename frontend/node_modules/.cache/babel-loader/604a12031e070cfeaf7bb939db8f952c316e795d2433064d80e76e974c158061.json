{"ast":null,"code":"var _jsxFileName = \"/Users/sathwik/hospital-portal/frontend/src/pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const res = await fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!res.ok) {\n        const errData = await res.json();\n        alert(errData.error || \"Login failed\");\n        return;\n      }\n      const data = await res.json();\n      if (data.token && data.role) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('role', data.role);\n        navigate('/dashboard');\n      } else {\n        alert(\"Login failed: No token or role\");\n      }\n    } catch (err) {\n      alert(\"Failed to connect to backend.\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-blue-300 to-purple-400\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded shadow-md w-80\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4 text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        className: \"w-full mb-3 px-4 py-2 border rounded\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        className: \"w-full mb-3 px-4 py-2 border rounded\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        className: \"w-full bg-blue-500 hover:bg-blue-600 text-white py-2 rounded\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","navigate","handleLogin","res","fetch","method","headers","body","JSON","stringify","ok","errData","json","alert","error","data","token","role","localStorage","setItem","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/sathwik/hospital-portal/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    try {\n      const res = await fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (!res.ok) {\n        const errData = await res.json();\n        alert(errData.error || \"Login failed\");\n        return;\n      }\n\n      const data = await res.json();\n      if (data.token && data.role) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('role', data.role);\n        navigate('/dashboard');\n      } else {\n        alert(\"Login failed: No token or role\");\n      }\n    } catch (err) {\n      alert(\"Failed to connect to backend.\");\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-blue-300 to-purple-400\">\n      <div className=\"bg-white p-6 rounded shadow-md w-80\">\n        <h1 className=\"text-2xl font-bold mb-4 text-center\">Login</h1>\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          className=\"w-full mb-3 px-4 py-2 border rounded\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          className=\"w-full mb-3 px-4 py-2 border rounded\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button\n          onClick={handleLogin}\n          className=\"w-full bg-blue-500 hover:bg-blue-600 text-white py-2 rounded\"\n        >\n          Login\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}